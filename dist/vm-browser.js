#!/usr/bin/env node
/*! For license information please see vm-browser.js.LICENSE.txt */
(()=>{var e={4795:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(5262);function i(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function r(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}t.getBoxSize=i,t.getBoxCenter=r,t.cutBoxFromImageAndResize=function(e,t,n){var i=t.shape[1],r=t.shape[2],s=[[e.startPoint[1]/i,e.startPoint[0]/r,e.endPoint[1]/i,e.endPoint[0]/r]];return a.image.cropAndResize(t,s,[0],n)},t.scaleBoxCoordinates=function(e,t){return{startPoint:[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],endPoint:[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],palmLandmarks:e.palmLandmarks.map((function(e){return[e[0]*t[0],e[1]*t[1]]}))}},t.enlargeBox=function(e,t){void 0===t&&(t=1.5);var n=r(e),a=i(e),s=[t*a[0]/2,t*a[1]/2];return{startPoint:[n[0]-s[0],n[1]-s[1]],endPoint:[n[0]+s[0],n[1]+s[1]],palmLandmarks:e.palmLandmarks}},t.squarifyBox=function(e){var t=r(e),n=i(e),a=Math.max.apply(Math,n)/2;return{startPoint:[t[0]-a,t[1]-a],endPoint:[t[0]+a,t[1]+a],palmLandmarks:e.palmLandmarks}},t.shiftBox=function(e,t){var n=[e.endPoint[0]-e.startPoint[0],e.endPoint[1]-e.startPoint[1]],a=[n[0]*t[0],n[1]*t[1]];return{startPoint:[e.startPoint[0]+a[0],e.startPoint[1]+a[1]],endPoint:[e.endPoint[0]+a[0],e.endPoint[1]+a[1]],palmLandmarks:e.palmLandmarks}}},4866:function(e,t,n){"use strict";var a=this&&this.__awaiter||function(e,t,n,a){return new(n||(n=Promise))((function(i,r){function s(e){try{p(a.next(e))}catch(e){r(e)}}function o(e){try{p(a.throw(e))}catch(e){r(e)}}function p(e){e.done?i(e.value):new n((function(t){t(e.value)})).then(s,o)}p((a=a.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var n,a,i,r,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function o(r){return function(o){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,a&&(i=2&r[0]?a.return:r[0]?a.throw||((i=a.return)&&i.call(a),0):a.next)&&!(i=i.call(a,r[1])).done)return i;switch(a=0,i&&(r=[2&r[0],i.value]),r[0]){case 0:case 1:i=r;break;case 4:return s.label++,{value:r[1],done:!1};case 5:s.label++,a=r[1],r=[0];continue;case 7:r=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==r[0]&&2!==r[0])){s=0;continue}if(3===r[0]&&(!i||r[1]>i[0]&&r[1]<i[3])){s.label=r[1];break}if(6===r[0]&&s.label<i[1]){s.label=i[1],i=r;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(r);break}i[2]&&s.ops.pop(),s.trys.pop();continue}r=t.call(e,s)}catch(e){r=[6,e],a=0}finally{n=i=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,o])}}};Object.defineProperty(t,"__esModule",{value:!0});var r=n(5262),s=n(4795),o=function(){function e(e,t,n,a,i,s){this.model=e,this.width=t,this.height=n,this.iouThreshold=i,this.scoreThreshold=s,this.anchors=a.map((function(e){return[e.x_center,e.y_center]})),this.anchorsTensor=r.tensor2d(this.anchors),this.inputSizeTensor=r.tensor1d([t,n]),this.doubleInputSizeTensor=r.tensor1d([2*t,2*n])}return e.prototype.normalizeBoxes=function(e){var t=this;return r.tidy((function(){var n=r.slice(e,[0,0],[-1,2]),a=r.slice(e,[0,2],[-1,2]),i=r.add(r.div(n,t.inputSizeTensor),t.anchorsTensor),s=r.div(a,t.doubleInputSizeTensor),o=r.mul(r.sub(i,s),t.inputSizeTensor),p=r.mul(r.add(i,s),t.inputSizeTensor);return r.concat2d([o,p],1)}))},e.prototype.normalizeLandmarks=function(e,t){var n=this;return r.tidy((function(){var a=r.add(r.div(r.reshape(e,[-1,7,2]),n.inputSizeTensor),n.anchors[t]);return r.mul(a,n.inputSizeTensor)}))},e.prototype.getBoundingBoxes=function(e){return a(this,void 0,void 0,(function(){var t,n,a,s,o,p,l,d,u,c,h,m,f,g,v,y=this;return i(this,(function(i){switch(i.label){case 0:return t=r.tidy((function(){return r.mul(r.sub(e,.5),2)})),"webgl"===r.getBackend()?(a=r.env().get("WEBGL_PACK_DEPTHWISECONV"),r.env().set("WEBGL_PACK_DEPTHWISECONV",!0),n=this.model.predict(t),r.env().set("WEBGL_PACK_DEPTHWISECONV",a)):n=this.model.predict(t),s=r.squeeze(n),o=r.tidy((function(){return r.squeeze(r.sigmoid(r.slice(s,[0,0],[-1,1])))})),p=r.slice(s,[0,1],[-1,4]),l=this.normalizeBoxes(p),d=console.warn,console.warn=function(){},u=r.image.nonMaxSuppression(l,o,1,this.iouThreshold,this.scoreThreshold),console.warn=d,[4,u.array()];case 1:return c=i.sent(),h=[t,n,u,s,l,p,o],0===c.length?(h.forEach((function(e){return e.dispose()})),[2,null]):(m=c[0],f=r.slice(l,[m,0],[1,-1]),g=r.slice(s,[m,5],[1,14]),v=r.tidy((function(){return r.reshape(y.normalizeLandmarks(g,m),[-1,2])})),h.push(g),h.forEach((function(e){return e.dispose()})),[2,{boxes:f,palmLandmarks:v}])}}))}))},e.prototype.estimateHandBounds=function(e){return a(this,void 0,void 0,(function(){var t,n,a,o,p,l,d,u,c=this;return i(this,(function(i){switch(i.label){case 0:return t=e.shape[1],n=e.shape[2],a=r.tidy((function(){return r.div(r.image.resizeBilinear(e,[c.width,c.height]),255)})),[4,this.getBoundingBoxes(a)];case 1:return null===(o=i.sent())?(a.dispose(),[2,null]):(p=o.boxes.arraySync(),l=p[0].slice(0,2),d=p[0].slice(2,4),u=o.palmLandmarks.arraySync(),a.dispose(),o.boxes.dispose(),o.palmLandmarks.dispose(),[2,s.scaleBoxCoordinates({startPoint:l,endPoint:d,palmLandmarks:u},[n/this.width,t/this.height])])}}))}))},e}();t.HandDetector=o},9208:(e,t)=>{"use strict";t.d={thumb:[1,2,3,4],indexFinger:[5,6,7,8],middleFinger:[9,10,11,12],ringFinger:[13,14,15,16],pinky:[17,18,19,20],palmBase:[0]}},9137:function(e,t,n){"use strict";var a=this&&this.__awaiter||function(e,t,n,a){return new(n||(n=Promise))((function(i,r){function s(e){try{p(a.next(e))}catch(e){r(e)}}function o(e){try{p(a.throw(e))}catch(e){r(e)}}function p(e){e.done?i(e.value):new n((function(t){t(e.value)})).then(s,o)}p((a=a.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var n,a,i,r,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function o(r){return function(o){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,a&&(i=2&r[0]?a.return:r[0]?a.throw||((i=a.return)&&i.call(a),0):a.next)&&!(i=i.call(a,r[1])).done)return i;switch(a=0,i&&(r=[2&r[0],i.value]),r[0]){case 0:case 1:i=r;break;case 4:return s.label++,{value:r[1],done:!1};case 5:s.label++,a=r[1],r=[0];continue;case 7:r=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==r[0]&&2!==r[0])){s=0;continue}if(3===r[0]&&(!i||r[1]>i[0]&&r[1]<i[3])){s.label=r[1];break}if(6===r[0]&&s.label<i[1]){s.label=i[1],i=r;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(r);break}i[2]&&s.ops.pop(),s.trys.pop();continue}r=t.call(e,s)}catch(e){r=[6,e],a=0}finally{n=i=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,o])}}};Object.defineProperty(t,"__esModule",{value:!0});var r=n(5262),s=n(4795),o=n(1103),p=[0,-.4],l=[0,-.1],d=[0,5,9,13,17,1,2],u=function(){function e(e,t,n,a,i,r){this.boundingBoxDetector=e,this.meshDetector=t,this.meshWidth=n,this.meshHeight=a,this.maxContinuousChecks=i,this.detectionConfidence=r,this.regionsOfInterest=[],this.runsWithoutHandDetector=0,this.maxHandsNumber=1}return e.prototype.getBoxForPalmLandmarks=function(e,t){var n=e.map((function(e){var n=e.concat([1]);return o.rotatePoint(n,t)})),a=this.calculateLandmarksBoundingBox(n);return s.enlargeBox(s.squarifyBox(s.shiftBox(a,p)),3)},e.prototype.getBoxForHandLandmarks=function(e){for(var t=this.calculateLandmarksBoundingBox(e),n=s.enlargeBox(s.squarifyBox(s.shiftBox(t,l)),1.65),a=[],i=0;i<d.length;i++)a.push(e[d[i]].slice(0,2));return n.palmLandmarks=a,n},e.prototype.transformRawCoords=function(e,t,n,a){var i=this,r=s.getBoxSize(t),p=[r[0]/this.meshWidth,r[1]/this.meshHeight],l=e.map((function(e){return[p[0]*(e[0]-i.meshWidth/2),p[1]*(e[1]-i.meshHeight/2),e[2]]})),d=o.buildRotationMatrix(n,[0,0]),u=l.map((function(e){return o.rotatePoint(e,d).concat([e[2]])})),c=o.invertTransformMatrix(a),h=s.getBoxCenter(t).concat([1]),m=[o.dot(h,c[0]),o.dot(h,c[1])];return u.map((function(e){return[e[0]+m[0],e[1]+m[1],e[2]]}))},e.prototype.estimateHand=function(e){return a(this,void 0,void 0,(function(){var t,n,a,p,l,d,u,c,h,m,f,g,v,y,x,b,w,_,S,T;return i(this,(function(i){switch(i.label){case 0:return!0!==(t=this.shouldUpdateRegionsOfInterest())?[3,2]:[4,this.boundingBoxDetector.estimateHandBounds(e)];case 1:return null===(n=i.sent())?(e.dispose(),this.regionsOfInterest=[],[2,null]):(this.updateRegionsOfInterest(n,!0),this.runsWithoutHandDetector=0,[3,3]);case 2:this.runsWithoutHandDetector++,i.label=3;case 3:return a=this.regionsOfInterest[0],p=o.computeRotation(a.palmLandmarks[0],a.palmLandmarks[2]),l=s.getBoxCenter(a),d=[l[0]/e.shape[2],l[1]/e.shape[1]],u=r.image.rotateWithOffset(e,p,0,d),c=o.buildRotationMatrix(-p,l),h=!0===t?this.getBoxForPalmLandmarks(a.palmLandmarks,c):a,m=s.cutBoxFromImageAndResize(h,u,[this.meshWidth,this.meshHeight]),f=r.div(m,255),m.dispose(),u.dispose(),"webgl"===r.getBackend()?(v=r.env().get("WEBGL_PACK_DEPTHWISECONV"),r.env().set("WEBGL_PACK_DEPTHWISECONV",!0),g=this.meshDetector.predict(f),r.env().set("WEBGL_PACK_DEPTHWISECONV",v)):g=this.meshDetector.predict(f),y=g[0],x=g[1],f.dispose(),b=y.dataSync()[0],y.dispose(),b<this.detectionConfidence?(x.dispose(),this.regionsOfInterest=[],[2,null]):(w=r.reshape(x,[-1,3]),_=w.arraySync(),x.dispose(),w.dispose(),S=this.transformRawCoords(_,h,p,c),T=this.getBoxForHandLandmarks(S),this.updateRegionsOfInterest(T,!1),[2,{landmarks:S,handInViewConfidence:b,boundingBox:{topLeft:T.startPoint,bottomRight:T.endPoint}}])}}))}))},e.prototype.calculateLandmarksBoundingBox=function(e){var t=e.map((function(e){return e[0]})),n=e.map((function(e){return e[1]}));return{startPoint:[Math.min.apply(Math,t),Math.min.apply(Math,n)],endPoint:[Math.max.apply(Math,t),Math.max.apply(Math,n)]}},e.prototype.updateRegionsOfInterest=function(e,t){if(t)this.regionsOfInterest=[e];else{var n=this.regionsOfInterest[0],a=0;if(null!=n&&null!=n.startPoint){var i=e.startPoint,r=i[0],s=i[1],o=e.endPoint,p=o[0],l=o[1],d=n.startPoint,u=d[0],c=d[1],h=n.endPoint,m=h[0],f=h[1],g=Math.max(r,u),v=Math.max(s,c),y=(Math.min(p,m)-g)*(Math.min(l,f)-v);a=y/((p-r)*(l-s)+(m-u)*(f-s)-y)}this.regionsOfInterest[0]=a>.8?n:e}},e.prototype.shouldUpdateRegionsOfInterest=function(){return this.regionsOfInterest.length!==this.maxHandsNumber||this.runsWithoutHandDetector>=this.maxContinuousChecks},e}();t.HandPipeline=u},1103:(e,t)=>{"use strict";function n(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}Object.defineProperty(t,"__esModule",{value:!0}),t.normalizeRadians=n,t.computeRotation=function(e,t){return n(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))};var a=function(e,t){return[[1,0,e],[0,1,t],[0,0,1]]};function i(e,t){for(var n=0,a=0;a<e.length;a++)n+=e[a]*t[a];return n}function r(e,t){for(var n=[],a=0;a<e.length;a++)n.push(e[a][t]);return n}function s(e,t){for(var n=[],a=e.length,s=0;s<a;s++){n.push([]);for(var o=0;o<a;o++)n[s].push(i(e[s],r(t,o)))}return n}t.dot=i,t.getColumnFrom2DArr=r,t.buildRotationMatrix=function(e,t){var n=Math.cos(e),i=Math.sin(e),r=[[n,-i,0],[i,n,0],[0,0,1]],o=s(a(t[0],t[1]),r);return s(o,a(-t[0],-t[1]))},t.invertTransformMatrix=function(e){var t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],a=[-i(t[0],n),-i(t[1],n)];return[t[0].concat(a[0]),t[1].concat(a[1]),[0,0,1]]},t.rotatePoint=function(e,t){return[i(e,t[0]),i(e,t[1])]}},8713:(e,t,n)=>{"use strict";n.d(t,{JL:()=>a,Zu:()=>i});class a{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class i{refCount(e){return r("refCount")}incRef(e){return r("incRef")}timerAvailable(){return!0}time(e){return r("time")}read(e){return r("read")}readSync(e){return r("readSync")}readToGPU(e,t){return r("readToGPU")}numDataIds(){return r("numDataIds")}disposeData(e,t){return r("disposeData")}write(e,t,n){return r("write")}move(e,t,n,a,i){return r("move")}memory(){return r("memory")}floatPrecision(){return r("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return r("dispose")}}function r(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},3337:(e,t,n)=>{"use strict";function a(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,i=e.length,r=0,s=!1;for(;a<i;){r=a+(i-a>>>1);const o=n(t,e[r]);o>0?a=r+1:(i=r,s=!o)}return s?a:-a-1}(e,t,n||i)}(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function i(e,t){return e>t?1:e<t?-1:0}function r(e,t,n,a,i){return p(e,t,n,a,i,0)}function s(e,t,n,a,i,r){return p(e,t,n,a,i,0,!1,r,!0)}function o(e,t,n,a,i,r){return p(e,t,n,a,i,r,!0)}function p(e,t,n,i,r,s,o=!1,p=!1,c=!1){const h=[];for(let e=0;e<t.length;e++)t[e]>r&&h.push({score:t[e],boxIndex:e,suppressBeginIndex:0});h.sort(u);const m=s>0?-.5/s:0,f=[],g=[];for(;f.length<n&&h.length>0;){const t=h.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<r)break;let p=!1;for(let n=f.length-1;n>=o;--n){const a=l(e,s,f[n]);if(a>=i){p=!0;break}if(t.score=t.score*d(i,m,a),t.score<=r)break}t.suppressBeginIndex=f.length,p||(t.score===n?(f.push(s),g.push(t.score)):t.score>r&&a(h,t,u))}const v=f.length,y=n-v;p&&y>0&&(f.push(...new Array(y).fill(0)),g.push(...new Array(y).fill(0)));const x={selectedIndices:f};return o&&(x.selectedScores=g),c&&(x.validOutputs=v),x}function l(e,t,n){const a=e.subarray(4*t,4*t+4),i=e.subarray(4*n,4*n+4),r=Math.min(a[0],a[2]),s=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),l=Math.min(i[0],i[2]),d=Math.min(i[1],i[3]),u=Math.max(i[0],i[2]),c=Math.max(i[1],i[3]),h=(o-r)*(p-s),m=(u-l)*(c-d);if(h<=0||m<=0)return 0;const f=Math.max(r,l),g=Math.max(s,d),v=Math.min(o,u),y=Math.min(p,c),x=Math.max(v-f,0)*Math.max(y-g,0);return x/(h+m-x)}function d(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function u(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>r,qP:()=>s,pA:()=>o})},8333:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var a=n(2657);function i(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const i=(0,a.f)(e,"int32"),r=(0,a.f)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=i.indexToLoc(n[t]),s=t*e.length;r.values.set(a,s)}return r.toTensor()}},7097:(e,t,n)=>{"use strict";n.d(t,{BV:()=>b,wv:()=>x});var a=n(8713),i=n(2885),r=n(5938),s=n(9121),o=n(6151),p=n(4706),l=n(9122),d=n(569);class u{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new h)}profileKernel(e,t,n){let a;const r=()=>{a=n()};let s;const o=l.now();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(const e of a)e.dataSync();s=Promise.resolve({kernelMs:l.now()-o})}if((0,i.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<a.length;t++){const n=a[t];n.data().then((t=>{c(t,n.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:i,extraInfo:r}=e;n.forEach((e=>{Promise.all([e.data(),a,r]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],i,n[2])}))}))}}function c(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const a=e[t];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}class h{logKernelProfile(e,t,n,a,i,r){const s="number"==typeof a?d.oj(`${a}ms`,9):a.error,o=d.oj(e,25),p=t.rank,l=t.size,u=d.oj(t.shape.toString(),14);let c="";for(const e in i){const n=i[e];if(null!=n){const a=n.shape||t.shape,i=a.length;c+=`${e}: ${i}D ${i>0?a:""} `}}console.log(`%c${o}\t%c${s}\t%c${p}D ${u}\t%c${l}\t%c${c}\t%c${r}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var m=n(4077),f=n(747);function g(e){return null!=e.kernelName}class v{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class y{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new v}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(p.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new u(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof a.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,p.Z(`Initialization of backend ${e} failed`),p.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(t){return p.Z(`Initialization of backend ${e} failed`),p.Z(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:i}=this.initializeBackend(n);if(i||a)return{name:n,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,i=this.readSync(t),r=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,i,n.shape,n.dtype,r),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}clone(e){const t=b.runKernel(s.iJ,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return b.runKernel(s.RF,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==(0,o.pI)(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let i=0;n.forEach((e=>{i+="complex64"===e.dtype?3:1}));const r=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=a-t-i-r;if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),i=this.state.numBytes,r=this.state.numTensors;let s,p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:i,attrs:r}=e;null==this.backendName&&this.backend;const l=(0,o.pI)(t,this.backendName);d.hu(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),s=()=>{const e=this.backend.numDataIds();p=l.kernelFunc({inputs:i,attrs:r,backend:this.backend});const s=Array.isArray(p)?p:[p];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,s);const o=s.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:a}=e;return this.makeTensorFromDataId(t,n,a)}));if(a){const e=this.getTensorsForGradient(t,i,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,i=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};s=()=>{const e=this.backend.numDataIds();p=this.tidy((()=>t(this.backend,i)));const n=Array.isArray(p)?p:[p];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=g(e)?null:e.backwardsFunc;let m;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(l,u,(()=>s())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),t=m.outputs):t=s()})),a&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-r,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(p)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const a=(0,o.uk)(e);if(null!=a){const e=a.inputsToSave||[],i=a.outputsToSave||[];let r;a.saveAllInputs?(d.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),r=Object.keys(t).map((e=>t[e]))):r=e.map((e=>t[e]));const s=n.filter(((e,t)=>i[t]));return r.concat(s)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let i=e;"string"===n&&d.HD(e[0])&&(i=e.map((e=>l.encodeString(e))));const r=a.write(i,t,n),s=new m.es(t,n,r,this.nextTensorId());if(this.trackTensor(s,a),"string"===n){const e=this.state.tensorInfo.get(r),t=(0,d.Ub)(i);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,a){n=n||"float32";const i=new m.es(t,n,e,this.nextTensorId());return this.trackTensor(i,a),i}makeVariable(e,t=!0,n,a){n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const i=new m._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[i.name])throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*d.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof m._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*d.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,i,r){const s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:i},p=(0,o.uk)(e);null!=p&&(a=p.gradFunc),null!=a&&(s.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=d.wT(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],i,r))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,f.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n,a=!1){if(d.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const i=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));d.hu(i instanceof m.es,(()=>"The result y returned by f() must be a tensor."));const r=function(e,t,n){const a={},i={};for(let e=0;e<t.length;e++)a[t[e].id]=!0;for(let n=0;n<e.length;n++){const r=e[n],s=r.inputs;for(const e in s){const n=s[e];let o=!1;for(let e=0;e<t.length;e++)if(a[n.id]){r.outputs.forEach((e=>a[e.id]=!0)),o=!0,i[r.id]=!0;break}if(o)break}}const r={};r[n.id]=!0;const s={};for(let t=e.length-1;t>=0;t--){const n=e[t],a=n.inputs;for(let e=0;e<n.outputs.length;e++)if(r[n.outputs[e].id]){for(const e in a)r[a[e].id]=!0,s[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(i[n.id]&&s[n.id]){const e={};for(const t in n.inputs){const i=n.inputs[t];a[i.id]&&(e[t]=i)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,i);if(!a&&0===r.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[i.id]=null==n?function(e){const t=(0,d.p8)((0,d.NA)(e),"float32");return b.makeTensor(t,e,"float32")}(i.shape):n,function(e,t,n,a){for(let i=t.length-1;i>=0;i--){const r=t[i],s=[];if(r.outputs.forEach((t=>{const n=e[t.id];null!=n?s.push(n):s.push(null)})),null==r.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const o=r.gradient(s);for(const t in r.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const i=n((()=>o[t]()));if("float32"!==i.dtype)throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${i.dtype}'`);const s=r.inputs[t];if(!d.cO(i.shape,s.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${t}' has shape '${i.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=i;else{const t=e[s.id];e[s.id]=a(t,i),t.dispose()}}}}(e,r,(e=>this.tidy(e)),w);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:i,grads:a}}))}customGrad(e){return d.hu(d.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;d.hu(t.every((e=>e instanceof m.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const a={};return t.forEach(((e,t)=>{a[t]=e})),this.runKernelFunc({forwardFunc:(a,i)=>(n=e(...t,i),d.hu(n.value instanceof m.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),d.hu(d.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,a)=>{const i=n.gradFunc(e,a),r=Array.isArray(i)?i:[i];d.hu(r.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),d.hu(r.every((e=>e instanceof m.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const s={};return r.forEach(((e,t)=>{s[t]=()=>e})),s},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new v;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(){const e=(0,r.D)();if(null==e._tfengine){const t=new i.qA(e);e._tfengine=new y(t)}return(0,i.iG)(e._tfengine.ENV),(0,m.Vi)((()=>e._tfengine)),e._tfengine}y.nextTensorId=0,y.nextVariableId=0;const b=x();function w(e,t){const n={a:e,b:t};return b.runKernel(s.mm,n)}},2885:(e,t,n)=>{"use strict";n.d(t,{qA:()=>i,OB:()=>s,Vi:()=>o,iG:()=>p});var a=n(569);class i{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=r,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(s().getBool("IS_TEST")||s().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];s().getBool("IS_TEST")||s().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,a.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function r(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function s(){return o}let o=null;function p(e){o=e}},5938:(e,t,n)=>{"use strict";let a;function i(){if(null==a){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function r(e,t){const n=function(){const e=i();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}n.d(t,{D:()=>i,R:()=>r})},4368:(e,t,n)=>{"use strict";n.d(t,{G4:()=>o,R:()=>p,cF:()=>l,MX:()=>d,N8:()=>u,SR:()=>c,sq:()=>h,N5:()=>m,lu:()=>f,B9:()=>g,Cn:()=>v,XV:()=>y,CQ:()=>x,Cd:()=>b,N_:()=>w,cj:()=>_,x3:()=>S,ze:()=>T,jq:()=>E,y3:()=>M,VY:()=>N});var a=n(7097),i=n(2885),r=n(4077),s=n(747);function o(){(0,i.OB)().set("PROD",!0)}function p(){(0,i.OB)().set("DEBUG",!0)}function l(){(0,i.OB)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function d(e){(0,i.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function u(){a.BV.disposeVariables()}function c(){return a.BV}function h(){return a.BV.memory()}function m(e){return a.BV.profile(e)}function f(e,t){return a.BV.tidy(e,t)}function g(e){(0,s.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function v(e){return a.BV.keep(e)}function y(e){return a.BV.time(e)}function x(e){return a.BV.setBackend(e)}function b(){return a.BV.ready()}function w(){return a.BV.backendName}function _(e){a.BV.removeBackend(e)}function S(e){return a.BV.findBackend(e)}function T(e){return a.BV.findBackendFactory(e)}function E(e,t,n=1){return a.BV.registerBackend(e,t,n)}function M(){return a.BV.backend}function N(e,t){(0,i.OB)().setPlatform(e,t)}(0,r.FZ)(d)},633:(e,t,n)=>{"use strict";n.d(t,{cb:()=>c,pn:()=>u,h7:()=>l,fN:()=>d,UQ:()=>o,ti:()=>p});var a=n(7097),i=n(4077),r=n(3740),s=n(569);function o(e){return s.hu(s.mf(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const i=(0,r._1)(t,"x","tf.grad","string_or_numeric"),o=null!=n?(0,r._1)(n,"dy","tf.grad"):null;return a.BV.tidy((()=>{const{value:t,grads:n}=a.BV.gradients((()=>e(i)),[i],o);return null!=o&&s.k5(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),h(n),n[0]}))}}function p(e){return s.hu(s.mf(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{s.hu(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const i=(0,r.sI)(t,"args","tf.grads","string_or_numeric"),o=null!=n?(0,r._1)(n,"dy","tf.grads"):null;return a.BV.tidy((()=>{const{value:t,grads:n}=a.BV.gradients((()=>e(...i)),i,o);return null!=o&&s.k5(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(n),n}))}}function l(e){return s.hu(s.mf(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{s.hu(t instanceof i.es,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),s.hu(null==n||n instanceof i.es,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:o}=a.BV.gradients((()=>e(t)),[t],n);return h(r),{grad:r[0],value:o}}}function d(e){return s.hu(s.mf(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{s.hu(Array.isArray(t)&&t.every((e=>e instanceof i.es)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),s.hu(null==n||n instanceof i.es,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=a.BV.gradients((()=>e(...t)),t,n);return null!=n&&s.k5(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(r.grads),r}}function u(e,t){s.hu(s.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),s.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof i._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in a.BV.registeredVariables)t.push(a.BV.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),s.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:p,grads:l}=a.BV.gradients(e,t,null,!0);s.hu(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),s.hu(0===p.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${p.rank} tensor`));const d={};return t.forEach(((e,t)=>{null!=l[t]&&(d[e.name]=l[t])})),null!=r&&r.forEach((e=>d[e.name]=null)),{value:p,grads:d}}function c(e){return a.BV.customGrad(e)}function h(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},5262:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>Xe.SY,Acos:()=>Xe.VG,Acosh:()=>Xe.Sp,AdadeltaOptimizer:()=>Xt,AdagradOptimizer:()=>Yt,AdamOptimizer:()=>Jt,AdamaxOptimizer:()=>nn,Add:()=>Xe.mm,AddN:()=>Xe.Xz,All:()=>Xe.oT,Any:()=>Xe.IK,ArgMax:()=>Xe.sJ,ArgMin:()=>Xe.aJ,Asin:()=>Xe.M2,Asinh:()=>Xe.qw,Atan:()=>Xe.jM,Atan2:()=>Xe.QC,Atanh:()=>Xe.Oy,AvgPool:()=>Xe.Jh,AvgPool3D:()=>Xe._k,AvgPool3DGrad:()=>Xe.IM,AvgPoolGrad:()=>Xe.RO,BatchMatMul:()=>Xe.XL,BatchToSpaceND:()=>Xe.zw,Bincount:()=>Xe.zv,BroadcastArgs:()=>Xe.eE,BroadcastTo:()=>Xe.Ly,Cast:()=>Xe.RF,Ceil:()=>Xe.gJ,ClipByValue:()=>Xe.xn,Complex:()=>Xe.Zz,ComplexAbs:()=>Xe.yj,Concat:()=>Xe.Eh,Conv2D:()=>Xe.mh,Conv2DBackpropFilter:()=>Xe.wU,Conv2DBackpropInput:()=>Xe.wm,Conv3D:()=>Xe.x1,Conv3DBackpropFilterV2:()=>Xe.o2,Conv3DBackpropInputV2:()=>Xe.ik,Cos:()=>Xe.mc,Cosh:()=>Xe.TR,CropAndResize:()=>Xe.Vc,Cumsum:()=>Xe.iH,DataStorage:()=>va.JL,DenseBincount:()=>Xe.QR,DepthToSpace:()=>Xe.T0,DepthwiseConv2dNative:()=>Xe.ci,DepthwiseConv2dNativeBackpropFilter:()=>Xe.sL,DepthwiseConv2dNativeBackpropInput:()=>Xe.y7,Diag:()=>Xe.$w,Dilation2D:()=>Xe.p4,Dilation2DBackpropFilter:()=>Xe.Vn,Dilation2DBackpropInput:()=>Xe.ek,ENV:()=>x.Vi,Einsum:()=>Xe.$g,Elu:()=>Xe.SX,EluGrad:()=>Xe.HE,Environment:()=>x.qA,Equal:()=>Xe.hd,Erf:()=>Xe.Om,Exp:()=>Xe.NE,ExpandDims:()=>Xe.YF,Expm1:()=>Xe.Y0,FFT:()=>Xe.vw,Fill:()=>Xe.de,FlipLeftRight:()=>Xe.Uy,Floor:()=>Xe.OR,FloorDiv:()=>Xe.je,FromPixels:()=>Xe.eB,FusedBatchNorm:()=>Xe.sH,FusedConv2D:()=>Xe._V,FusedDepthwiseConv2D:()=>Xe.lu,GatherNd:()=>Xe.q1,GatherV2:()=>Xe.qi,Greater:()=>Xe.iZ,GreaterEqual:()=>Xe.Ac,IFFT:()=>Xe.Qg,Identity:()=>Xe.iJ,Imag:()=>Xe.J_,IsFinite:()=>Xe.av,IsInf:()=>Xe.iW,IsNan:()=>Xe.r7,KernelBackend:()=>va.Zu,LRN:()=>Xe.eZ,LRNGrad:()=>Xe.Hh,LeakyRelu:()=>Xe.J$,Less:()=>Xe.vt,LessEqual:()=>Xe.CA,LinSpace:()=>Xe.e7,Log:()=>Xe.Zb,Log1p:()=>Xe.kU,LogSoftmax:()=>Xe.qC,LogicalAnd:()=>Xe.PY,LogicalNot:()=>Xe.Vf,LogicalOr:()=>Xe.MZ,Max:()=>Xe.Yo,MaxPool:()=>Xe.mT,MaxPool3D:()=>Xe.OA,MaxPool3DGrad:()=>Xe.OU,MaxPoolGrad:()=>Xe.OV,MaxPoolWithArgmax:()=>Xe.vF,Maximum:()=>Xe.BM,Mean:()=>Xe.q2,Min:()=>Xe.c1,Minimum:()=>Xe.q8,MirrorPad:()=>Xe.jQ,Mod:()=>Xe.Vb,MomentumOptimizer:()=>rn,Multinomial:()=>Xe.NZ,Multiply:()=>Xe.wY,Neg:()=>Xe.ku,NonMaxSuppressionV3:()=>Xe.uv,NonMaxSuppressionV4:()=>Xe.cy,NonMaxSuppressionV5:()=>Xe.W0,NotEqual:()=>Xe.yQ,OP_SCOPE_SUFFIX:()=>ln.zvA,OneHot:()=>Xe.we,OnesLike:()=>Xe.qW,Optimizer:()=>jt,OptimizerConstructors:()=>on,Pack:()=>Xe.Qi,PadV2:()=>Xe.ly,Pool:()=>Xe.Kg,Pow:()=>Xe.pe,Prelu:()=>Xe.o0,Prod:()=>Xe.Dl,RMSPropOptimizer:()=>sn,Range:()=>Xe.e6,Rank:()=>pn.yw,Real:()=>Xe.xJ,RealDiv:()=>Xe.oH,Reciprocal:()=>Xe.$H,Reduction:()=>dn.I,Relu:()=>Xe.qk,Relu6:()=>Xe.Sb,Reshape:()=>Xe.HZ,ResizeBilinear:()=>Xe._Y,ResizeBilinearGrad:()=>Xe.zb,ResizeNearestNeighbor:()=>Xe.dp,ResizeNearestNeighborGrad:()=>Xe.Hm,Reverse:()=>Xe.mK,RotateWithOffset:()=>Xe.b9,Round:()=>Xe.e0,Rsqrt:()=>Xe.bV,SGDOptimizer:()=>an,ScatterNd:()=>Xe.xQ,Select:()=>Xe.Ph,Selu:()=>Xe.oF,Sigmoid:()=>Xe.a5,Sign:()=>Xe.i5,Sin:()=>Xe.RQ,Sinh:()=>Xe.w3,Slice:()=>Xe.p2,Softmax:()=>Xe.Gc,Softplus:()=>Xe.MR,SpaceToBatchND:()=>Xe.TQ,SparseFillEmptyRows:()=>Xe.O3,SparseReshape:()=>Xe.nh,SparseSegmentMean:()=>Xe.YW,SparseSegmentSum:()=>Xe.Zj,SparseToDense:()=>Xe.D2,SplitV:()=>Xe.L8,Sqrt:()=>Xe.FK,Square:()=>Xe.bK,SquaredDifference:()=>Xe._t,Step:()=>Xe.h8,StridedSlice:()=>Xe.m2,StringNGrams:()=>Xe._J,StringSplit:()=>Xe.s1,StringToHashBucketFast:()=>Xe.Xk,Sub:()=>Xe.Tr,Sum:()=>Xe.GB,Tan:()=>Xe.sE,Tanh:()=>Xe.MI,Tensor:()=>_e.es,TensorBuffer:()=>_e.YD,Tile:()=>Xe.n9,TopK:()=>Xe.cW,Transform:()=>Xe.wx,Transpose:()=>Xe.G3,Unique:()=>Xe.kp,Unpack:()=>Xe.To,UnsortedSegmentSum:()=>Xe.Qv,Variable:()=>_e._w,ZerosLike:()=>Xe.Ru,_FusedMatMul:()=>Xe.us,abs:()=>ln.WnP,acos:()=>ln.Khb,acosh:()=>ln.__u,add:()=>ln.IHx,addN:()=>ln.QBD,all:()=>ln.$6P,any:()=>ln.YjB,argMax:()=>ln.NqF,argMin:()=>ln.vHJ,asin:()=>ln.ZRM,asinh:()=>ln.VfV,atan:()=>ln.z4N,atan2:()=>ln.fvJ,atanh:()=>ln.C80,avgPool:()=>ln.wS1,avgPool3d:()=>ln.uR5,backend:()=>Ft.y3,backend_util:()=>c,basicLSTMCell:()=>ln.zEQ,batchNorm:()=>ln.tgs,batchNorm2d:()=>ln.Dxk,batchNorm3d:()=>ln.JY5,batchNorm4d:()=>ln.p3b,batchToSpaceND:()=>ln.E4h,bincount:()=>ln.yE8,booleanMaskAsync:()=>ln.anm,broadcastArgs:()=>ln.XsQ,broadcastTo:()=>ln.UFq,broadcast_util:()=>je,browser:()=>s,buffer:()=>ln.f3b,cast:()=>ln.pju,ceil:()=>ln.mDi,clipByValue:()=>ln.iUl,clone:()=>ln.d9v,complex:()=>ln.PYB,concat:()=>ln.zoF,concat1d:()=>ln.gME,concat2d:()=>ln.Izb,concat3d:()=>ln.MNy,concat4d:()=>ln.ZaL,conv1d:()=>ln.PAt,conv2d:()=>ln.Tek,conv2dTranspose:()=>ln.bc,conv3d:()=>ln.pdZ,conv3dTranspose:()=>ln.$QV,copyRegisteredKernels:()=>Ke.T3,cos:()=>ln.mCk,cosh:()=>ln.f9Y,cosineWindow:()=>ln.mew,cumsum:()=>ln.zbp,customGrad:()=>Ht.cb,denseBincount:()=>ln.ppE,deprecationWarn:()=>Ft.MX,depthToSpace:()=>ln.nTT,depthwiseConv2d:()=>ln.B10,device_util:()=>a,diag:()=>ln.Ka3,dilation2d:()=>ln.WmZ,disableDeprecationWarnings:()=>Ft.cF,dispose:()=>Ft.B9,disposeVariables:()=>Ft.N8,div:()=>ln.hiC,divNoNan:()=>ln.NTj,dot:()=>ln.AKD,dropout:()=>ln.rvX,einsum:()=>ln.WYO,elu:()=>ln.pyx,enableDebugMode:()=>Ft.R,enableProdMode:()=>Ft.G4,enclosingPowerOfTwo:()=>ln.GRh,engine:()=>Ft.SR,env:()=>x.OB,equal:()=>ln.DgJ,erf:()=>ln.qNN,exp:()=>ln.Qqt,expandDims:()=>ln.dt4,expm1:()=>ln.t$B,eye:()=>ln.iyy,fft:()=>ln.kp_,fill:()=>ln.hlL,findBackend:()=>Ft.x3,findBackendFactory:()=>Ft.ze,floor:()=>ln.GWj,floorDiv:()=>ln.qPi,fused:()=>ln.imm,gather:()=>ln.Iqj,gatherND:()=>ln.dbB,gather_util:()=>o,getBackend:()=>Ft.N_,getGradient:()=>Ke.uk,getKernel:()=>Ke.pI,getKernelsForBackend:()=>Ke.tr,grad:()=>Ht.UQ,grads:()=>Ht.ti,greater:()=>ln.pjt,greaterEqual:()=>ln.brS,ifft:()=>ln.Sxn,imag:()=>ln.asL,image:()=>ln.BHj,inTopKAsync:()=>ln.V3u,io:()=>i,irfft:()=>ln.wx0,isFinite:()=>ln.xVT,isInf:()=>ln.UWc,isNaN:()=>ln.i2d,keep:()=>Ft.Cn,kernel_impls:()=>h,leakyRelu:()=>ln.hi7,less:()=>ln.d9m,lessEqual:()=>ln.zN1,linalg:()=>ln.$r2,linspace:()=>ln.SX3,localResponseNormalization:()=>ln.G9k,log:()=>ln.cM7,log1p:()=>ln.Krr,logSigmoid:()=>ln.e_t,logSoftmax:()=>ln.CmS,logSumExp:()=>ln.l_t,logicalAnd:()=>ln.HvI,logicalNot:()=>ln.hJK,logicalOr:()=>ln.K5V,logicalXor:()=>ln.egP,losses:()=>ln.MB5,matMul:()=>ln.OI3,math:()=>r,max:()=>ln.Fp7,maxPool:()=>ln._sB,maxPool3d:()=>ln.YQQ,maxPoolWithArgmax:()=>ln.Ip$,maximum:()=>ln.gWQ,mean:()=>ln.J69,memory:()=>Ft.sq,meshgrid:()=>ln.ry_,min:()=>ln.VV$,minimum:()=>ln.LTh,mirrorPad:()=>ln.VdP,mod:()=>ln.wQq,moments:()=>ln.Gi7,movingAverage:()=>ln.p_,mul:()=>ln.dC7,multiRNNCell:()=>ln.rq4,multinomial:()=>ln.SJ_,neg:()=>ln.W76,nextFrame:()=>hn,norm:()=>ln.KOy,notEqual:()=>ln.Quu,oneHot:()=>ln.lfX,ones:()=>ln.iUs,onesLike:()=>ln.JpU,op:()=>ln.op,outerProduct:()=>ln.N2O,pad:()=>ln.vku,pad1d:()=>ln.pNR,pad2d:()=>ln.koy,pad3d:()=>ln.t1L,pad4d:()=>ln.lGY,pool:()=>ln.d_R,pow:()=>ln.sQ3,prelu:()=>ln.AL3,print:()=>ln.S0v,prod:()=>ln.WVs,profile:()=>Ft.N5,rand:()=>ln.TN_,randomGamma:()=>ln.wzB,randomNormal:()=>ln.nGf,randomUniform:()=>ln.LGj,range:()=>ln.w6H,ready:()=>Ft.Cd,real:()=>ln.kwC,reciprocal:()=>ln.M25,registerBackend:()=>Ft.jq,registerGradient:()=>Ke.Li,registerKernel:()=>Ke.wC,relu:()=>ln.UYe,relu6:()=>ln.btT,removeBackend:()=>Ft.cj,reshape:()=>ln.XLQ,reverse:()=>ln.GYS,reverse1d:()=>ln.SDf,reverse2d:()=>ln.diP,reverse3d:()=>ln.sx7,reverse4d:()=>ln.mG2,rfft:()=>ln.QEs,round:()=>ln.NMM,rsqrt:()=>ln.bp0,scalar:()=>ln.iD$,scatterND:()=>ln.snQ,scatter_util:()=>at,selu:()=>ln.U8D,separableConv2d:()=>ln.U_I,serialization:()=>l,setBackend:()=>Ft.CQ,setPlatform:()=>Ft.VY,setdiff1dAsync:()=>ln.ODp,sigmoid:()=>ln.XD2,sign:()=>ln.Xxe,signal:()=>ln.tdS,sin:()=>ln.O$l,sinh:()=>ln.R_K,slice:()=>ln.tPi,slice1d:()=>ln.jZU,slice2d:()=>ln.SmN,slice3d:()=>ln.CnO,slice4d:()=>ln.p0P,slice_util:()=>p,softmax:()=>ln.XAC,softplus:()=>ln.Wvh,spaceToBatchND:()=>ln.fBT,sparse:()=>ln.rVs,sparseToDense:()=>ln.ers,spectral:()=>ln.uN7,split:()=>ln.Vl2,sqrt:()=>ln._b3,square:()=>ln.h62,squaredDifference:()=>ln.$i,squeeze:()=>ln.L9e,stack:()=>ln.knu,step:()=>ln.Nbs,stridedSlice:()=>ln.NXj,string:()=>ln.Z_8,sub:()=>ln.luU,sum:()=>ln.Smz,sumOutType:()=>pn.z4,tan:()=>ln.ORZ,tanh:()=>ln.AEp,tensor:()=>ln.XeE,tensor1d:()=>ln.RRF,tensor2d:()=>ln.odF,tensor3d:()=>ln.wOQ,tensor4d:()=>ln.yXz,tensor5d:()=>ln.Bfx,tensor6d:()=>ln.xZs,tensor_util:()=>Tt,test_util:()=>d,tidy:()=>Ft.lu,tile:()=>ln.Gg6,time:()=>Ft.XV,topk:()=>ln.hg7,train:()=>un,transpose:()=>ln.p4s,truncatedNormal:()=>ln.Xu6,unique:()=>ln.Two,unregisterGradient:()=>Ke.bt,unregisterKernel:()=>Ke.nE,unsortedSegmentSum:()=>ln.pUJ,unstack:()=>ln.HHK,upcastType:()=>pn.x8,util:()=>Et,valueAndGrad:()=>Ht.h7,valueAndGrads:()=>Ht.fN,variable:()=>ln.VD$,variableGrads:()=>Ht.pn,version_core:()=>Bt,where:()=>ln.arb,whereAsync:()=>ln.itS,zeros:()=>ln.lls,zerosLike:()=>ln.P84});var a={};n.r(a),n.d(a,{isBrowser:()=>y,isMobile:()=>v,mockIsMobile:()=>g});var i={};n.r(i),n.d(i,{browserFiles:()=>Ne,browserHTTPRequest:()=>Oe,concatenateArrayBuffers:()=>I,copyModel:()=>me,decodeWeights:()=>M,encodeWeights:()=>E,fromMemory:()=>$e,getLoadHandlers:()=>V,getModelArtifactsForJSON:()=>D,getModelArtifactsInfoForJSON:()=>P,getSaveHandlers:()=>$,http:()=>Le,isHTTPScheme:()=>De,listModels:()=>ce,loadWeights:()=>Ie,moveModel:()=>fe,registerLoadRouter:()=>F,registerSaveRouter:()=>B,removeModel:()=>he,weightsLoaderFactory:()=>Re,withSaveHandler:()=>Ve});var r={};n.r(r),n.d(r,{confusionMatrix:()=>qe});var s={};n.r(s),n.d(s,{fromPixels:()=>tt,fromPixelsAsync:()=>Je,toPixels:()=>et});var o={};n.r(o),n.d(o,{prepareAndValidate:()=>nt});var p={};n.r(p),n.d(p,{assertParamsValid:()=>it,computeFlatOffset:()=>vt,computeOutShape:()=>st,getNormalizedAxes:()=>dt,isSliceContinous:()=>gt,maskToAxes:()=>rt,parseSliceParams:()=>yt,sliceInfo:()=>xt,startForAxis:()=>mt,startIndicesWithElidedDims:()=>ut,stopForAxis:()=>ft,stopIndicesWithElidedDims:()=>ct,stridesForAxis:()=>ht,stridesWithElidedDims:()=>ot});var l={};n.r(l),n.d(l,{Serializable:()=>wt,SerializationMap:()=>_t,registerClass:()=>St});var d={};n.r(d),n.d(d,{TEST_EPSILON_FLOAT16:()=>Mt,encodeStrings:()=>Ot,expectArrayBuffersEqual:()=>Lt,expectArraysClose:()=>Nt,expectArraysEqual:()=>Rt,expectNumbersClose:()=>kt,expectPromiseToFail:()=>It,expectValuesInRange:()=>Pt,testEpsilon:()=>Ct});var u={};n.r(u),n.d(u,{collectGatherOpShapeInfo:()=>ca,computeOutShape:()=>ua,segOpComputeOptimalWindowSize:()=>da});var c={};n.r(c),n.d(c,{ERF_A1:()=>In,ERF_A2:()=>Rn,ERF_A3:()=>kn,ERF_A4:()=>Dn,ERF_A5:()=>Pn,ERF_P:()=>An,PARALLELIZE_THRESHOLD:()=>xn,SELU_SCALE:()=>Cn,SELU_SCALEALPHA:()=>Nn,applyActivation:()=>yn.QH,assertAndGetBroadcastShape:()=>je.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>mn.lB,assertParamsConsistent:()=>fn,assignToTypedArray:()=>zn,axesAreInnerMostDims:()=>mn.YB,calculateShapes:()=>at.calculateShapes,checkEinsumDimSizes:()=>jn,checkPadOnDimRoundingMode:()=>vn.m,combineLocations:()=>mn.Vh,complexWithEvenIndex:()=>Fn,complexWithOddIndex:()=>$n,computeConv2DInfo:()=>vn.Ix,computeConv3DInfo:()=>vn.jw,computeDefaultPad:()=>vn.aO,computeDilation2DInfo:()=>vn.Rf,computeOptimalWindowSize:()=>bn,computeOutAndReduceShapes:()=>mn.kz,computeOutShape:()=>gn,computePool2DInfo:()=>vn.Xw,computePool3DInfo:()=>vn.pl,convertConv2DDataFormat:()=>vn.sl,decodeEinsumEquation:()=>Hn,eitherStridesOrDilationsAreOne:()=>vn.jT,expandShapeToKeepDim:()=>mn.rv,exponent:()=>Gn,exponents:()=>Un,fromStringArrayToUint8:()=>ma,fromUint8ToStringArray:()=>ha,getAxesPermutation:()=>mn.Q3,getBroadcastDims:()=>je.getBroadcastDims,getComplexWithIndex:()=>Vn,getEinsumComputePath:()=>Xn,getEinsumPermutation:()=>qn,getFusedBiasGradient:()=>yn.pf,getFusedDyActivation:()=>yn.Fr,getImageCenter:()=>wn,getInnerMostAxes:()=>mn.sY,getPermuted:()=>Sn,getReductionAxes:()=>je.getReductionAxes,getReshaped:()=>_n,getReshapedPermuted:()=>Tn,getSliceBeginCoords:()=>En,getSliceSize:()=>Mn,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Qn,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Jn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>ea,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>aa,getSparseReshapeInputOutputMismatchErrorMessage:()=>ra,getSparseReshapeInputOutputMultipleErrorMessage:()=>ia,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>ta,getSparseReshapeNegativeOutputDimErrorMessage:()=>na,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>la,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>sa,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>oa,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>pa,getUndoAxesPermutation:()=>mn.LJ,isIdentityPermutation:()=>Kn,log:()=>Ln.c,mergeRealAndImagArrays:()=>On,prepareAndValidate:()=>nt,prepareSplitSize:()=>Zn,segment_util:()=>u,shouldFuse:()=>yn.uy,slice_util:()=>p,splitRealAndImagArrays:()=>Bn,tupleValuesAreOne:()=>vn.I0,upcastType:()=>pn.x8,validateInput:()=>at.validateInput,validateUpdateShape:()=>at.validateUpdateShape,warn:()=>Ln.Z});var h={};n.r(h),n.d(h,{nonMaxSuppressionV3Impl:()=>fa.GP,nonMaxSuppressionV4Impl:()=>fa.qP,nonMaxSuppressionV5Impl:()=>fa.pA,whereImpl:()=>ga.Z});var m=n(7097);let f;function g(e){f=e}function v(e){if(void 0!==f)return f;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function y(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var x=n(2885);const b=(0,x.OB)();b.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),b.registerFlag("IS_BROWSER",(()=>y())),b.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),b.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),b.registerFlag("PROD",(()=>!1)),b.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>b.getBool("DEBUG"))),b.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),b.registerFlag("IS_TEST",(()=>!1)),b.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),b.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var w=n(1661),_=n(701),S=n(569);const T={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function E(e,t){const n=[],a=[],i=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let r=0;r<i.length;++r){const s=i[r],o=Array.isArray(e)?e[r].tensor:e[s];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${o.dtype}`);const p={name:s,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,a=new Uint8Array(n);let i=0;for(let e=0;e<t.length;e++){const n=t[e],r=new Uint8Array(new Uint32Array([n.length]).buffer);a.set(r,i),i+=4,a.set(n,i),i+=n.length}e(a)}));a.push(e)}else a.push(o.data());null!=t&&(p.group=t),n.push(p)}return{data:N(await Promise.all(a)),specs:n}}function M(e,t){const n={};let a,i=0;for(const r of t){const t=r.name,s=r.dtype,o=r.shape,p=(0,S.NA)(o);let l;if("quantization"in r){const n=r.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${r.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${r.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==s)throw new Error(`Weight ${r.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${s}.`)}const o=T[n.dtype],d=e.slice(i,i+p*o),u="uint8"===n.dtype?new Uint8Array(d):new Uint16Array(d);if("float32"===s)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===a&&(a=L()),l=a(u)}else{if("int32"!==s)throw new Error(`Unsupported dtype in weight '${t}': ${s}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];l[e]=Math.round(t*n.scale+n.min)}}i+=p*o}else if("string"===s){const t=(0,S.NA)(r.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(i,i+4))[0];i+=4;const n=new Uint8Array(e.slice(i,i+t));l.push(n),i+=t}}else{const a=T[s],r=e.slice(i,i+p*a);if("float32"===s)l=new Float32Array(r);else if("int32"===s)l=new Int32Array(r);else if("bool"===s)l=new Uint8Array(r);else{if("complex64"!==s)throw new Error(`Unsupported dtype in weight '${t}': ${s}`);{l=new Float32Array(r);const e=new Float32Array(l.length/2),a=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],a[t]=l[2*t+1];const i=(0,_.X)(e,o,"float32"),s=(0,_.X)(a,o,"float32");n[t]=(0,w.P)(i,s),i.dispose(),s.dispose()}}i+=p*a}"complex64"!==s&&(n[t]=(0,_.X)(l,o,s))}return n}function N(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const a=new Uint8Array(t);let i=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),i),i+=e.byteLength})),a.buffer}const C="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function A(e){return C?Buffer.byteLength(e):new Blob([e]).size}function I(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let a=0;return e.forEach((e=>{n.set(new Uint8Array(e),a),a+=e.byteLength})),n.buffer}function R(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function k(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function D(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[a,i]=await t(e.weightsManifest);n.weightSpecs=a,n.weightData=i}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function P(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:A(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:A(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function L(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const i=new ArrayBuffer(4*a.length),r=new Uint32Array(i);for(let i=0;i<a.length;i++){const s=a[i],o=e[n[s>>10]+(1023&s)]+t[s>>10];r[i]=o}return new Float32Array(i)}}class O{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==O.instance&&(O.instance=new O),O.instance}static registerSaveRouter(e){O.getInstance().saveRouters.push(e)}static registerLoadRouter(e){O.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return O.getHandlers(e,"save")}static getLoadHandlers(e,t){return O.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?O.getInstance().loadRouters:O.getInstance().saveRouters).forEach((t=>{const i=t(e,n);null!==i&&a.push(i)})),a}}const B=e=>O.registerSaveRouter(e),F=e=>O.registerLoadRouter(e),$=e=>O.getSaveHandlers(e),V=(e,t)=>O.getLoadHandlers(e,t),z="tensorflowjs",U="models_store",G="model_info_store";function W(){if(!(0,x.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function H(e){const t=e.result;t.createObjectStore(U,{keyPath:"modelPath"}),t.createObjectStore(G,{keyPath:"modelPath"})}class q{constructor(e){if(this.indexedDB=W(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(z,1);a.onupgradeneeded=()=>H(a),a.onsuccess=()=>{const i=a.result;if(null==t){const t=i.transaction(U,"readonly"),a=t.objectStore(U).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return i.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(i.close(),n(a.error)),t.oncomplete=()=>i.close()}else{const a=P(t),r=i.transaction(G,"readwrite");let s=r.objectStore(G);const o=s.put({modelPath:this.modelPath,modelArtifactsInfo:a});let p;o.onsuccess=()=>{p=i.transaction(U,"readwrite");const o=p.objectStore(U).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a});o.onsuccess=()=>e({modelArtifactsInfo:a}),o.onerror=e=>{s=r.objectStore(G);const t=s.delete(this.modelPath);t.onsuccess=()=>(i.close(),n(o.error)),t.onerror=e=>(i.close(),n(o.error))}},o.onerror=e=>(i.close(),n(o.error)),r.oncomplete=()=>{null==p?i.close():p.oncomplete=()=>i.close()}}},a.onerror=e=>n(a.error)}))}}q.URL_SCHEME="indexeddb://";const j=e=>{return(0,x.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(q.URL_SCHEME)?(t=e.slice(q.URL_SCHEME.length),new q(t)):null;var t};O.registerSaveRouter(j),O.registerLoadRouter(j);class X{constructor(){this.indexedDB=W()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(z,1);n.onupgradeneeded=()=>H(n),n.onsuccess=()=>{const a=n.result,i=a.transaction(G,"readonly"),r=i.objectStore(G).getAll();r.onsuccess=()=>{const t={};for(const e of r.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},r.onerror=e=>(a.close(),t(r.error)),i.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(q.URL_SCHEME)?t.slice(q.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(z,1);a.onupgradeneeded=()=>H(a),a.onsuccess=()=>{const i=a.result,r=i.transaction(G,"readwrite"),s=r.objectStore(G),o=s.get(e);let p;o.onsuccess=()=>{if(null==o.result)return i.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const a=s.delete(e),r=()=>{p=i.transaction(U,"readwrite");const a=p.objectStore(U).delete(e);a.onsuccess=()=>t(o.result.modelArtifactsInfo),a.onerror=e=>n(o.error)};a.onsuccess=r,a.onerror=e=>(r(),i.close(),n(o.error))}},o.onerror=e=>(i.close(),n(o.error)),r.oncomplete=()=>{null==p?i.close():p.oncomplete=()=>i.close()}},a.onerror=e=>n(a.error)}))}}const K="/",Y="tensorflowjs_models",Z="info",Q="model_topology",J="weight_specs",ee="weight_data",te="model_metadata";function ne(e){return{info:[Y,e,Z].join(K),topology:[Y,e,Q].join(K),weightSpecs:[Y,e,J].join(K),weightData:[Y,e,ee].join(K),modelMetadata:[Y,e,te].join(K)}}function ae(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ie(e){const t=e.split(K);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(K)}class re{constructor(e){if(!(0,x.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ne(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),a=P(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(C)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,a=t.length;e<a;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:a}}catch(e){throw ae(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;const i=this.LS.getItem(this.keys.modelMetadata);if(null!=i){const e=JSON.parse(i);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const r=this.LS.getItem(this.keys.weightData);if(null==r)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(C){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(r),t}}re.URL_SCHEME="localstorage://";const se=e=>{return(0,x.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(re.URL_SCHEME)?(t=e.slice(re.URL_SCHEME.length),new re(t)):null;var t};O.registerSaveRouter(se),O.registerLoadRouter(se);class oe{constructor(){(0,S.hu)((0,x.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,S.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Y+K,n=K+Z;for(let a=0;a<this.LS.length;++a){const i=this.LS.key(a);i.startsWith(t)&&i.endsWith(n)&&(e[ie(i)]=JSON.parse(this.LS.getItem(i)))}return e}async removeModel(e){var t;const n=ne(e=(t=e).startsWith(re.URL_SCHEME)?t.slice(re.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const a=JSON.parse(this.LS.getItem(n.info));return ae(n),a}}const pe="://";class le{constructor(){this.managers={}}static getInstance(){return null==le.instance&&(le.instance=new le),le.instance}static registerManager(e,t){(0,S.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(pe)&&(e=e.slice(0,e.indexOf(pe))),(0,S.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=le.getInstance();(0,S.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function de(e){if(-1===e.indexOf(pe))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${le.getSchemes().join(",")}`);return{scheme:e.split(pe)[0],path:e.split(pe)[1]}}async function ue(e,t,n=!1){(0,S.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const a=O.getLoadHandlers(e);(0,S.hu)(a.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,S.hu)(a.length<2,(()=>`Copying failed because more than one (${a.length}) load handlers for source URL ${e}.`));const i=a[0],r=O.getSaveHandlers(t);(0,S.hu)(r.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,S.hu)(r.length<2,(()=>`Copying failed because more than one (${a.length}) save handlers for destination URL ${t}.`));const s=r[0],o=de(e).scheme,p=de(e).path,l=o===de(e).scheme,d=await i.load();n&&l&&await le.getManager(o).removeModel(p);const u=await s.save(d);return n&&!l&&await le.getManager(o).removeModel(p),u.modelArtifactsInfo}async function ce(){const e=le.getSchemes(),t={};for(const n of e){const e=await le.getManager(n).listModels();for(const a in e)t[n+pe+a]=e[a]}return t}async function he(e){const t=de(e);return le.getManager(t.scheme).removeModel(t.path)}async function me(e,t){return ue(e,t,!1)}async function fe(e,t){return ue(e,t,!0)}class ge{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if((0,x.OB)().get("IS_BROWSER")){(0,x.OB)().setPlatform("browser",new ge);try{le.registerManager(re.URL_SCHEME,new oe)}catch(e){}try{le.registerManager(q.URL_SCHEME,new X)}catch(e){}}let ve;(0,x.OB)().get("IS_NODE")&&!(0,x.OB)().get("IS_BROWSER")&&(0,x.OB)().setPlatform("node",new class{constructor(){this.util=n(3837),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,x.OB)().global.fetch?(0,x.OB)().global.fetch(e,t):(null==ve&&(ve=n(7085)),ve(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var ye=n(2657),xe=n(2271),be=n(8723),we=n(9798),_e=n(4077);(0,m.wv)();const Se={buffer:ye.f,cast:xe.p,clone:be.d,print:we.S};function Te(e){return new Promise((e=>setTimeout(e))).then(e)}(0,_e.Vp)(Se);class Ee{constructor(e){if(!(0,x.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ee.URL_SCHEME)&&(e=e.slice(Ee.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=k(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),i=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=a,await Te((()=>i.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Te((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:P(e)}}}}Ee.URL_SCHEME="downloads://";class Me{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),i=a.modelTopology;if(null==i)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==a.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:i});const r=D(a,(e=>this.loadWeights(e)));e(r)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const a of e)t.push(...a.weights),n.push(...a.paths);const a=this.checkManifestAndWeightFiles(e),i=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(i).then((e=>[t,I(e)]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const i=new FileReader;i.onload=e=>{const t=e.target.result;n(t)},i.onerror=t=>a(`Failed to weights data from file of path '${e}'.`),i.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>R(e.name))),a={};for(const i of e)i.paths.forEach((e=>{const i=R(e);if(-1!==t.indexOf(i))throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),-1===n.indexOf(i))throw new Error(`Weight file with basename '${i}' is not provided.`);a[e]=this.weightsFiles[n.indexOf(i)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return a}}function Ne(e){return new Me(e)}function Ce(e,t,n,a){!function(e){(0,S.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,S.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,S.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,S.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,a=null==a?1:a);let i=0;return Promise.all(e.map((r=>(r.then((r=>{const s=n+ ++i/e.length*(a-n);return t(s),r})),r))))}async function Ae(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,x.OB)().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),i=(null==t.onProgress?await Promise.all(a):await Ce(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(i):await Ce(i,t.onProgress,.5,1)}async function Ie(e,t="",n,a){return Re((e=>Ae(e,{requestInit:a})))(e,t,n)}function Re(e){return async(t,n="",a)=>{const i=t.map((()=>!1)),r={},s=null!=a?a.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const p="quantization"in e?e.quantization.dtype:e.dtype,l=T[p]*S.NA(e.shape),d=()=>{i[t]=!0,null==r[t]&&(r[t]=[]),r[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=a?a.forEach(((t,n)=>{t===e.name&&(d(),s[n]=!0)})):d(),o.push(e.name),n+=l}))})),!s.every((e=>e))){const e=a.filter(((e,t)=>!s[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const p=i.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];p.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const d=await e(l),u={};let c=0;return p.forEach((e=>{const n=t[e].paths.length;let a=0;for(let e=0;e<n;e++)a+=d[c+e].byteLength;const i=new ArrayBuffer(a),s=new Uint8Array(i);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(d[c+e]);s.set(t,o),o+=t.byteLength}r[e].forEach((e=>{const t=M(i.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)u[e]=t[e]})),c+=n})),u}}O.registerSaveRouter((e=>(0,x.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ee.URL_SCHEME)?function(e="model"){return new Ee(e)}(e.slice(Ee.URL_SCHEME.length)):null));class ke{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,S.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,x.OB)().platform.fetch,(0,S.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,S.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=k(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:P(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return D(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),i=this.weightPathPrefix||n,r=[];for(const t of e)r.push(...t.weights);const s=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(i+e+a);return this.weightUrlConverter&&s.push(...await Promise.all(o)),[r,I(await Ae(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function De(e){return null!=e.match(ke.URL_SCHEME_REGEX)}ke.URL_SCHEME_REGEX=/^https?:\/\//;const Pe=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>De(e))):De(e),n)return Le(e,t)}return null};function Le(e,t){return new ke(e,t)}function Oe(e,t){return Le(e,t)}O.registerSaveRouter(Pe),O.registerLoadRouter(Pe);class Be{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Fe{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function $e(e,t,n,a){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Be(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Be({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Be({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a}))}function Ve(e){return new Fe(e)}var ze=n(3740),Ue=n(8687),Ge=n(6708),We=n(2668),He=n(9065);const qe=(0,We.op)({confusionMatrix_:function(e,t,n){const a=(0,ze._1)(e,"labels","confusionMatrix"),i=(0,ze._1)(t,"predictions","confusionMatrix");S.hu(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),S.hu(1===a.rank,(()=>`Expected the rank of labels to be 1, but got ${a.rank}`)),S.hu(1===i.rank,(()=>`Expected the rank of predictions to be 1, but got ${i.rank}`)),S.hu(a.shape[0]===i.shape[0],(()=>`Mismatch in the number of examples: ${a.shape[0]} vs. ${i.shape[0]}. Labels and predictions should have the same number of elements.`)),S.hu(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const r=(0,Ge.l)((0,xe.p)(a,"int32"),n),s=(0,Ge.l)((0,xe.p)(i,"int32"),n),o=(0,He.p)(r),p=(0,Ue.O)(o,s);return(0,xe.p)(p,"int32")}});var je=n(2200),Xe=n(9121),Ke=n(6151),Ye=n(9906);let Ze;function Qe(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,i=!1,r=!1,s=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)i=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)r=!0;else if(null!=e.getContext)s=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(i){const t=2;if(i&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=(0,Ke.pI)(Xe.eB,m.BV.backendName)){const n={pixels:e},a={numChannels:t};return m.BV.runKernel(Xe.eB,n,a)}const[p,l]=i?[e.videoWidth,e.videoHeight]:[e.width,e.height];let d,u;if(s)d=e.getContext("2d").getImageData(0,0,p,l).data;else if(a||n)d=e.data;else if(r||i||o){if(null==Ze)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Ze=new OffscreenCanvas(1,1).getContext("2d")}else Ze=document.createElement("canvas").getContext("2d");Ze.canvas.width=p,Ze.canvas.height=l,Ze.drawImage(e,0,0,p,l),d=Ze.getImageData(0,0,p,l).data}if(4===t)u=new Int32Array(d);else{const e=p*l;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=d[4*n+e]}const c=[l,p,t];return(0,Ye.w)(u,c,"int32")}async function Je(e,t=3){let n=null;if((0,x.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Qe(n,t)}async function et(e,t){let n=(0,ze._1)(e,"img","toPixels");if(!(e instanceof _e.es)){const e=n;n=(0,xe.p)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[a,i]=n.shape.slice(0,2),r=2===n.rank?1:n.shape[2];if(r>4||2===r)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${r}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const s=await n.data(),o="float32"===n.dtype?255:1,p=new Uint8ClampedArray(i*a*4);for(let e=0;e<a*i;++e){const t=[0,0,0,255];for(let a=0;a<r;a++){const i=s[e*r+a];if("float32"===n.dtype){if(i<0||i>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${i}.`)}else if("int32"===n.dtype&&(i<0||i>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${i}.`);1===r?(t[0]=i*o,t[1]=i*o,t[2]=i*o):t[a]=i*o}const a=4*e;p[a+0]=Math.round(t[0]),p[a+1]=Math.round(t[1]),p[a+2]=Math.round(t[2]),p[a+3]=Math.round(t[3])}if(null!=t){t.width=i,t.height=a;const e=t.getContext("2d"),n=new ImageData(p,i,a);e.putImageData(n,0,0)}return n!==e&&n.dispose(),p}const tt=(0,We.op)({fromPixels_:Qe});function nt(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(0===(0,S.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const i=t.shape,r=i[i.length-1];let s=1;for(let e=0;e<i.length-1;++e)s*=i[e];const o=e.shape,p=i.slice();p.pop();let l=1;for(let e=r;e<n;++e)l*=o[e],p.push(o[e]);const d=[...(0,S.e3)(e.shape).map((e=>e/l)),1].slice(0,r);return[p,s,l,d]}var at=n(3028);function it(e,t,n){const a=e.shape.length;S.hu(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),S.hu(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let i=0;i<a;++i)S.hu(t[i]+n[i]<=e.shape[i],(()=>`Error in slice${a}D: begin[${i}] + size[${i}] (${t[i]+n[i]}) would overflow input.shape[${i}] (${e.shape[i]})`))}function rt(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function st(e,t,n){const a=[];for(let i=0;i<e.length;i++)a[i]=Math.ceil((t[i]-e[i])/n[i]);return a}function ot(e,t,n,a){const i=[...e];for(let e=i.length;e<a.length;e++)i.push(1);for(let e=0;e<n;e++)0===e?i[t]=1:(i.splice(t,0,1),i.pop());return i}function pt(e,t,n){return n<=e?n:n-(t-1)}function lt(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function dt(e,t,n,a,i,r,s,o,p){const l=e.length;let d=new Array(l),u=new Array(l),c=new Array(l);if(t.length&&n>0){const p=t[0],l=n+1;d=ut(s,p,l,a,e),u=ct(o,p,l,i,e),c=ot(r,p,l,e)}else for(let t=0;t<l;t++)d[t]=mt(s,a,r,e,t,p),u[t]=ft(o,i,r,e,t,p),c[t]=ht(r,t,p);return{begin:d,end:u,strides:c}}function ut(e,t,n,a,i){const r=[...i],s=lt(n,t);for(let i=0;i<r.length;i++)if(s.indexOf(i)>-1)r[i]=0;else{const s=pt(t,n,i);let o=a[s];e&1<<s&&(o=0),r[i]=o}return r}function ct(e,t,n,a,i){const r=[...i],s=lt(n,t);for(let i=0;i<r.length;i++)if(s.indexOf(i)>-1)r[i]=Number.MAX_SAFE_INTEGER;else{const s=pt(t,n,i);let o=a[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),r[i]=o}for(let e=0;e<r.length;e++){const t=i[e];r[e]<0&&(r[e]+=t),r[e]=S.uZ(0,r[e],i[e])}return r}function ht(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function mt(e,t,n,a,i,r){let s=t[i];const o=n[i]||1;(e&1<<i||r&1<<i||null==s)&&(s=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const p=a[i];return s<0&&(s+=p),s=S.uZ(0,s,p-1),s}function ft(e,t,n,a,i,r){let s=t[i];const o=n[i]||1;(e&1<<i||r&1<<i||null==s)&&(s=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const p=a[i];return s<0&&(s+=p),s=o>0?S.uZ(0,s,p):S.uZ(-1,s,p-1),s}function gt(e,t,n){let a=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){a=e;break}for(let i=a+1;i<n.length;i++)if(t[i]>0||n[i]!==e[i])return!1;return!0}function vt(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function yt(e,t,n){let a;const i=e.shape.length;let r;return a="number"==typeof t?[t,...new Array(i-1).fill(0)]:t.length<i?t.concat(new Array(i-t.length).fill(0)):t.slice(),a.forEach((e=>{S.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),r=null==n?new Array(i).fill(-1):"number"==typeof n?[n,...new Array(i-1).fill(-1)]:n.length<i?n.concat(new Array(i-n.length).fill(-1)):n,r=r.map(((t,n)=>t>=0?t:(S.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,r]}function xt(e,t,n,a,i,r,s,o,p){let l;if(null==a?(l=new Array(t.length),l.fill(1)):l=a,null!=s&&0!=(s&s-1))throw new Error("Multiple ellipses in slice is not allowed.");let d=!1;const u={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:i,endMask:r,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:p};for(let e=0;e<u.dims;e++)d&&0!=(1<<e&o)&&u.numAddAxisAfterEllipsis++,1<<e&s&&(d=!0);d||(u.ellipsisMask|=1<<u.dims,u.dims++);const c={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const i=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<i;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(u,c);let h=!0,m=!0,f=!0;const g=[],v=[];for(let t=0;t<e.length;++t){if(0===c.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(c.shrinkAxisMask&1<<t),a=e[t];if(-1===a){g.push(n?1:-1);continue}const i=[c.beginMask&1<<t,c.endMask&1<<t],r=[c.strides[t]>0?0:-1,c.strides[t]>0?a:a-1];if(n&&c.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");f=f&&1===c.strides[t];const s=!!(c.beginMask&1<<t&&c.endMask&1<<t);if(c.beginValid&&c.endValid){if(n){const e=c.begin[t]<0?a+c.begin[t]:c.begin[t];if(c.begin[t]=e,c.end[t]=c.begin[t]+1,e<0||e>=a)throw Error(`slice index ${c.begin[t]} of dimension ${t} out of bounds.`)}else c.begin[t]=bt(c.begin[t],0,c.strides[t],a,i,r),c.end[t]=bt(c.end[t],1,c.strides[t],a,i,r);const e=1===c.strides[t]&&0===c.begin[t]&&c.end[t]===a;h=h&&e,m=m&&(0===t&&1===c.strides[t]||e)}else h=h&&1===c.strides[t]&&s,m=m&&(0===t&&1===c.strides[t]||s);let o,p=!1;if(c.beginValid&&c.endValid?(o=c.end[t]-c.begin[t],p=!0):n?(o=1,p=!0):s&&a>=0&&(o=c.strides[t]<0?-a:a,p=!0),p){let e;e=0===o||o<0!=c.strides[t]<0?0:Math.trunc(o/c.strides[t])+(o%c.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<c.finalShapeGatherIndices.length;++e){const t=c.finalShapeGatherIndices[e];t>=0?v.push(g[t]):-2===t&&v.push(1)}return{finalShapeSparse:v.filter(((e,t)=>-2!==c.finalShapeGatherIndices[t])),finalShape:v,isIdentity:h,sliceDim0:m,isSimpleSlice:f,begin:c.begin,end:c.end,strides:c.strides}}function bt(e,t,n,a,i,r){if(i[t])return n>0?r[t]:r[t+1&1];{const t=e<0?a+e:e;return t<r[0]?r[0]:t>r[1]?r[1]:t}}class wt{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class _t{constructor(){this.classNameMap={}}static getMap(){return null==_t.instance&&(_t.instance=new _t),_t.instance}static register(e){_t.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function St(e){(0,S.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,S.hu)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,S.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),_t.register(e)}var Tt=n(747),Et=n(9122);const Mt=.1;function Nt(e,t,n){return null==n&&(n=Ct()),At(e,t,((e,t)=>Dt(e,t,n)))}function Ct(){return 32===m.BV.backend.floatPrecision()?.001:Mt}function At(e,t,n){let a=!0;if(((0,S.fU)(e)||(0,S.fU)(t))&&(a=!1),(0,S.fU)(e)&&(0,S.fU)(t)&&(a=!0),a){const n=e.constructor.name,a=t.constructor.name;if(n!==a)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${a}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,ze.C)(e),a=(0,ze.C)(t);if(!(0,S.cO)(n,a))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${a}]`)}const i=(0,S.fU)(e)?e:(0,S.xH)(e),r=(0,S.fU)(t)?t:(0,S.xH)(t);if(i.length!==r.length)throw new Error(`Arrays have different lengths actual: ${i.length} vs expected: ${r.length}.\nActual:   ${i}.\nExpected: ${r}.`);for(let e=0;e<r.length;++e){const t=i[e],a=r[e];if(!n(t,a))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${a}.\nActual:   ${i}.\nExpected: ${r}.`)}}function It(e,t){e().then((()=>t.fail()),(()=>t()))}function Rt(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return(0,S.HD)(e)||(0,S.HD)(e[0])||(0,S.HD)(t)||(0,S.HD)(t[0])?At(e,n,((e,t)=>e==t)):At(e,t,((e,t)=>Dt(e,t,0)))}function kt(e,t,n){if(null==n&&(n=Ct()),!Dt(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Dt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Pt(e,t,n){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>n)throw new Error(`Value out of range:${e[a]} low: ${t}, high: ${n}`)}function Lt(e,t){const n=new Float32Array(e),a=new Float32Array(t);if(n.length!==a.length)throw new Error(`Expected ArrayBuffer to be of length ${a.length}, but it was ${n.length}`);for(let e=0;e<a.length;e++)if(n[e]!==a[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${a[e]} but got ${n[e]} instead`)}function Ot(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Ot(n):e[t]=(0,Et.encodeString)(n)}return e}const Bt="3.14.0";var Ft=n(4368),$t=n(6407),Vt=n(1274),zt=n(4841),Ut=n(3261),Gt=n(248),Wt=n(6577),Ht=n(633),qt=n(9494);class jt extends wt{minimize(e,t=!1,n){const{value:a,grads:i}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:i[e.name]})));this.applyGradients(e)}else this.applyGradients(i);return(0,Ft.B9)(i),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,Ht.pn)(e,t)}dispose(){null!=this.iterations_&&(0,Ft.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,qt.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(jt,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Xt extends jt{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=m.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=m.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,Ft.lu)((()=>(0,Wt.P)(a).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,Ft.lu)((()=>(0,Wt.P)(a).variable(!1)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const r=this.accumulatedGrads[n].variable,s=this.accumulatedUpdates[n].variable;(0,Ft.lu)((()=>{const e=(0,$t.I)((0,zt.d)(r,this.rho),(0,zt.d)((0,Gt.h)(i),1-this.rho)),t=(0,zt.d)((0,Vt.h)((0,Ut._)((0,$t.I)(s,this.epsilon)),(0,Ut._)((0,$t.I)(r,this.epsilon))),i),n=(0,$t.I)((0,zt.d)(s,this.rho),(0,zt.d)((0,Gt.h)(t),1-this.rho));r.assign(e),s.assign(n);const o=(0,$t.I)((0,zt.d)(t,-this.learningRate),a);a.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,Ft.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,Ft.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Xt.className="Adadelta",St(Xt);var Kt=n(4006);class Yt extends jt{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=m.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,Ft.lu)((()=>(0,Kt.h)(a.shape,this.initialAccumulatorValue).variable(e)))}}const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const r=this.accumulatedGrads[n].variable;(0,Ft.lu)((()=>{const e=(0,$t.I)(r,(0,Gt.h)(i));r.assign(e);const t=(0,$t.I)((0,zt.d)((0,Vt.h)(i,(0,Ut._)((0,$t.I)(e,m.BV.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,Ft.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Yt.className="Adagrad",St(Yt);var Zt=n(3453),Qt=n(827);class Jt extends jt{constructor(e,t,n,a=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,Ft.lu)((()=>{this.accBeta1=(0,qt.i)(t).variable(),this.accBeta2=(0,qt.i)(n).variable()})),null==a&&(this.epsilon=m.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Ft.lu)((()=>{const n=(0,Qt.l)(1,this.accBeta1),a=(0,Qt.l)(1,this.accBeta2);t.forEach(((t,i)=>{const r=m.BV.registeredVariables[t];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${t}/m`,variable:(0,Ft.lu)((()=>(0,Wt.P)(r).variable(!1)))}),null==this.accumulatedSecondMoment[i]&&(this.accumulatedSecondMoment[i]={originalName:`${t}/v`,variable:(0,Ft.lu)((()=>(0,Wt.P)(r).variable(!1)))});const s=Array.isArray(e)?e[i].tensor:e[t];if(null==s)return;const o=this.accumulatedFirstMoment[i].variable,p=this.accumulatedSecondMoment[i].variable,l=(0,$t.I)((0,zt.d)(o,this.beta1),(0,zt.d)(s,1-this.beta1)),d=(0,$t.I)((0,zt.d)(p,this.beta2),(0,zt.d)((0,Gt.h)(s),1-this.beta2)),u=(0,Vt.h)(l,n),c=(0,Vt.h)(d,a);o.assign(l),p.assign(d);const h=(0,$t.I)((0,zt.d)((0,Vt.h)(u,(0,$t.I)((0,Ut._)(c),this.epsilon)),-this.learningRate),r);r.assign(h)})),this.accBeta1.assign((0,zt.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,zt.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,Ft.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,Ft.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,Ft.lu)((()=>{this.accBeta1.assign((0,Zt.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,Zt.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Jt.className="Adam",St(Jt);var en=n(6235),tn=n(632);class nn extends jt{constructor(e,t,n,a=null,i=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,Ft.lu)((()=>{this.iteration=(0,qt.i)(0).variable(),this.accBeta1=(0,qt.i)(t).variable()})),null==a&&(this.epsilon=m.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Ft.lu)((()=>{const n=(0,Qt.l)(1,this.accBeta1),a=(0,Vt.h)(-this.learningRate,(0,$t.I)((0,zt.d)(this.iteration,this.decay),1));t.forEach(((t,i)=>{const r=m.BV.registeredVariables[t];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${t}/m`,variable:(0,Wt.P)(r).variable(!1)}),null==this.accumulatedWeightedInfNorm[i]&&(this.accumulatedWeightedInfNorm[i]={originalName:`${t}/v`,variable:(0,Wt.P)(r).variable(!1)});const s=Array.isArray(e)?e[i].tensor:e[t];if(null==s)return;const o=this.accumulatedFirstMoment[i].variable,p=this.accumulatedWeightedInfNorm[i].variable,l=(0,$t.I)((0,zt.d)(o,this.beta1),(0,zt.d)(s,1-this.beta1)),d=(0,zt.d)(p,this.beta2),u=(0,en.W)(s),c=(0,tn.g)(d,u);o.assign(l),p.assign(c);const h=(0,$t.I)((0,zt.d)((0,Vt.h)(a,n),(0,Vt.h)(l,(0,$t.I)(c,this.epsilon))),r);r.assign(h)})),this.iteration.assign((0,$t.I)(this.iteration,1)),this.accBeta1.assign((0,zt.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,Ft.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,Ft.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}nn.className="Adamax",St(nn);class an extends jt{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=m.BV.registeredVariables[t];(0,Ft.lu)((()=>{const e=(0,$t.I)((0,zt.d)(this.c,a),i);i.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,Ft.Cn)((0,qt.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}an.className="SGD",St(an);class rn extends an{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,qt.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=m.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,Ft.lu)((()=>(0,Wt.P)(a).variable(e)))}}const i=this.accumulations[n].variable,r=Array.isArray(e)?e[n].tensor:e[t];null!=r&&(0,Ft.lu)((()=>{let e;const t=(0,$t.I)((0,zt.d)(this.m,i),r);e=this.useNesterov?(0,$t.I)((0,zt.d)(this.c,(0,$t.I)(r,(0,zt.d)(t,this.m))),a):(0,$t.I)((0,zt.d)(this.c,t),a),i.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,Ft.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}rn.className="Momentum",St(rn);class sn extends jt{constructor(e,t=.9,n=0,a=null,i=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,null==a&&(this.epsilon=m.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=m.BV.registeredVariables[t],i=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,Ft.lu)((()=>(0,Wt.P)(a).variable(i)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,Ft.lu)((()=>(0,Wt.P)(a).variable(i)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,Ft.lu)((()=>(0,Wt.P)(a).variable(i)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;(0,Ft.lu)((()=>{const e=(0,$t.I)((0,zt.d)(s,this.decay),(0,zt.d)((0,Gt.h)(r),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,i=(0,$t.I)((0,zt.d)(t,this.decay),(0,zt.d)(r,1-this.decay)),p=(0,Vt.h)((0,zt.d)(r,this.learningRate),(0,Ut._)((0,Qt.l)(e,(0,$t.I)((0,Gt.h)(i),this.epsilon)))),l=(0,$t.I)((0,zt.d)(o,this.momentum),p);s.assign(e),t.assign(i),o.assign(l);const d=(0,Qt.l)(a,l);a.assign(d)}else{const e=(0,$t.I)((0,zt.d)(s,this.decay),(0,zt.d)((0,Gt.h)(r),1-this.decay)),t=(0,$t.I)((0,zt.d)(o,this.momentum),(0,Vt.h)((0,zt.d)(r,this.learningRate),(0,Ut._)((0,$t.I)(e,this.epsilon))));s.assign(e),o.assign(t);const n=(0,Qt.l)(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,Ft.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,Ft.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,Ft.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}sn.className="RMSProp",St(sn);class on{static sgd(e){return new an(e)}static momentum(e,t,n=!1){return new rn(e,t,n)}static rmsprop(e,t=.9,n=0,a=null,i=!1){return new sn(e,t,n,a,i)}static adam(e=.001,t=.9,n=.999,a=null){return new Jt(e,t,n,a)}static adadelta(e=.001,t=.95,n=null){return new Xt(e,t,n)}static adamax(e=.002,t=.9,n=.999,a=null,i=0){return new nn(e,t,n,a,i)}static adagrad(e,t=.1){return new Yt(e,t)}}var pn=n(1221),ln=n(4885),dn=n(9876);const un={sgd:on.sgd,momentum:on.momentum,adadelta:on.adadelta,adagrad:on.adagrad,rmsprop:on.rmsprop,adamax:on.adamax,adam:on.adam},cn="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function hn(){return new Promise((e=>cn((()=>e()))))}var mn=n(3591);function fn(e,t){const n=e[0].length;e.forEach(((e,t)=>{S.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),S.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const a=e[0];e.forEach(((e,i)=>{for(let r=0;r<n;r++)S.hu(r===t||e[r]===a[r],(()=>`Error in concat${n}D: Shape of tensors[${i}] (${e}) does not match the shape of the rest (${a}) along the non-concatenated axis ${i}.`))}))}function gn(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var vn=n(2582),yn=n(9323);const xn=30;function bn(e){return e<=xn?e:(0,S.jP)(e,Math.floor(Math.sqrt(e)))}function wn(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function _n(e,t,n,a=!0){let i=[];if(a)i=i.concat(t.slice(0)),i.push(e[0]/n),i=i.concat(e.slice(1));else{i=i.concat(e[0]);const n=t.length;for(let a=0;a<n;++a)i=i.concat([e[a+1]/t[a],t[a]]);i=i.concat(e.slice(n+1))}return i}function Sn(e,t,n=!0){const a=[];if(n){a.push(t);for(let n=t+1;n<e;++n)n<=2*t?(a.push(n),a.push(n-(t+1))):a.push(n)}else{const n=[],i=[];for(let a=1;a<e;++a)a>=2*t+1||a%2==1?i.push(a):n.push(a);a.push(...n),a.push(0),a.push(...i)}return a}function Tn(e,t,n,a=!0){const i=[];a?i.push(e[0]/n):i.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?a?i.push(t[n-1]*e[n]):i.push(e[n]/t[n-1]):i.push(e[n]);return i}function En(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function Mn(e,t,n){const a=e.slice(0,1);for(let i=0;i<n;++i)a.push(e[i+1]-t[i][0]-t[i][1]);return a}const Nn=1.7580993408473768,Cn=1.0507009873554805,An=.3275911,In=.254829592,Rn=-.284496736,kn=1.421413741,Dn=-1.453152027,Pn=1.061405429;var Ln=n(4706);function On(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function Bn(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function Fn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function $n(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function Vn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function zn(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function Un(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let i=0;i<Math.ceil(e/2);i++){const r=(t?2:-2)*Math.PI*(i/e);n[i]=Math.cos(r),a[i]=Math.sin(r)}return{real:n,imag:a}}function Gn(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const Wn=/->/g;function Hn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Wn,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[a,i]=e.split("->");(0,S.hu)(-1===a.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const r=a.split(","),s=r.length;if(t!==s)throw new Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<i.length;++e){const t=i[e];if(!r.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<a.length;++e){const t=a[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const p=new Array(r.length);for(let e=0;e<s;++e){if(new Set(r[e].split("")).size!==r[e].length)throw new Error(`Found duplicate axes in input component ${r[e]}. Support for duplicate axes in input is not implemented yet.`);p[e]=[];for(let t=0;t<r[e].length;++t)p[e].push(o.indexOf(r[e][t]))}const l=o.length,d=[];for(let e=i.length;e<l;++e)d.push(e);return{allDims:o,summedDims:d,idDims:p}}function qn(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const a=[];for(let t=0;t<e;++t)-1===n[t]&&a.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function jn(e,t,n){const a=new Array(e);for(let e=0;e<n.length;++e){const i=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===a[t[e][n]]?a[t[e][n]]=i[n]:(0,S.hu)(a[t[e][n]]===i[n],(()=>`Expected dimension ${a[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(i)}, but got dimension ${i[n]}`))}}function Xn(e,t){const n=e,a=[];let i=0;0===e.length&&n.push(-1),i=e.length+1;for(let e=0;e<i;++e)a.push([]);const r=[];for(let e=0;e<n.length;++e){const i=Yn(t,n[e]);for(const t of i)-1===r.indexOf(t)&&(a[e].push(t),r.push(t))}return{path:n,steps:a}}function Kn(e){return e.every(((e,t)=>e===t))}function Yn(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function Zn(e,t,n=0){let a=[];if("number"==typeof t)(0,S.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const i=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,S.hu)(i<=1,(()=>"There should be only one negative value in split array."));const r=t.indexOf(-1);if(-1!==r){const a=t.reduce(((e,t)=>t>0?e+t:e));t[r]=e.shape[n]-a}(0,S.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function Qn(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Jn(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function ea(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function ta(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function na(e,t){return`size ${e} must be non-negative, not ${t}`}function aa(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ia(e,t){return`Input to reshape is a SparseTensor with ${(0,S.NA)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,S.NA)(t)}. inputShape=${e} outputShape= ${t}`}function ra(e,t){return`Input to reshape is a tensor with ${(0,S.NA)(e)} dense values, but the requested shape has ${(0,S.NA)(t)}. inputShape=${e} outputShape=${t}`}function sa(){return"segment ids must be >= 0"}function oa(){return"segment ids are not increasing"}function pa(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function la(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function da(e,t){let n,a=!1;for(e<=xn?(n=e,a=!0):n=(0,S.jP)(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=(0,S.jP)(e,n+1);return n}function ua(e,t,n){const a=[],i=e.length;for(let r=0;r<i;r++)r!==t?a.push(e[r]):a.push(n);return a}function ca(e,t,n,a){const i=t.shape.length,r=e.shape.length;if(0!==a&&(a<-i||a>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${a}`);if(a<0&&(a+=i),a>r)throw new Error(`batchDims (${a}) must be less than rank(x) (\n    ${r}).`);if(n<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let n=0;n<a;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const s=e.shape[n],o=[];let p=1,l=1,d=1;for(let t=0;t<a;++t)o.push(e.shape[t]),p*=e.shape[t];for(let t=a;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=a;e<i;e++)o.push(t.shape[e]);for(let t=n+1;t<r;t++)o.push(e.shape[t]),d*=e.shape[t];return{batchSize:p,sliceSize:d,outerSize:l,dimSize:s,outputShape:o}}function ha(e){try{return e.map((e=>(0,Et.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function ma(e){return e.map((e=>(0,Et.encodeString)(e)))}var fa=n(3337),ga=n(8333),va=n(8713)},9121:(e,t,n)=>{"use strict";n.d(t,{SY:()=>a,VG:()=>i,Sp:()=>r,mm:()=>s,Xz:()=>o,oT:()=>p,IK:()=>l,sJ:()=>d,aJ:()=>u,M2:()=>c,qw:()=>h,jM:()=>m,Oy:()=>f,QC:()=>g,Jh:()=>v,RO:()=>y,_k:()=>x,IM:()=>b,XL:()=>w,zw:()=>_,zv:()=>S,Ly:()=>T,eE:()=>E,RF:()=>M,gJ:()=>N,xn:()=>C,Zz:()=>A,yj:()=>I,Eh:()=>R,mh:()=>k,wU:()=>D,wm:()=>P,x1:()=>L,o2:()=>O,ik:()=>B,mc:()=>F,TR:()=>$,iH:()=>V,Vc:()=>z,QR:()=>U,T0:()=>G,ci:()=>W,sL:()=>H,y7:()=>q,$w:()=>j,p4:()=>X,ek:()=>K,Vn:()=>Y,oH:()=>Z,$g:()=>Q,SX:()=>J,HE:()=>ee,Om:()=>te,hd:()=>ne,NE:()=>ae,YF:()=>ie,Y0:()=>re,vw:()=>se,de:()=>oe,Uy:()=>pe,OR:()=>le,je:()=>de,sH:()=>ue,qi:()=>ce,q1:()=>he,iZ:()=>me,Ac:()=>fe,iJ:()=>ge,Qg:()=>ve,J_:()=>ye,av:()=>xe,iW:()=>be,r7:()=>we,J$:()=>_e,vt:()=>Se,CA:()=>Te,e7:()=>Ee,Zb:()=>Me,kU:()=>Ne,PY:()=>Ce,Vf:()=>Ae,MZ:()=>Ie,qC:()=>Re,eZ:()=>ke,Hh:()=>De,Yo:()=>Pe,BM:()=>Le,mT:()=>Oe,OV:()=>Be,OA:()=>Fe,OU:()=>$e,vF:()=>Ve,q2:()=>ze,c1:()=>Ue,q8:()=>Ge,jQ:()=>We,Vb:()=>He,NZ:()=>qe,wY:()=>je,ku:()=>Xe,yQ:()=>Ke,uv:()=>Ye,cy:()=>Ze,W0:()=>Qe,qW:()=>Je,we:()=>et,Qi:()=>tt,ly:()=>nt,Kg:()=>at,pe:()=>it,o0:()=>rt,Dl:()=>st,e6:()=>ot,xJ:()=>pt,$H:()=>lt,qk:()=>dt,HZ:()=>ut,dp:()=>ct,Hm:()=>ht,_Y:()=>mt,zb:()=>ft,Sb:()=>gt,mK:()=>vt,e0:()=>yt,bV:()=>xt,xQ:()=>bt,Ph:()=>wt,oF:()=>_t,p2:()=>St,RQ:()=>Tt,w3:()=>Et,i5:()=>Mt,a5:()=>Nt,MR:()=>Ct,FK:()=>At,GB:()=>It,TQ:()=>Rt,L8:()=>kt,Gc:()=>Dt,O3:()=>Pt,nh:()=>Lt,YW:()=>Ot,Zj:()=>Bt,D2:()=>Ft,_t:()=>$t,bK:()=>Vt,m2:()=>zt,_J:()=>Ut,s1:()=>Gt,Xk:()=>Wt,Tr:()=>Ht,sE:()=>qt,MI:()=>jt,n9:()=>Xt,cW:()=>Kt,wx:()=>Yt,G3:()=>Zt,kp:()=>Qt,To:()=>Jt,Qv:()=>en,Ru:()=>tn,h8:()=>nn,eB:()=>an,b9:()=>rn,us:()=>sn,_V:()=>on,lu:()=>pn});const a="Abs",i="Acos",r="Acosh",s="Add",o="AddN",p="All",l="Any",d="ArgMax",u="ArgMin",c="Asin",h="Asinh",m="Atan",f="Atanh",g="Atan2",v="AvgPool",y="AvgPoolGrad",x="AvgPool3D",b="AvgPool3DGrad",w="BatchMatMul",_="BatchToSpaceND",S="Bincount",T="BroadcastTo",E="BroadcastArgs",M="Cast",N="Ceil",C="ClipByValue",A="Complex",I="ComplexAbs",R="Concat",k="Conv2D",D="Conv2DBackpropFilter",P="Conv2DBackpropInput",L="Conv3D",O="Conv3DBackpropFilterV2",B="Conv3DBackpropInputV2",F="Cos",$="Cosh",V="Cumsum",z="CropAndResize",U="DenseBincount",G="DepthToSpace",W="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",q="DepthwiseConv2dNativeBackpropInput",j="Diag",X="Dilation2D",K="Dilation2DBackpropInput",Y="Dilation2DBackpropFilter",Z="RealDiv",Q="Einsum",J="Elu",ee="EluGrad",te="Erf",ne="Equal",ae="Exp",ie="ExpandDims",re="Expm1",se="FFT",oe="Fill",pe="FlipLeftRight",le="Floor",de="FloorDiv",ue="FusedBatchNorm",ce="GatherV2",he="GatherNd",me="Greater",fe="GreaterEqual",ge="Identity",ve="IFFT",ye="Imag",xe="IsFinite",be="IsInf",we="IsNan",_e="LeakyRelu",Se="Less",Te="LessEqual",Ee="LinSpace",Me="Log",Ne="Log1p",Ce="LogicalAnd",Ae="LogicalNot",Ie="LogicalOr",Re="LogSoftmax",ke="LRN",De="LRNGrad",Pe="Max",Le="Maximum",Oe="MaxPool",Be="MaxPoolGrad",Fe="MaxPool3D",$e="MaxPool3DGrad",Ve="MaxPoolWithArgmax",ze="Mean",Ue="Min",Ge="Minimum",We="MirrorPad",He="Mod",qe="Multinomial",je="Multiply",Xe="Neg",Ke="NotEqual",Ye="NonMaxSuppressionV3",Ze="NonMaxSuppressionV4",Qe="NonMaxSuppressionV5",Je="OnesLike",et="OneHot",tt="Pack",nt="PadV2",at="Pool",it="Pow",rt="Prelu",st="Prod",ot="Range",pt="Real",lt="Reciprocal",dt="Relu",ut="Reshape",ct="ResizeNearestNeighbor",ht="ResizeNearestNeighborGrad",mt="ResizeBilinear",ft="ResizeBilinearGrad",gt="Relu6",vt="Reverse",yt="Round",xt="Rsqrt",bt="ScatterNd",wt="Select",_t="Selu",St="Slice",Tt="Sin",Et="Sinh",Mt="Sign",Nt="Sigmoid",Ct="Softplus",At="Sqrt",It="Sum",Rt="SpaceToBatchND",kt="SplitV",Dt="Softmax",Pt="SparseFillEmptyRows",Lt="SparseReshape",Ot="SparseSegmentMean",Bt="SparseSegmentSum",Ft="SparseToDense",$t="SquaredDifference",Vt="Square",zt="StridedSlice",Ut="StringNGrams",Gt="StringSplit",Wt="StringToHashBucketFast",Ht="Sub",qt="Tan",jt="Tanh",Xt="Tile",Kt="TopK",Yt="Transform",Zt="Transpose",Qt="Unique",Jt="Unpack",en="UnsortedSegmentSum",tn="ZerosLike",nn="Step",an="FromPixels",rn="RotateWithOffset",sn="_FusedMatMul",on="FusedConv2D",pn="FusedDepthwiseConv2D"},6151:(e,t,n)=>{"use strict";n.d(t,{pI:()=>p,uk:()=>l,tr:()=>d,wC:()=>u,Li:()=>c,nE:()=>h,bt:()=>m,T3:()=>f});var a=n(2885),i=n(5938),r=n(4706);const s=(0,i.R)("kernelRegistry",(()=>new Map)),o=(0,i.R)("gradRegistry",(()=>new Map));function p(e,t){const n=g(e,t);return s.get(n)}function l(e){return o.get(e)}function d(e){const t=s.entries(),n=[];for(;;){const{done:a,value:i}=t.next();if(a)break;const[r,s]=i,[o]=r.split("_");o===e&&n.push(s)}return n}function u(e){const{kernelName:t,backendName:n}=e,a=g(t,n);s.has(a)&&r.Z(`The kernel '${t}' for backend '${n}' is already registered`),s.set(a,e)}function c(e){const{kernelName:t}=e;o.has(t)&&(0,a.OB)().getBool("DEBUG")&&r.Z(`Overriding the gradient for '${t}'`),o.set(t,e)}function h(e,t){const n=g(e,t);if(!s.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);s.delete(n)}function m(e){if(!o.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);o.delete(e)}function f(e,t){d(e).forEach((e=>{u(Object.assign({},e,{backendName:t}))}))}function g(e,t){return`${t}_${e}`}},4706:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i,c:()=>r});var a=n(2885);function i(...e){(0,a.OB)().getBool("IS_TEST")||(0,a.OB)().getBool("PROD")||console.warn(...e)}function r(...e){(0,a.OB)().getBool("IS_TEST")||(0,a.OB)().getBool("PROD")||console.log(...e)}},6235:(e,t,n)=>{"use strict";n.d(t,{W:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({abs_:function(e){const t=(0,r._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return a.BV.runKernel(i.yj,e)}{const e={x:t};return a.BV.runKernel(i.SY,e)}}})},7839:(e,t,n)=>{"use strict";n.d(t,{K:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({acos_:function(e){const t={x:(0,r._1)(e,"x","acos")};return a.BV.runKernel(i.VG,t)}})},1470:(e,t,n)=>{"use strict";n.d(t,{_:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({acosh_:function(e){const t={x:(0,r._1)(e,"x","acosh")};return a.BV.runKernel(i.Sp,t)}})},6407:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var a=n(7097),i=n(9121),r=n(747),s=n(3740);const o=(0,n(2668).op)({add_:function(e,t){let n=(0,s._1)(e,"a","add"),o=(0,s._1)(t,"b","add");[n,o]=(0,r.makeTypesMatch)(n,o);const p={a:n,b:o};return a.BV.runKernel(i.mm,p)}})},3135:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({addN_:function(e){s.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),s.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,r._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!s.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const o=t;return a.BV.runKernel(i.Xz,o)}})},781:(e,t,n)=>{"use strict";n.d(t,{$:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({all_:function(e,t=null,n=!1){const s={x:(0,r._1)(e,"x","all","bool")},o={axis:t,keepDims:n};return a.BV.runKernel(i.oT,s,o)}})},2998:(e,t,n)=>{"use strict";n.d(t,{Y:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({any_:function(e,t=null,n=!1){const s={x:(0,r._1)(e,"x","any","bool")},o={axis:t,keepDims:n};return a.BV.runKernel(i.IK,s,o)}})},47:(e,t,n)=>{"use strict";n.d(t,{N:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({argMax_:function(e,t=0){const n={x:(0,r._1)(e,"x","argMax")},s={axis:t};return a.BV.runKernel(i.sJ,n,s)}})},7394:(e,t,n)=>{"use strict";n.d(t,{v:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({argMin_:function(e,t=0){const n={x:(0,r._1)(e,"x","argMin")},s={axis:t};return a.BV.runKernel(i.aJ,n,s)}})},2421:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({asin_:function(e){const t={x:(0,r._1)(e,"x","asin")};return a.BV.runKernel(i.M2,t)}})},1891:(e,t,n)=>{"use strict";n.d(t,{V:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({asinh_:function(e){const t={x:(0,r._1)(e,"x","asinh")};return a.BV.runKernel(i.qw,t)}})},7037:(e,t,n)=>{"use strict";n.d(t,{z:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({atan_:function(e){const t={x:(0,r._1)(e,"x","atan")};return a.BV.runKernel(i.jM,t)}})},9812:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var a=n(7097),i=n(9121),r=n(747),s=n(3740);const o=(0,n(2668).op)({atan2_:function(e,t){let n=(0,s._1)(e,"a","atan2"),o=(0,s._1)(t,"b","atan2");[n,o]=(0,r.makeTypesMatch)(n,o);const p={a:n,b:o};return a.BV.runKernel(i.QC,p)}})},369:(e,t,n)=>{"use strict";n.d(t,{C:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({atanh_:function(e){const t={x:(0,r._1)(e,"x","atanh")};return a.BV.runKernel(i.Oy,t)}})},5176:(e,t,n)=>{"use strict";n.d(t,{w:()=>u});var a=n(7097),i=n(9121),r=n(3740),s=n(569),o=n(2271),p=n(2582),l=n(2668),d=n(4968);const u=(0,l.op)({avgPool_:function(e,t,n,l,u){const c=(0,r._1)(e,"x","avgPool","float32");s.hu(p.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let h=c,m=!1;3===c.rank&&(m=!0,h=(0,d.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),s.hu(4===h.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${h.rank}.`)),p.m("avgPool",l,u);const f={x:h},g={filterSize:t,strides:n,pad:l,dimRoundingMode:u};let v=a.BV.runKernel(i.Jh,f,g);return v=(0,o.p)(v,c.dtype),m?(0,d.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},1749:(e,t,n)=>{"use strict";n.d(t,{u:()=>u});var a=n(7097),i=n(9121),r=n(3740),s=n(569),o=n(2582),p=n(2271),l=n(2668),d=n(4968);const u=(0,l.op)({avgPool3d_:function(e,t,n,l,u,c="NDHWC"){const h=(0,r._1)(e,"x","avgPool3d","float32");let m=h,f=!1;4===h.rank&&(f=!0,m=(0,d.X)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),s.hu(5===m.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${m.rank}.`)),s.hu("NDHWC"===c,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${c}`)),(0,o.m)("avgPool3d",l,u);const g={x:m},v={filterSize:t,strides:n,pad:l,dimRoundingMode:u,dataFormat:c};let y=a.BV.runKernel(i._k,g,v);return y=(0,p.p)(y,m.dtype),f?(0,d.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},3591:(e,t,n)=>{"use strict";n.d(t,{YB:()=>i,Vh:()=>r,kz:()=>s,rv:()=>o,lB:()=>p,Q3:()=>l,LJ:()=>d,sY:()=>u});var a=n(569);function i(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function r(e,t,n){const a=e.length+t.length,i=[];let r=0,s=0;for(let o=0;o<a;o++)-1===n.indexOf(o)?i.push(e[r++]):i.push(t[s++]);return i}function s(e,t){const n=[],a=e.length;for(let i=0;i<a;i++)-1===t.indexOf(i)&&n.push(e[i]);return[n,t.map((t=>e[t]))]}function o(e,t){return r(e,t.map((e=>1)),t)}function p(e,t,n){a.hu(i(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(i(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function d(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function u(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}},8441:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({batchToSpaceND_:function(e,t,n){const o=(0,r._1)(e,"x","batchToSpaceND"),p=t.reduce(((e,t)=>e*t));s.hu(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),s.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),s.hu(o.shape[0]%p==0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${p}`));const l={x:o},d={blockShape:t,crops:n};return a.BV.runKernel(i.zw,l,d)}})},7505:(e,t,n)=>{"use strict";n.d(t,{t:()=>p});var a=n(7097),i=n(9121),r=n(3740),s=n(569),o=n(4968);const p=(0,n(2668).op)({batchNorm_:function(e,t,n,p,l,d){null==d&&(d=.001);const u=(0,r._1)(e,"x","batchNorm"),c=(0,r._1)(t,"mean","batchNorm"),h=(0,r._1)(n,"variance","batchNorm");let m,f;null!=l&&(m=(0,r._1)(l,"scale","batchNorm")),null!=p&&(f=(0,r._1)(p,"offset","batchNorm")),s.hu(c.rank===h.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.hu(null==f||c.rank===f.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.hu(null==m||c.rank===m.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g=function(e){let t;return t=0===e.rank||1===e.rank?(0,o.X)(e,[1,1,1,e.size]):2===e.rank?(0,o.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(u),v={x:g,scale:m,offset:f,mean:c,variance:h},y={varianceEpsilon:d},x=a.BV.runKernel(i.sH,v,y);return(0,o.X)(x,u.shape)}})},3865:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({bincount_:function(e,t,n){const o=(0,r._1)(e,"x","bincount"),p=(0,r._1)(t,"weights","bincount");s.hu("int32"===o.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`)),s.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),s.hu(p.size===o.size||0===p.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${p.shape}.`));const l={x:o,weights:p},d={size:n};return a.BV.runKernel(i.zv,l,d)}})},8194:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({broadcastArgs_:function(e,t){const n=(0,r._1)(e,"s0","broadcastArgs","int32"),s=(0,r._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==s.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const o={s0:n,s1:s};return a.BV.runKernel(i.eE,o)}})},8247:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var a=n(7097),i=n(9121),r=n(3740),s=n(8723),o=n(2668),p=n(4968);const l=(0,o.op)({broadcastTo_:function(e,t){let n=(0,r._1)(e,"broadcastTo","x");const o=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,p.X)(n,e)}const l=n.shape,d=Array.from(t);for(let e=t.length-1;e>=0;e--)if(l[e]===t[e])d[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(0===d.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,s.d)(n);const u={x:n},c={reps:d};return a.BV.runKernel(i.n9,u,c)}})},2200:(e,t,n)=>{"use strict";function a(e,t){const n=e.length,a=[];for(let i=0;i<n;i++){const r=n-1-i,s=e[r]||1;(t[t.length-1-i]||1)>1&&1===s&&a.unshift(r)}return a}function i(e,t){const n=[];for(let a=0;a<t.length;a++){const i=e[e.length-a-1],r=t.length-a-1,s=t[r];(null==i||1===i&&s>1)&&n.unshift(r)}return n}function r(e,t){const n=[],a=Math.max(e.length,t.length);for(let i=0;i<a;i++){let a=e[e.length-i-1];null==a&&(a=1);let r=t[t.length-i-1];if(null==r&&(r=1),1===a)n.unshift(r);else if(1===r)n.unshift(a);else{if(a!==r)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(a)}}return n}n.r(t),n.d(t,{getBroadcastDims:()=>a,getReductionAxes:()=>i,assertAndGetBroadcastShape:()=>r})},2657:(e,t,n)=>{"use strict";n.d(t,{f:()=>r});var a=n(4077),i=n(569);function r(e,t="float32",n){return t=t||"float32",i.Mu(e),new a.YD(e,t,n)}},2271:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({cast_:function(e,t){const n=(0,r._1)(e,"x","cast");if(!s.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},p={dtype:t};return a.BV.runKernel(i.RF,o,p)}})},6825:(e,t,n)=>{"use strict";n.d(t,{m:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({ceil_:function(e){const t={x:(0,r._1)(e,"x","ceil","float32")};return a.BV.runKernel(i.gJ,t)}})},2279:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({clipByValue_:function(e,t,n){const o=(0,r._1)(e,"x","clipByValue");s.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const p={x:o},l={clipValueMin:t,clipValueMax:n};return a.BV.runKernel(i.xn,p,l)}})},8723:(e,t,n)=>{"use strict";n.d(t,{d:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({clone_:function(e){const t={x:(0,r._1)(e,"x","clone","string_or_numeric")};return a.BV.runKernel(i.iJ,t)}})},1661:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({complex_:function(e,t){const n=(0,r._1)(e,"real","complex"),o=(0,r._1)(t,"imag","complex");s.k5(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const p={real:n,imag:o};return a.BV.runKernel(i.Zz,p)}})},6884:(e,t,n)=>{"use strict";n.d(t,{z:()=>p});var a=n(7097),i=n(9121),r=n(3740),s=n(569),o=n(8723);const p=(0,n(2668).op)({concat_:function(e,t=0){(0,s.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,r.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.d)(n[0]);const p=n,l={axis:t};return a.BV.runKernel(i.Eh,p,l)}})},1355:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var a=n(3740),i=n(569),r=n(4794),s=n(2582),o=n(2668),p=n(4968);const l=(0,o.op)({conv1d_:function(e,t,n,o,l="NWC",d=1,u){const c=(0,a._1)(e,"x","conv1d"),h=(0,a._1)(t,"filter","conv1d");let m=c,f=!1;2===c.rank&&(f=!0,m=(0,p.X)(c,[1,c.shape[0],c.shape[1]])),i.hu(3===m.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${m.rank}.`)),i.hu(3===h.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${h.rank}.`)),s.m("conv1d",o,u),i.hu(m.shape[2]===h.shape[1],(()=>`Error in conv1d: depth of input (${m.shape[2]}) must match input depth for filter ${h.shape[1]}.`)),i.hu(s.jT(n,d),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${d}'`)),i.hu("NWC"===l,(()=>`Error in conv1d: got dataFormat of ${l} but only NWC is currently supported.`));const g=(0,p.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),v=(0,p.X)(m,[m.shape[0],1,m.shape[1],m.shape[2]]),y=[1,n],x=[1,d],b=(0,r.T)(v,g,y,o,"NHWC",x,u);return f?(0,p.X)(b,[b.shape[2],b.shape[3]]):(0,p.X)(b,[b.shape[0],b.shape[2],b.shape[3]])}})},4794:(e,t,n)=>{"use strict";n.d(t,{T:()=>d});var a=n(7097),i=n(9121),r=n(3740),s=n(569),o=n(2582),p=n(2668),l=n(4968);const d=(0,p.op)({conv2d_:function(e,t,n,p,d="NHWC",u=[1,1],c){const h=(0,r._1)(e,"x","conv2d","float32"),m=(0,r._1)(t,"filter","conv2d","float32");let f=h,g=!1;3===h.rank&&(g=!0,f=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),s.hu(4===f.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${f.rank}.`)),s.hu(4===m.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${m.rank}.`)),o.m("conv2d",p,c);const v="NHWC"===d?f.shape[3]:f.shape[1];s.hu(v===m.shape[2],(()=>`Error in conv2d: depth of input (${v}) must match input depth for filter ${m.shape[2]}.`)),s.hu(o.jT(n,u),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`));const y={x:f,filter:m},x={strides:n,pad:p,dataFormat:d,dilations:u,dimRoundingMode:c},b=a.BV.runKernel(i.mh,y,x);return g?(0,l.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},9832:(e,t,n)=>{"use strict";n.d(t,{_:()=>l});var a=n(7097),i=n(9121),r=n(569),s=n(2582),o=n(2668),p=n(4968);const l=(0,o.op)({conv2DBackpropInput_:function(e,t,n,o,l,d="NHWC",u){r.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let c=e,h=t,m=!1;3===t.rank&&(m=!0,h=(0,p.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),c=[1,e[0],e[1],e[2]]),r.hu(4===c.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${c.length}.`)),r.hu(4===h.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${h.rank}`)),r.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const f="NHWC"===d?c[3]:c[1],g="NHWC"===d?h.shape[3]:h.shape[1];r.hu(f===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`)),r.hu(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),s.m("conv2dDerInput",l,u);const v={dy:h,filter:n},y={strides:o,pad:l,dataFormat:d,dimRoundingMode:u,inputShape:c},x=a.BV.runKernel(i.wm,v,y);return m?(0,p.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},1405:(e,t,n)=>{"use strict";n.d(t,{b:()=>r});var a=n(3740),i=n(9832);const r=(0,n(2668).op)({conv2dTranspose_:function(e,t,n,r,s,o){const p=(0,a._1)(e,"x","conv2dTranspose"),l=(0,a._1)(t,"filter","conv2dTranspose");return(0,i._)(n,p,l,r,s,"NHWC",o)}})},473:(e,t,n)=>{"use strict";n.d(t,{p:()=>d});var a=n(7097),i=n(9121),r=n(3740),s=n(569),o=n(2582),p=n(2668),l=n(4968);const d=(0,p.op)({conv3d_:function(e,t,n,p,d="NDHWC",u=[1,1,1]){const c=(0,r._1)(e,"x","conv3d"),h=(0,r._1)(t,"filter","conv3d");let m=c,f=!1;4===c.rank&&(f=!0,m=(0,l.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),s.hu(5===m.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${m.rank}.`)),s.hu(5===h.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${h.rank}.`)),s.hu(m.shape[4]===h.shape[3],(()=>`Error in conv3d: depth of input (${m.shape[4]}) must match input depth for filter ${h.shape[3]}.`)),s.hu((0,o.jT)(n,u),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`)),s.hu("NDHWC"===d,(()=>`Error in conv3d: got dataFormat of ${d} but only NDHWC is currently supported.`));const g={x:m,filter:h},v={strides:n,pad:p,dataFormat:d,dilations:u},y=a.BV.runKernel(i.x1,g,v);return f?(0,l.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},2582:(e,t,n)=>{"use strict";n.d(t,{Rf:()=>i,Xw:()=>r,pl:()=>s,Ix:()=>o,jw:()=>p,aO:()=>l,I0:()=>m,jT:()=>f,sl:()=>g,m:()=>v});var a=n(569);function i(e,t,n,a,i="NHWC",r){return o(e,[...t,e[3]],n,r,a,null,null,g(i))}function r(e,t,n,a,i,r,s="channelsLast"){const[p,l]=d(t);let u;if("channelsLast"===s)u=[p,l,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);u=[p,l,e[1],e[1]]}return o(e,u,n,a,i,r,!1,s)}function s(e,t,n,a,i,r,s="NDHWC"){const[o,l,d]=u(t);let c,h;if("NDHWC"===s)h="channelsLast",c=[o,l,d,e[4],e[4]];else{if("NCDHW"!==s)throw new Error(`Unknown dataFormat ${s}`);h="channelsFirst",c=[o,l,d,e[1],e[1]]}return p(e,c,n,a,i,!1,h,r)}function o(e,t,n,a,i,r,s=!1,o="channelsLast"){let[p,u,m,f]=[-1,-1,-1,-1];if("channelsLast"===o)[p,u,m,f]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[p,f,u,m]=e}const[g,v,,y]=t,[x,b]=d(n),[w,_]=d(a),S=c(g,w),T=c(v,_),{padInfo:E,outHeight:M,outWidth:N}=function(e,t,n,a,i,r,s,o,p){let d,u,c;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const i=function(e,t,n,a,i){null==a&&(a=l(e,t,n));const r=e[1];return[h((e[0]-t+2*a)/n+1,i),h((r-t+2*a)/n+1,i)]}([t,n],r,a,e,o);u=i[0],c=i[1]}else if("same"===e){u=Math.ceil(t/a),c=Math.ceil(n/i);const e=Math.max(0,(u-1)*a+r-t),o=Math.max(0,(c-1)*i+s-n),p=Math.floor(e/2),l=e-p,h=Math.floor(o/2);d={top:p,bottom:l,left:h,right:o-h,type:"SAME"}}else if("valid"===e)d={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-r+1)/a),c=Math.ceil((n-s+1)/i);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const l="channelsLast"===p?e[1][0]:e[2][0],m="channelsLast"===p?e[1][1]:e[2][1],f="channelsLast"===p?e[2][0]:e[3][0],g="channelsLast"===p?e[2][1]:e[3][1];d={top:l,bottom:m,left:f,right:g,type:0===l&&0===m&&0===f&&0===g?"VALID":"EXPLICIT"},u=h((t-r+l+m)/a+1,o),c=h((n-s+f+g)/i+1,o)}}return{padInfo:d,outHeight:u,outWidth:c}}(i,u,m,x,b,S,T,r,o),C=s?y*f:y;let A;return"channelsFirst"===o?A=[p,C,M,N]:"channelsLast"===o&&(A=[p,M,N,C]),{batchSize:p,dataFormat:o,inHeight:u,inWidth:m,inChannels:f,outHeight:M,outWidth:N,outChannels:C,padInfo:E,strideHeight:x,strideWidth:b,filterHeight:g,filterWidth:v,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationHeight:w,dilationWidth:_,inShape:e,outShape:A,filterShape:t}}function p(e,t,n,a,i,r=!1,s="channelsLast",o){let[p,d,m,f,g]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[p,d,m,f,g]=e;else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);[p,g,d,m,f]=e}const[v,y,x,,b]=t,[w,_,S]=u(n),[T,E,M]=u(a),N=c(v,T),C=c(y,E),A=c(x,M),{padInfo:I,outDepth:R,outHeight:k,outWidth:D}=function(e,t,n,a,i,r,s,o,p,d,u){let c,m,f,g;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,i,r){null==i&&(i=l(e,t,a));const s=e[1],o=e[2];return[h((e[0]-t+2*i)/a+1,r),h((s-t+2*i)/a+1,r),h((o-t+2*i)/a+1,r),1]}([t,n,a,1],o,0,i,e,u);m=r[0],f=r[1],g=r[2]}else if("same"===e){m=Math.ceil(t/i),f=Math.ceil(n/r),g=Math.ceil(a/s);const e=(m-1)*i+o-t,l=(f-1)*r+p-n,u=(g-1)*s+d-a,h=Math.floor(e/2),v=e-h,y=Math.floor(l/2),x=l-y,b=Math.floor(u/2);c={top:y,bottom:x,left:b,right:u-b,front:h,back:v,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);c={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},m=Math.ceil((t-o+1)/i),f=Math.ceil((n-p+1)/r),g=Math.ceil((a-d+1)/s)}return{padInfo:c,outDepth:m,outHeight:f,outWidth:g}}(i,d,m,f,w,_,S,N,C,A,o),P=r?b*g:b;let L;return"channelsFirst"===s?L=[p,P,R,k,D]:"channelsLast"===s&&(L=[p,R,k,D,P]),{batchSize:p,dataFormat:s,inDepth:d,inHeight:m,inWidth:f,inChannels:g,outDepth:R,outHeight:k,outWidth:D,outChannels:P,padInfo:I,strideDepth:w,strideHeight:_,strideWidth:S,filterDepth:v,filterHeight:y,filterWidth:x,effectiveFilterDepth:N,effectiveFilterHeight:C,effectiveFilterWidth:A,dilationDepth:T,dilationHeight:E,dilationWidth:M,inShape:e,outShape:L,filterShape:t}}function l(e,t,n,a=1){const i=c(t,a);return Math.floor((e[0]*(n-1)-n+i)/2)}function d(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function u(e){return"number"==typeof e?[e,e,e]:e}function c(e,t){return t<=1?e:e+(e-1)*(t-1)}function h(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function m(e){const[t,n,a]=d(e);return 1===t&&1===n&&1===a}function f(e,t){return m(e)||m(t)}function g(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function v(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)a.hu(a.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{a.hu(a.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},173:(e,t,n)=>{"use strict";n.d(t,{m:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({cos_:function(e){const t={x:(0,r._1)(e,"x","cos","float32")};return a.BV.runKernel(i.mc,t)}})},2699:(e,t,n)=>{"use strict";n.d(t,{f:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({cosh_:function(e){const t={x:(0,r._1)(e,"x","cosh","float32")};return a.BV.runKernel(i.TR,t)}})},7405:(e,t,n)=>{"use strict";n.d(t,{z:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({cumsum_:function(e,t=0,n=!1,s=!1){const o={x:(0,r._1)(e,"x","cumsum")},p={axis:t,exclusive:n,reverse:s};return a.BV.runKernel(i.iH,o,p)}})},5746:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({denseBincount_:function(e,t,n,o=!1){const p=(0,r._1)(e,"x","denseBincount"),l=(0,r._1)(t,"weights","denseBincount");s.hu("int32"===p.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${p.dtype}`)),s.hu(p.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${p.rank}.`)),s.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),s.hu(l.size===p.size||0===l.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${p.shape}, weights shape: ${l.shape}.`));const d={x:p,weights:l},u={size:n,binaryOutput:o};return a.BV.runKernel(i.QR,d,u)}})},9112:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({depthToSpace_:function(e,t,n="NHWC"){const o=(0,r._1)(e,"x","depthToSpace","float32"),p="NHWC"===n?o.shape[1]:o.shape[2],l="NHWC"===n?o.shape[2]:o.shape[3],d="NHWC"===n?o.shape[3]:o.shape[1];s.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),s.hu(p*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${p} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),s.hu(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),s.hu(d%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${d} for depthToSpace with input shape ${o.shape}`));const u={x:o},c={blockSize:t,dataFormat:n};return a.BV.runKernel(i.T0,u,c)}})},4718:(e,t,n)=>{"use strict";n.d(t,{B:()=>d});var a=n(7097),i=n(9121),r=n(3740),s=n(569),o=n(2582),p=n(2668),l=n(4968);const d=(0,p.op)({depthwiseConv2d_:function(e,t,n,p,d="NHWC",u=[1,1],c){const h=(0,r._1)(e,"x","depthwiseConv2d","float32"),m=(0,r._1)(t,"filter","depthwiseConv2d","float32");let f=h,g=!1;3===h.rank&&(g=!0,f=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),s.hu(4===f.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),s.hu(4===m.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`)),s.hu(f.shape[3]===m.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`)),o.m("depthwiseConv2d",p,c);const v={x:f,filter:m},y={strides:n,pad:p,dataFormat:d,dilations:u,dimRoundingMode:c},x=a.BV.runKernel(i.ci,v,y);return g?(0,l.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},557:(e,t,n)=>{"use strict";n.d(t,{W:()=>l});var a=n(7097),i=n(9121),r=n(3740),s=n(569),o=n(2668),p=n(4968);const l=(0,o.op)({dilation2d_:function(e,t,n,o,l=[1,1],d="NHWC"){const u=(0,r._1)(e,"x","dilation2d"),c=(0,r._1)(t,"filter","dilation2d");s.hu(3===u.rank||4===u.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${u.rank}.`)),s.hu(3===c.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${c.rank}.`)),s.hu("NHWC"===d,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${d}`));let h=u,m=!1;3===u.rank&&(h=(0,p.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]),m=!0);const f={x:h,filter:c},g={strides:n,pad:o,dilations:l},v=a.BV.runKernel(i.p4,f,g);return m?(0,p.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},1274:(e,t,n)=>{"use strict";n.d(t,{h:()=>p});var a=n(7097),i=n(9121),r=n(747),s=n(3740),o=n(9165);const p=(0,n(2668).op)({div_:function(e,t){let n=(0,s._1)(e,"a","div"),p=(0,s._1)(t,"b","div");if([n,p]=(0,r.makeTypesMatch)(n,p),"int32"===n.dtype&&"int32"===p.dtype)return(0,o.q)(n,p);const l={a:n,b:p};return a.BV.runKernel(i.oH,l,{})}})},9322:(e,t,n)=>{"use strict";n.d(t,{N:()=>d});var a=n(747),i=n(3740),r=n(1274),s=n(6477),o=n(2668),p=n(5912),l=n(6577);const d=(0,o.op)({divNoNan_:function(e,t){let n=(0,i._1)(e,"a","div"),o=(0,i._1)(t,"b","div");[n,o]=(0,a.makeTypesMatch)(n,o);const d=(0,r.h)(n,o),u=(0,l.P)(d),c=(0,s.D)(o,u);return(0,p.a)(c,u,d)}})},4653:(e,t,n)=>{"use strict";n.d(t,{W:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,r._1)(e,`tensors${t}`,"einsum"))),s={equation:e};return a.BV.runKernel(i.$g,n,s)}})},3233:(e,t,n)=>{"use strict";n.d(t,{p:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({elu_:function(e){const t={x:(0,r._1)(e,"x","elu","float32")};return a.BV.runKernel(i.SX,t)}})},6477:(e,t,n)=>{"use strict";n.d(t,{D:()=>p});var a=n(7097),i=n(9121),r=n(747),s=n(3740),o=n(2200);const p=(0,n(2668).op)({equal_:function(e,t){let n=(0,s._1)(e,"a","equal","string_or_numeric"),p=(0,s._1)(t,"b","equal","string_or_numeric");[n,p]=(0,r.makeTypesMatch)(n,p),(0,o.assertAndGetBroadcastShape)(n.shape,p.shape);const l={a:n,b:p};return a.BV.runKernel(i.hd,l)}})},4650:(e,t,n)=>{"use strict";n.d(t,{q:()=>p});var a=n(7097),i=n(9121),r=n(3740),s=n(569),o=n(2271);const p=(0,n(2668).op)({erf_:function(e){let t=(0,r._1)(e,"x","erf");s.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,o.p)(t,"float32"));const n={x:t};return a.BV.runKernel(i.Om,n)}})},4842:(e,t,n)=>{"use strict";n.d(t,{Q:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({exp_:function(e){const t={x:(0,r._1)(e,"x","exp")};return a.BV.runKernel(i.NE,t)}})},1300:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({expandDims_:function(e,t=0){const n=(0,r._1)(e,"x","expandDims","string_or_numeric");s.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},p={dim:t};return a.BV.runKernel(i.YF,o,p)}})},3426:(e,t,n)=>{"use strict";n.d(t,{t:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({expm1_:function(e){const t={x:(0,r._1)(e,"x","expm1")};return a.BV.runKernel(i.Y0,t)}})},4006:(e,t,n)=>{"use strict";n.d(t,{h:()=>r});var a=n(7097),i=n(9121);function r(e,t,n){const r={shape:e,value:t,dtype:n};return a.BV.runKernel(i.de,{},r)}},6943:(e,t,n)=>{"use strict";n.d(t,{G:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({floor_:function(e){const t={x:(0,r._1)(e,"x","floor","float32")};return a.BV.runKernel(i.OR,t)}})},9165:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var a=n(7097),i=n(9121),r=n(747),s=n(3740);const o=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,s._1)(e,"a","floorDiv"),o=(0,s._1)(t,"b","floorDiv");[n,o]=(0,r.makeTypesMatch)(n,o);const p={a:n,b:o};return a.BV.runKernel(i.je,p)}})},2277:(e,t,n)=>{"use strict";n.r(t),n.d(t,{conv2d:()=>y,depthwiseConv2d:()=>_,matMul:()=>T});var a=n(7097),i=n(633),r=n(9121),s=n(747),o=n(3740),p=n(569),l=n(6407),d=n(2200),u=n(4794),c=n(2582),h=n(2668),m=n(4968);const f=(0,h.op)({conv2DBackpropFilter_:function(e,t,n,i,s,o="NHWC",l){let d=e;3===e.rank&&(d=(0,m.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=(0,m.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),p.hu(4===d.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${d.shape}.`)),p.hu(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),p.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const h="NHWC"===o?d.shape[3]:d.shape[1],f="NHWC"===o?u.shape[3]:u.shape[1];p.hu(h===n[2],(()=>`Error in conv2dDerFilter: depth of input ${h}) must match input depth in filter (${n[2]}.`)),p.hu(f===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${n[3]}).`)),c.m("conv2dDerFilter",s,l);const g={x:d,dy:u},v={strides:i,pad:s,dataFormat:o,dimRoundingMode:l,filterShape:n};return a.BV.runKernel(r.wU,g,v)}});var g=n(9832),v=n(9323);const y=(0,h.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:h,dataFormat:y="NHWC",dilations:x=[1,1],dimRoundingMode:b,bias:w,activation:_="linear",preluActivationWeights:S,leakyreluAlpha:T}){if(_=_||"linear",!1===(0,v.uy)(a.BV.state.gradientDepth,_)){let a=(0,u.T)(e,t,n,h,y,x,b);return null!=w&&(a=(0,l.I)(a,w)),(0,v.QH)(a,_,S,T)}const E=(0,o._1)(e,"x","conv2d","float32"),M=(0,o._1)(t,"filter","conv2d","float32");let N=E,C=!1;3===E.rank&&(C=!0,N=(0,m.X)(E,[1,E.shape[0],E.shape[1],E.shape[2]])),p.hu(4===N.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${N.rank}.`)),p.hu(4===M.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${M.rank}.`)),c.m("fused conv2d",h,b),p.hu(N.shape[3]===M.shape[2],(()=>`Error in conv2d: depth of input (${N.shape[3]}) must match input depth for filter ${M.shape[2]}.`)),p.hu(c.jT(n,x),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${x}'`)),p.hu("NHWC"===y,(()=>`Error in conv2d: got dataFormat of ${y} but only NHWC is currently supported.`));const A=c.Ix(N.shape,M.shape,n,x,h,b);let I,R;null!=w&&(I=(0,o._1)(w,"bias","fused conv2d"),[I]=(0,s.makeTypesMatch)(I,E),d.assertAndGetBroadcastShape(A.outShape,I.shape)),null!=S&&(R=(0,o._1)(S,"prelu weights","fused conv2d"));const k=(e,t)=>{const[a,i,r,s]=t,o=(0,v.Fr)(e,r,_);p.hu(c.I0(x),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${x}'`));const l=[(0,g._)(i.shape,o,a,n,h),f(i,o,a.shape,n,h)];if(null!=s){const e=(0,v.pf)(s,o);l.push(e)}return l},D={x:N,filter:M,bias:I,preluActivationWeights:R},P={strides:n,pad:h,dataFormat:y,dilations:x,dimRoundingMode:b,activation:_,leakyreluAlpha:T};if(null==w){const e=(0,i.cb)(((e,t,n)=>{let i=a.BV.runKernel(r._V,D,P);return n([t,e,i]),C&&(i=(0,m.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:k}}));return e(N,M)}{const e=(0,i.cb)(((e,t,n,i)=>{let s=a.BV.runKernel(r._V,D,P);return i([t,e,s,n]),C&&(s=(0,m.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:k}}));return e(N,M,I)}}});var x=n(4718);const b=(0,h.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,i,s,o=[1,1],p){let l=e;3===e.rank&&(l=(0,m.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,m.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:l,dy:d},c={strides:i,pad:s,dimRoundingMode:p,dilations:o,filterShape:n};return a.BV.runKernel(r.sL,u,c)}}),w=(0,h.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,i,s,o=[1,1],p){let l=t,d=!1;3===t.rank&&(d=!0,l=(0,m.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:l,filter:n},c={strides:i,pad:s,dimRoundingMode:p,dilations:o,inputShape:e},h=a.BV.runKernel(r.y7,u,c);return d?(0,m.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),_=(0,h.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:u,dataFormat:h="NHWC",dilations:f=[1,1],dimRoundingMode:g,bias:y,activation:_="linear",preluActivationWeights:S,leakyreluAlpha:T}){if(!1===(0,v.uy)(a.BV.state.gradientDepth,_)){let a=(0,x.B)(e,t,n,u,h,f,g);return null!=y&&(a=(0,l.I)(a,y)),(0,v.QH)(a,_,S,T)}const E=(0,o._1)(e,"x","depthwiseConv2d","float32"),M=(0,o._1)(t,"filter","depthwiseConv2d","float32");let N=E,C=!1;3===E.rank&&(C=!0,N=(0,m.X)(E,[1,E.shape[0],E.shape[1],E.shape[2]])),p.hu(4===N.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${N.rank}.`)),p.hu(4===M.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${M.rank}.`)),p.hu(N.shape[3]===M.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${N.shape[3]}) must match the inChannels dimension in filter ${M.shape[2]}.`)),null==f&&(f=[1,1]),p.hu(c.jT(n,f),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${f}'`)),c.m("fused depthwiseConv2d",u,g);const A=c.Ix(N.shape,M.shape,n,f,u,g,!0);let I,R;null!=y&&(I=(0,o._1)(y,"bias","fused conv2d"),[I]=(0,s.makeTypesMatch)(I,E),d.assertAndGetBroadcastShape(A.outShape,I.shape)),null!=S&&(R=(0,o._1)(S,"prelu weights","fused depthwiseConv2d"));const k=(e,t)=>{p.hu(c.I0(f),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${f}'`));const[a,i,r,s]=t,o=(0,v.Fr)(e,r,_),l=w(i.shape,o,a,n,u,f,g),d=b(i,o,a.shape,n,u,f,g);return null!=s?[l,d,(0,v.pf)(I,o)]:[l,d]},D={x:N,filter:M,bias:I,preluActivationWeights:R},P={strides:n,pad:u,dataFormat:h,dilations:f,dimRoundingMode:g,activation:_,leakyreluAlpha:T};if(null==y){const e=(0,i.cb)(((e,t,n)=>{let i=a.BV.runKernel(r.lu,D,P);return n([t,e,i]),C&&(i=(0,m.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:k}}));return e(N,M)}{const e=(0,i.cb)(((e,t,n,i)=>{let s=a.BV.runKernel(r.lu,D,P);return i([t,e,s,n]),C&&(s=(0,m.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:k}}));return e(N,M,I)}}});var S=n(8687);const T=(0,h.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:u=!1,bias:c,activation:h="linear",preluActivationWeights:f,leakyreluAlpha:g}){if(!1===(0,v.uy)(a.BV.state.gradientDepth,h)){let a=(0,S.O)(e,t,n,u);return null!=c&&(a=(0,l.I)(a,c)),(0,v.QH)(a,h,f,g)}let y=(0,o._1)(e,"a","fused matMul"),x=(0,o._1)(t,"b","fused matMul");[y,x]=(0,s.makeTypesMatch)(y,x);const b=n?y.shape[y.rank-2]:y.shape[y.rank-1],w=u?x.shape[x.rank-1]:x.shape[x.rank-2],_=n?y.shape[y.rank-1]:y.shape[y.rank-2],T=u?x.shape[x.rank-2]:x.shape[x.rank-1],E=y.shape.slice(0,-2),M=x.shape.slice(0,-2),N=p.NA(E),C=p.NA(M);p.hu(b===w,(()=>`Error in fused matMul: inner shapes (${b}) and (${w}) of Tensors with shapes ${y.shape} and ${x.shape} and transposeA=${n} and transposeB=${u} must match.`));const A=d.assertAndGetBroadcastShape(y.shape.slice(0,-2),x.shape.slice(0,-2)).concat([_,T]),I=n?(0,m.X)(y,[N,b,_]):(0,m.X)(y,[N,_,b]),R=u?(0,m.X)(x,[C,T,w]):(0,m.X)(x,[C,w,T]);let k,D;null!=c&&(k=(0,o._1)(c,"bias","fused matMul"),[k]=(0,s.makeTypesMatch)(k,y),d.assertAndGetBroadcastShape(A,k.shape)),null!=f&&(D=(0,o._1)(f,"prelu weights","fused matMul"));const P=(e,t)=>{const[a,i,r,s]=t,o=(0,v.Fr)((0,m.X)(e,r.shape),r,h);let p,l;return n||u?!n&&u?(p=(0,S.O)(o,i,!1,!1),l=(0,S.O)(o,a,!0,!1)):n&&!u?(p=(0,S.O)(i,o,!1,!0),l=(0,S.O)(a,o,!1,!1)):(p=(0,S.O)(i,o,!0,!0),l=(0,S.O)(o,a,!0,!0)):(p=(0,S.O)(o,i,!1,!0),l=(0,S.O)(a,o,!0,!1)),null!=c?[p,l,(0,v.pf)(s,o)]:[p,l]},L={a:I,b:R,bias:k,preluActivationWeights:D},O={transposeA:n,transposeB:u,activation:h,leakyreluAlpha:g};if(null==c){const e=(0,i.cb)(((e,t,n)=>{const i=a.BV.runKernel(r.us,L,O);return n([e,t,i]),{value:(0,m.X)(i,A),gradFunc:P}}));return e(I,R)}{const e=(0,i.cb)(((e,t,n,i)=>{const s=a.BV.runKernel(r.us,L,O);return i([e,t,s,n]),{value:(0,m.X)(s,A),gradFunc:P}}));return e(I,R,k)}}})},9323:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>m,pf:()=>f,QH:()=>g,uy:()=>v});var a=n(2200),i=n(3233),r=n(9133),s=n(4841),o=n(8151),p=n(7409),l=n(3582),d=n(4968),u=n(625),c=n(1901),h=n(5475);function m(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,s.d)(e,(0,c.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function f(e,t){let n=t;const i=a.getReductionAxes(e.shape,t.shape);return i.length>0&&(n=(0,h.S)(n,i)),(0,d.X)(n,e.shape)}function g(e,t,n,a){if("linear"===t)return e;if("relu"===t)return(0,p.U)(e);if("elu"===t)return(0,i.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,o.A)(e,n);if("leakyrelu"===t)return(0,r.h)(e,a);if("sigmoid"===t)return(0,u.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const v=(e,t)=>!(e>0)||"linear"===t},4926:(e,t,n)=>{"use strict";n.d(t,{I:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({gather_:function(e,t,n=0,s=0){const o={x:(0,r._1)(e,"x","gather"),indices:(0,r._1)(t,"indices","gather","int32")},p={axis:n,batchDims:s};return a.BV.runKernel(i.qi,o,p)}})},7494:(e,t,n)=>{"use strict";n.d(t,{d:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({gatherND_:function(e,t){const n=(0,r._1)(t,"indices","gatherND","int32"),s={params:(0,r._1)(e,"x","gatherND","string_or_numeric"),indices:n};return a.BV.runKernel(i.q1,s)}})},636:(e,t,n)=>{"use strict";n.d(t,{p:()=>p});var a=n(7097),i=n(9121),r=n(747),s=n(3740),o=n(2200);const p=(0,n(2668).op)({greater_:function(e,t){let n=(0,s._1)(e,"a","greater","string_or_numeric"),p=(0,s._1)(t,"b","greater","string_or_numeric");[n,p]=(0,r.makeTypesMatch)(n,p),(0,o.assertAndGetBroadcastShape)(n.shape,p.shape);const l={a:n,b:p};return a.BV.runKernel(i.iZ,l)}})},7630:(e,t,n)=>{"use strict";n.d(t,{b:()=>p});var a=n(7097),i=n(9121),r=n(747),s=n(3740),o=n(2200);const p=(0,n(2668).op)({greaterEqual_:function(e,t){let n=(0,s._1)(e,"a","greaterEqual","string_or_numeric"),p=(0,s._1)(t,"b","greaterEqual","string_or_numeric");[n,p]=(0,r.makeTypesMatch)(n,p),(0,o.assertAndGetBroadcastShape)(n.shape,p.shape);const l={a:n,b:p};return a.BV.runKernel(i.Ac,l)}})},4386:(e,t,n)=>{"use strict";n.d(t,{a:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({imag_:function(e){const t={input:(0,r._1)(e,"input","imag")};return a.BV.runKernel(i.J_,t)}})},6230:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({isNaN_:function(e){const t={x:(0,r._1)(e,"x","isNaN")};return a.BV.runKernel(i.r7,t)}})},9133:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n={x:(0,r._1)(e,"x","leakyRelu")},s={alpha:t};return a.BV.runKernel(i.J$,n,s)}})},6573:(e,t,n)=>{"use strict";n.d(t,{d:()=>p});var a=n(7097),i=n(9121),r=n(747),s=n(3740),o=n(2200);const p=(0,n(2668).op)({less_:function(e,t){let n=(0,s._1)(e,"a","less","string_or_numeric"),p=(0,s._1)(t,"b","less","string_or_numeric");[n,p]=(0,r.makeTypesMatch)(n,p),(0,o.assertAndGetBroadcastShape)(n.shape,p.shape);const l={a:n,b:p};return a.BV.runKernel(i.vt,l)}})},624:(e,t,n)=>{"use strict";n.d(t,{z:()=>p});var a=n(7097),i=n(9121),r=n(747),s=n(3740),o=n(2200);const p=(0,n(2668).op)({lessEqual_:function(e,t){let n=(0,s._1)(e,"a","lessEqual","string_or_numeric"),p=(0,s._1)(t,"b","lessEqual","string_or_numeric");[n,p]=(0,r.makeTypesMatch)(n,p),(0,o.assertAndGetBroadcastShape)(n.shape,p.shape);const l={a:n,b:p};return a.BV.runKernel(i.CA,l)}})},4135:(e,t,n)=>{"use strict";n.d(t,{S:()=>r});var a=n(7097),i=n(9121);function r(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return a.BV.runKernel(i.e7,{},r)}},9648:(e,t,n)=>{"use strict";n.d(t,{G:()=>l});var a=n(7097),i=n(9121),r=n(3740),s=n(569),o=n(2668),p=n(4968);const l=(0,o.op)({localResponseNormalization_:function(e,t=5,n=1,o=1,l=.5){const d=(0,r._1)(e,"x","localResponseNormalization");s.hu(4===d.rank||3===d.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${d.rank}.`)),s.hu(s.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let u=d,c=!1;3===d.rank&&(c=!0,u=(0,p.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]));const h={x:u},m={depthRadius:t,bias:n,alpha:o,beta:l},f=a.BV.runKernel(i.eZ,h,m);return c?(0,p.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},2597:(e,t,n)=>{"use strict";n.d(t,{c:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({log_:function(e){const t={x:(0,r._1)(e,"x","log","float32")};return a.BV.runKernel(i.Zb,t)}})},7474:(e,t,n)=>{"use strict";n.d(t,{K:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({log1p_:function(e){const t={x:(0,r._1)(e,"x","log1p")};return a.BV.runKernel(i.kU,t)}})},1510:(e,t,n)=>{"use strict";n.d(t,{C:()=>h});var a=n(633),i=n(3740),r=n(2271),s=n(4842),o=n(2597),p=n(3307),l=n(4841),d=n(2668),u=n(827),c=n(5475);const h=(0,d.op)({logSoftmax_:function(e,t=-1){const n=(0,i._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const d=(0,a.cb)(((e,n)=>{const a=(0,p.F)(e,t,!0),i=(0,u.l)(e,a),d=(0,u.l)((0,r.p)(i,"float32"),(0,o.c)((0,c.S)((0,s.Q)(i),t,!0)));return n([d]),{value:d,gradFunc:(e,n)=>{const[a]=n,i=(0,s.Q)(a);return(0,u.l)(e,(0,l.d)((0,c.S)(e,t,!0),i))}}}));return d(n)}})},2856:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(2200);const o=(0,n(2668).op)({logicalAnd_:function(e,t){const n=(0,r._1)(e,"a","logicalAnd","bool"),o=(0,r._1)(t,"b","logicalAnd","bool");(0,s.assertAndGetBroadcastShape)(n.shape,o.shape);const p={a:n,b:o};return a.BV.runKernel(i.PY,p)}})},8651:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({logicalNot_:function(e){const t={x:(0,r._1)(e,"x","logicalNot","bool")};return a.BV.runKernel(i.Vf,t)}})},5750:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(2200);const o=(0,n(2668).op)({logicalOr_:function(e,t){const n=(0,r._1)(e,"a","logicalOr","bool"),o=(0,r._1)(t,"b","logicalOr","bool");(0,s.assertAndGetBroadcastShape)(n.shape,o.shape);const p={a:n,b:o};return a.BV.runKernel(i.MZ,p)}})},9876:(e,t,n)=>{"use strict";var a;n.d(t,{I:()=>a}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(a||(a={}))},8687:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var a=n(7097),i=n(9121),r=n(747),s=n(3740);const o=(0,n(2668).op)({matMul_:function(e,t,n=!1,o=!1){let p=(0,s._1)(e,"a","matMul"),l=(0,s._1)(t,"b","matMul");[p,l]=(0,r.makeTypesMatch)(p,l);const d={a:p,b:l},u={transposeA:n,transposeB:o};return a.BV.runKernel(i.XL,d,u)}})},3307:(e,t,n)=>{"use strict";n.d(t,{F:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({max_:function(e,t=null,n=!1){const s={x:(0,r._1)(e,"x","max")},o={reductionIndices:t,keepDims:n};return a.BV.runKernel(i.Yo,s,o)}})},1174:(e,t,n)=>{"use strict";n.d(t,{_:()=>d});var a=n(7097),i=n(9121),r=n(3740),s=n(569),o=n(2582),p=n(2668),l=n(4968);const d=(0,p.op)({maxPool_:function(e,t,n,p,d){const u=(0,r._1)(e,"x","maxPool");let c=u,h=!1;3===u.rank&&(h=!0,c=(0,l.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]])),s.hu(4===c.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${c.rank}.`)),s.hu(o.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),o.m("maxPool",p,d);const m={x:c},f={filterSize:t,strides:n,pad:p,dimRoundingMode:d},g=a.BV.runKernel(i.mT,m,f);return h?(0,l.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},5020:(e,t,n)=>{"use strict";n.d(t,{Y:()=>d});var a=n(7097),i=n(9121),r=n(3740),s=n(569),o=n(2582),p=n(2668),l=n(4968);const d=(0,p.op)({maxPool3d_:function(e,t=[1,1,1],n,p,d,u="NDHWC"){const c=(0,r._1)(e,"x","maxPool3d");let h=c,m=!1;4===c.rank&&(m=!0,h=(0,l.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),s.hu(5===h.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${h.rank}.`)),s.hu("NDHWC"===u,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${u}`)),(0,o.m)("maxPool3d",p,d);const f={x:h},g={filterSize:t,strides:n,pad:p,dimRoundingMode:d,dataFormat:u},v=a.BV.runKernel(i.OA,f,g);return m?(0,l.X)(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}})},6877:(e,t,n)=>{"use strict";n.d(t,{I:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({maxPoolWithArgmax_:function(e,t,n,s,o=!1){const p={x:(0,r._1)(e,"x","maxPoolWithArgmax")},l={filterSize:t,strides:n,pad:s,includeBatchInIndex:o},d=a.BV.runKernel(i.vF,p,l);return{result:d[0],indexes:d[1]}}})},632:(e,t,n)=>{"use strict";n.d(t,{g:()=>l});var a=n(7097),i=n(9121),r=n(747),s=n(3740),o=n(2200),p=n(2271);const l=(0,n(2668).op)({maximum_:function(e,t){let n=(0,s._1)(e,"a","maximum"),l=(0,s._1)(t,"b","maximum");[n,l]=(0,r.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,p.p)(n,"int32"),l=(0,p.p)(l,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const d={a:n,b:l};return a.BV.runKernel(i.BM,d)}})},5130:(e,t,n)=>{"use strict";n.d(t,{J:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({mean_:function(e,t=null,n=!1){const s={x:(0,r._1)(e,"x","mean")},o={axis:t,keepDims:n};return a.BV.runKernel(i.q2,s,o)}})},5735:(e,t,n)=>{"use strict";n.d(t,{V:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({min_:function(e,t=null,n=!1){const s={x:(0,r._1)(e,"x","min")},o={axis:t,keepDims:n};return a.BV.runKernel(i.c1,s,o)}})},4513:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var a=n(7097),i=n(9121),r=n(747),s=n(3740),o=n(2200),p=n(2271);const l=(0,n(2668).op)({minimum_:function(e,t){let n=(0,s._1)(e,"a","minimum"),l=(0,s._1)(t,"b","minimum");[n,l]=(0,r.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,p.p)(n,"int32"),l=(0,p.p)(l,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const d={a:n,b:l};return a.BV.runKernel(i.q8,d)}})},1483:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({mirrorPad_:function(e,t,n){s.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=(0,r._1)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");s.hu(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const p="reflect"===n?1:0;for(let e=0;e<o.rank;e++)s.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),s.hu(t[e][0]>=0&&t[e][0]<=o.shape[e]-p&&t[e][1]>=0&&t[e][1]<=o.shape[e]-p,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${o.shape[e]-p} or less than 0 for input of shape ${o.shape}`));const l={paddings:t,mode:n},d={x:o};return a.BV.runKernel(i.jQ,d,l)}})},5228:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var a=n(7097),i=n(9121),r=n(747),s=n(3740);const o=(0,n(2668).op)({mod_:function(e,t){let n=(0,s._1)(e,"a","mod"),o=(0,s._1)(t,"b","mod");[n,o]=(0,r.makeTypesMatch)(n,o);const p={a:n,b:o};return a.BV.runKernel(i.Vb,p)}})},4841:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var a=n(7097),i=n(9121),r=n(747),s=n(3740);const o=(0,n(2668).op)({mul_:function(e,t){let n=(0,s._1)(e,"a","mul"),o=(0,s._1)(t,"b","mul");[n,o]=(0,r.makeTypesMatch)(n,o);const p={a:n,b:o};return a.BV.runKernel(i.wY,p)}})},686:(e,t,n)=>{"use strict";n.d(t,{S:()=>p});var a=n(7097),i=n(9121),r=n(3740),s=n(2668),o=n(4968);const p=(0,s.op)({multinomial_:function(e,t,n,s=!1){const p=(0,r._1)(e,"logits","multinomial"),l=p.size,d=p.rank;if(l<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${l}.`);if(d>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${d}`);n=n||Math.random();const u={logits:1===d?(0,o.X)(p,[1,-1]):p},c={numSamples:t,seed:n,normalized:s},h=a.BV.runKernel(i.NZ,u,c);return 1===d?(0,o.X)(h,[h.size]):h}})},7370:(e,t,n)=>{"use strict";n.d(t,{W:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({neg_:function(e){const t={x:(0,r._1)(e,"x","neg")};return a.BV.runKernel(i.ku,t)}})},6500:(e,t,n)=>{"use strict";n.d(t,{Q:()=>p});var a=n(7097),i=n(9121),r=n(747),s=n(3740),o=n(2200);const p=(0,n(2668).op)({notEqual_:function(e,t){let n=(0,s._1)(e,"a","notEqual","string_or_numeric"),p=(0,s._1)(t,"b","notEqual","string_or_numeric");[n,p]=(0,r.makeTypesMatch)(n,p),(0,o.assertAndGetBroadcastShape)(n.shape,p.shape);const l={a:n,b:p};return a.BV.runKernel(i.yQ,l)}})},6708:(e,t,n)=>{"use strict";n.d(t,{l:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({oneHot_:function(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:(0,r._1)(e,"indices","oneHot","int32")},p={depth:t,onValue:n,offValue:s};return a.BV.runKernel(i.we,o,p)}})},4917:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var a=n(7097),i=n(569),r=n(1661),s=n(9640);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=(0,s.l)(e,"float32");return(0,r.P)(t,n)}const n=(0,i.p8)((0,i.NA)(e),t);return a.BV.makeTensor(n,e,t)}},7846:(e,t,n)=>{"use strict";n.d(t,{J:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({onesLike_:function(e){const t={x:(0,r._1)(e,"x","onesLike")};return a.BV.runKernel(i.qW,t)}})},2668:(e,t,n)=>{"use strict";n.d(t,{z:()=>r,op:()=>s});var a=n(7097),i=n(569);const r="__op";function s(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=r;const o=(...e)=>{a.BV.startScope(n);try{const t=s(...e);return(0,i.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),a.BV.endScope(t),t}catch(e){throw a.BV.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},4885:(e,t,n)=>{"use strict";n.d(t,{zvA:()=>S.z,WnP:()=>a.W,Khb:()=>i.K,__u:()=>r._,IHx:()=>s.I,QBD:()=>o.Q,$6P:()=>p.$,YjB:()=>l.Y,NqF:()=>d.N,vHJ:()=>u.v,ZRM:()=>c.Z,VfV:()=>h.V,z4N:()=>m.z,fvJ:()=>f.f,C80:()=>g.C,wS1:()=>v.w,uR5:()=>y.u,zEQ:()=>N,tgs:()=>A.t,Dxk:()=>R,JY5:()=>k,p3b:()=>D,E4h:()=>C.E,yE8:()=>P.y,anm:()=>Fn,XsQ:()=>L.X,UFq:()=>O.U,f3b:()=>B.f,pju:()=>F.p,mDi:()=>$.m,iUl:()=>V.i,d9v:()=>z.d,PYB:()=>U.P,zoF:()=>b.z,gME:()=>G,Izb:()=>W,MNy:()=>H,ZaL:()=>q,PAt:()=>j.P,Tek:()=>X.T,bc:()=>K.b,pdZ:()=>Y.p,$QV:()=>te,mCk:()=>ne.m,f9Y:()=>ae.f,mew:()=>Kn,zbp:()=>ie.z,ppE:()=>re.p,nTT:()=>se.n,B10:()=>oe.B,Ka3:()=>pe,WmZ:()=>le.W,hiC:()=>de.h,NTj:()=>ue.N,AKD:()=>ce,rvX:()=>jn,WYO:()=>he.W,pyx:()=>me.p,GRh:()=>Xn,DgJ:()=>fe.D,qNN:()=>ge.q,Qqt:()=>ve.Q,dt4:()=>ye.d,t$B:()=>xe.t,iyy:()=>we,kp_:()=>pn.k,hlL:()=>_e.h,GWj:()=>Se.G,qPi:()=>Te.q,imm:()=>Zn,Iqj:()=>Ee.I,dbB:()=>qn.d,pjt:()=>Me.p,brS:()=>Ne.b,Sxn:()=>ln.S,asL:()=>Ce.a,BHj:()=>$a,V3u:()=>Yn,wx0:()=>dn.w,xVT:()=>Ae,UWc:()=>Ie,i2d:()=>Re.i,hi7:()=>ke.h,d9m:()=>De.d,zN1:()=>Pe.z,$r2:()=>Va,SX3:()=>Le.S,G9k:()=>Oe.G,cM7:()=>Be.c,Krr:()=>Fe.K,e_t:()=>Ue,CmS:()=>Ge.C,l_t:()=>Xe,HvI:()=>Ke.H,hJK:()=>Ye.h,K5V:()=>Ze.K,egP:()=>Je,MB5:()=>za,OI3:()=>w.O,Fp7:()=>He.F,_sB:()=>et._,YQQ:()=>tt.Y,Ip$:()=>nt.I,gWQ:()=>at.g,J69:()=>it.J,ry_:()=>ot,VV$:()=>pt.V,LTh:()=>lt.L,VdP:()=>dt.V,wQq:()=>ut.w,Gi7:()=>ht,p_:()=>Gn,dC7:()=>_.d,rq4:()=>mt,SJ_:()=>ft.S,W76:()=>Ve.W,KOy:()=>zn,Quu:()=>gt.Q,lfX:()=>vt.l,iUs:()=>rt.i,JpU:()=>yt.J,op:()=>S.op,N2O:()=>xt,vku:()=>bt.v,pNR:()=>wt,koy:()=>_t,t1L:()=>St,lGY:()=>Tt,d_R:()=>Nt,sQ3:()=>Ct.s,AL3:()=>At.A,S0v:()=>It.S,WVs:()=>Rt.W,TN_:()=>kt,wzB:()=>Pt,nGf:()=>Lt,LGj:()=>Ot.L,w6H:()=>Bt.w,kwC:()=>Ft.k,M25:()=>$t.M,UYe:()=>Vt.U,btT:()=>zt.b,XLQ:()=>J.X,GYS:()=>Ut.G,SDf:()=>Gt,diP:()=>Wt,sx7:()=>Ht,mG2:()=>qt,QEs:()=>un.Q,NMM:()=>jt.N,bp0:()=>Xt.b,iD$:()=>Kt.i,snQ:()=>Wn.s,U8D:()=>Yt.U,U_I:()=>Zt,ODp:()=>Qt.O,XD2:()=>T.X,Xxe:()=>Jt.X,tdS:()=>Fa,O$l:()=>en.O,R_K:()=>tn.R,tPi:()=>E.t,jZU:()=>nn,SmN:()=>an,CnO:()=>rn,p0P:()=>sn,XAC:()=>on.X,Wvh:()=>ze.W,fBT:()=>Mt.f,rVs:()=>Ua,ers:()=>Hn.e,uN7:()=>Ba,Vl2:()=>cn.V,_b3:()=>hn._,h62:()=>ct.h,$i:()=>mn.$,L9e:()=>fn.L,knu:()=>gn.k,Nbs:()=>vn.N,NXj:()=>yn.N,Z_8:()=>Ga,luU:()=>qe.l,Smz:()=>je.S,ORZ:()=>xn.O,AEp:()=>M.A,XeE:()=>bn.X,RRF:()=>wn.R,odF:()=>Sn,wOQ:()=>Tn.w,yXz:()=>En,Bfx:()=>Mn,xZs:()=>Nn,Gg6:()=>be.G,hg7:()=>Cn.h,p4s:()=>$n.p,Xu6:()=>An.X,Two:()=>In.T,pUJ:()=>Rn,HHK:()=>kn.H,VD$:()=>Dn,arb:()=>Pn.a,itS:()=>Ln.i,lls:()=>On.l,P84:()=>Bn.P});var a=n(6235),i=n(7839),r=n(1470),s=n(6407),o=n(3135),p=n(781),l=n(2998),d=n(47),u=n(7394),c=n(2421),h=n(1891),m=n(7037),f=n(9812),g=n(369),v=n(5176),y=n(1749),x=n(3740),b=n(6884),w=n(8687),_=n(4841),S=n(2668),T=n(625),E=n(2676),M=n(1869);const N=(0,S.op)({basicLSTMCell_:function(e,t,n,a,i,r){const o=(0,x._1)(e,"forgetBias","basicLSTMCell"),p=(0,x._1)(t,"lstmKernel","basicLSTMCell"),l=(0,x._1)(n,"lstmBias","basicLSTMCell"),d=(0,x._1)(a,"data","basicLSTMCell"),u=(0,x._1)(i,"c","basicLSTMCell"),c=(0,x._1)(r,"h","basicLSTMCell"),h=(0,b.z)([d,c],1),m=(0,w.O)(h,p),f=(0,s.I)(m,l),g=f.shape[0],v=f.shape[1]/4,y=[g,v],S=(0,E.t)(f,[0,0],y),N=(0,E.t)(f,[0,v],y),C=(0,E.t)(f,[0,2*v],y),A=(0,E.t)(f,[0,3*v],y),I=(0,s.I)((0,_.d)((0,T.X)(S),(0,M.A)(N)),(0,_.d)(u,(0,T.X)((0,s.I)(o,C))));return[I,(0,_.d)((0,M.A)(I),(0,T.X)(A))]}});var C=n(8441),A=n(7505),I=n(569);const R=(0,S.op)({batchNorm2d_:function(e,t,n,a,i,r){const s=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),p=(0,x._1)(n,"variance","batchNorm");let l,d;return null!=i&&(l=(0,x._1)(i,"scale","batchNorm")),null!=a&&(d=(0,x._1)(a,"offset","batchNorm")),I.hu(2===s.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${s.rank}.`)),I.hu(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),I.hu(2===p.rank||1===p.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${p.rank}.`)),null!=l&&I.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=d&&I.hu(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`)),(0,A.t)(s,o,p,d,l,r)}}),k=(0,S.op)({batchNorm3d_:function(e,t,n,a,i,r){const s=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),p=(0,x._1)(n,"variance","batchNorm");let l,d;return null!=i&&(l=(0,x._1)(i,"scale","batchNorm")),null!=a&&(d=(0,x._1)(a,"offset","batchNorm")),I.hu(3===s.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${s.rank}.`)),I.hu(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),I.hu(3===p.rank||1===p.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${p.rank}.`)),null!=l&&I.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=d&&I.hu(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`)),(0,A.t)(s,o,p,d,l,r)}}),D=(0,S.op)({batchNorm4d_:function(e,t,n,a,i,r){const s=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),p=(0,x._1)(n,"variance","batchNorm");let l,d;return null!=i&&(l=(0,x._1)(i,"scale","batchNorm")),null!=a&&(d=(0,x._1)(a,"offset","batchNorm")),I.hu(4===s.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${s.rank}.`)),I.hu(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),I.hu(4===p.rank||1===p.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${p.rank}.`)),null!=l&&I.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=d&&I.hu(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`)),(0,A.t)(s,o,p,d,l,r)}});var P=n(3865),L=n(8194),O=n(8247),B=n(2657),F=n(2271),$=n(6825),V=n(2279),z=n(8723),U=n(1661);const G=(0,S.op)({concat1d_:function(e){return(0,b.z)(e,0)}}),W=(0,S.op)({concat2d_:function(e,t){return(0,b.z)(e,t)}}),H=(0,S.op)({concat3d_:function(e,t){return(0,b.z)(e,t)}}),q=(0,S.op)({concat4d_:function(e,t){return(0,b.z)(e,t)}});var j=n(1355),X=n(4794),K=n(1405),Y=n(473),Z=n(7097),Q=n(9121),J=n(4968);const ee=(0,S.op)({conv3DBackpropInput_:function(e,t,n,a,i){I.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let r=e,s=t,o=!1;4===t.rank&&(o=!0,s=(0,J.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),r=[1,e[0],e[1],e[2],e[3]]);const p=r[4],l=s.shape[4];I.hu(5===r.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`)),I.hu(5===s.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`)),I.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),I.hu(p===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[3]}.`)),I.hu(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const d={dy:s,filter:n},u={pad:i,strides:a,inputShape:r},c=Z.BV.runKernel(Q.ik,d,u);return o?(0,J.X)(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),te=(0,S.op)({conv3dTranspose_:function(e,t,n,a,i){const r=(0,x._1)(e,"x","conv3dTranspose"),s=(0,x._1)(t,"filter","conv3dTranspose");return ee(n,r,s,a,i)}});var ne=n(173),ae=n(2699),ie=n(7405),re=n(5746),se=n(9112),oe=n(4718);const pe=(0,S.op)({diag_:function(e){const t={x:(0,x._1)(e,"x","diag")};return Z.BV.runKernel(Q.$w,t)}});var le=n(557),de=n(1274),ue=n(9322);const ce=(0,S.op)({dot_:function(e,t){const n=(0,x._1)(e,"t1","dot"),a=(0,x._1)(t,"t2","dot");I.hu(!(1!==n.rank&&2!==n.rank||1!==a.rank&&2!==a.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`));const i=1===n.rank?n.size:n.shape[1],r=1===a.rank?a.size:a.shape[0];if(I.hu(i===r,(()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${r}.`)),1===n.rank&&1===a.rank){const e=(0,J.X)(n,[1,-1]),t=(0,J.X)(a,[-1,1]),i=(0,w.O)(e,t);return(0,J.X)(i,[])}if(1===n.rank&&2===a.rank){const e=(0,J.X)(n,[1,-1]),t=(0,J.X)(a,[a.shape[0],a.shape[1]]),i=(0,w.O)(e,t);return(0,J.X)(i,[i.size])}if(2===n.rank&&1===a.rank){const e=(0,J.X)(a,[-1,1]),t=(0,w.O)(n,e);return(0,J.X)(t,[t.size])}{const e=(0,J.X)(a,[a.shape[0],a.shape[1]]);return(0,w.O)(n,e)}}});var he=n(4653),me=n(3233),fe=n(6477),ge=n(4650),ve=n(4842),ye=n(1300),xe=n(3426),be=n(7501);const we=(0,S.op)({eye_:function(e,t,n,a="float32"){null==t&&(t=e);const i=(0,B.f)([e,t],a),r=e<=t?e:t;for(let e=0;e<r;++e)i.set(1,e,e);const s=(0,J.X)(i.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return(0,be.G)((0,ye.d)(s,0),[n[0],1,1]);if(2===n.length)return(0,be.G)((0,ye.d)((0,ye.d)(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,be.G)((0,ye.d)((0,ye.d)((0,ye.d)(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var _e=n(4006),Se=n(6943),Te=n(9165),Ee=n(4926),Me=n(636),Ne=n(7630),Ce=n(4386);const Ae=(0,S.op)({isFinite_:function(e){const t={x:(0,x._1)(e,"x","isFinite")};return Z.BV.runKernel(Q.av,t)}}),Ie=(0,S.op)({isInf_:function(e){const t={x:(0,x._1)(e,"x","isInf")};return Z.BV.runKernel(Q.iW,t)}});var Re=n(6230),ke=n(9133),De=n(6573),Pe=n(624),Le=n(4135),Oe=n(9648),Be=n(2597),Fe=n(7474),$e=n(633),Ve=n(7370),ze=n(3694);const Ue=(0,S.op)({logSigmoid_:function(e){const t=(0,x._1)(e,"x","logSigmoid"),n=(0,$e.cb)((e=>({value:(0,Ve.W)((0,ze.W)((0,Ve.W)(e))),gradFunc:t=>(0,_.d)(t,(0,T.X)((0,Ve.W)(e)))})));return n(t)}});var Ge=n(1510),We=n(3591),He=n(3307),qe=n(827),je=n(5475);const Xe=(0,S.op)({logSumExp_:function(e,t=null,n=!1){const a=(0,x._1)(e,"x","logSumExp"),i=(0,I.EC)(t,a.shape),r=(0,He.F)(a,i,!0),o=(0,qe.l)(a,r),p=(0,ve.Q)(o),l=(0,je.S)(p,i),d=(0,Be.c)(l),u=(0,s.I)((0,J.X)(r,d.shape),d);if(n){const e=(0,We.rv)(u.shape,i);return(0,J.X)(u,e)}return u}});var Ke=n(2856),Ye=n(8651),Ze=n(5750),Qe=n(2200);const Je=(0,S.op)({logicalXor_:function(e,t){const n=(0,x._1)(e,"a","logicalXor","bool"),a=(0,x._1)(t,"b","logicalXor","bool");return(0,Qe.assertAndGetBroadcastShape)(n.shape,a.shape),(0,Ke.H)((0,Ze.K)(e,t),(0,Ye.h)((0,Ke.H)(e,t)))}});var et=n(1174),tt=n(5020),nt=n(6877),at=n(632),it=n(5130),rt=n(4917),st=n(4077);function ot(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let a=(0,x._1)(e,"x","meshgrid",e instanceof st.es?e.dtype:"float32");if(void 0===t)return[a];let i=(0,x._1)(t,"y","meshgrid",t instanceof st.es?t.dtype:"float32");const r=(0,I.NA)(a.shape),s=(0,I.NA)(i.shape);return"xy"===n?(a=(0,J.X)(a,[1,-1]),i=(0,J.X)(i,[-1,1]),[(0,w.O)((0,rt.i)([s,1],a.dtype),a),(0,w.O)(i,(0,rt.i)([1,r],i.dtype))]):(a=(0,J.X)(a,[-1,1]),i=(0,J.X)(i,[1,-1]),[(0,w.O)(a,(0,rt.i)([1,s],a.dtype)),(0,w.O)((0,rt.i)([r,1],i.dtype),i)])}var pt=n(5735),lt=n(4513),dt=n(1483),ut=n(5228),ct=n(248);const ht=(0,S.op)({moments_:function(e,t=null,n=!1){e=(0,x._1)(e,"x","moments");const a=(0,I.EC)(t,e.shape),i=(0,it.J)(e,a,n);let r=i.shape;n||(r=(0,We.rv)(i.shape,a));const s=(0,ct.h)((0,qe.l)((0,F.p)(e,"float32"),(0,J.X)(i,r)));return{mean:i,variance:(0,it.J)(s,a,n)}}}),mt=(0,S.op)({multiRNNCell_:function(e,t,n,a){const i=(0,x._1)(t,"data","multiRNNCell"),r=(0,x.sI)(n,"c","multiRNNCell"),s=(0,x.sI)(a,"h","multiRNNCell");let o=i;const p=[];for(let t=0;t<e.length;t++){const n=e[t](o,r[t],s[t]);p.push(n[0]),p.push(n[1]),o=n[1]}const l=[],d=[];for(let e=0;e<p.length;e+=2)l.push(p[e]),d.push(p[e+1]);return[l,d]}});var ft=n(686),gt=n(6500),vt=n(6708),yt=n(7846);const xt=(0,S.op)({outerProduct_:function(e,t){const n=(0,x._1)(e,"v1","outerProduct"),a=(0,x._1)(t,"v2","outerProduct");I.hu(1===n.rank&&1===a.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${a.rank}.`));const i=(0,J.X)(n,[-1,1]),r=(0,J.X)(a,[1,-1]);return(0,w.O)(i,r)}});var bt=n(9682);const wt=(0,S.op)({pad1d_:function(e,t,n=0){return(0,I.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,bt.v)(e,[t],n)}}),_t=(0,S.op)({pad2d_:function(e,t,n=0){return(0,I.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,bt.v)(e,t,n)}}),St=(0,S.op)({pad3d_:function(e,t,n=0){return(0,I.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,bt.v)(e,t,n)}}),Tt=(0,S.op)({pad4d_:function(e,t,n=0){return(0,I.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,bt.v)(e,t,n)}});var Et=n(2582),Mt=n(7918);const Nt=(0,S.op)({pool_:function(e,t,n,a,i,r,s){null==i&&(i=[1,1]),null==r&&(r=1),0===a&&(a="valid");const o=(0,x._1)(e,"x","maxPool");let p=o,l=!1;3===o.rank&&(l=!0,p=(0,J.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),I.hu(Et.jT(r,i),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`));const d=Et.Xw(p.shape,t,r,i,a),u=[d.dilationHeight,d.dilationWidth];let c;c="same"===a?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),a=n.map((e=>Math.floor(e/2))),i=n.map(((e,t)=>e-a[t]));return n.map(((e,t)=>[a[t],i[t]]))}([d.filterHeight,d.filterWidth],u):[[0,0],[0,0]];const h=1===u[0]&&1===u[1],[m,f]=function(e,t,n){const a=n.map((e=>e[0])),i=n.map((e=>e[1])),r=e.concat(a,i),s=t.map(((e,t)=>(e-r[t]%e)%e)),o=i.map(((e,t)=>e+s[t]));return[t.map(((e,t)=>[a[t],o[t]])),t.map(((e,t)=>[0,s[t]]))]}([d.inHeight,d.inWidth],u,c),g=h?a:"valid",y=h?p:(0,Mt.f)(p,u,m),b=("avg"===n?()=>(0,v.w)(y,t,r,g,s):()=>(0,et._)(y,t,r,g,s))(),w=h?b:(0,C.E)(b,u,f);return l?(0,J.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});var Ct=n(3453),At=n(8151),It=n(9798),Rt=n(9451);const kt=(0,S.op)({rand_:function(e,t,n){const a=(0,I.NA)(e);let i=null;if(null==n||"float32"===n)i=new Float32Array(a);else if("int32"===n)i=new Int32Array(a);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);i=new Uint8Array(a)}for(let e=0;e<a;e++)i[e]=t();return Z.BV.makeTensor(i,e,n)}});var Dt=n(6845);const Pt=(0,S.op)({randomGamma_:function(e,t,n=1,a="float32",i){if(null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error(`Unsupported data type ${a}`);const r=new Dt.T9(t,n,a,i),s=(0,B.f)(e,a);for(let e=0;e<s.values.length;e++)s.values[e]=r.nextValue();return s.toTensor()}}),Lt=(0,S.op)({randomNormal_:function(e,t=0,n=1,a,i){if(null!=a&&"bool"===a)throw new Error(`Unsupported data type ${a}`);const r=new Dt.Yi(t,n,a,!1,i),s=(0,B.f)(e,a);for(let e=0;e<s.values.length;e++)s.values[e]=r.nextValue();return s.toTensor()}});var Ot=n(5002),Bt=n(7245),Ft=n(766),$t=n(9036),Vt=n(7409),zt=n(3582),Ut=n(7486);const Gt=(0,S.op)({reverse1d_:function(e){const t=(0,x._1)(e,"x","reverse");return I.hu(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,Ut.G)(t,0)}}),Wt=(0,S.op)({reverse2d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return I.hu(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,Ut.G)(n,t)}}),Ht=(0,S.op)({reverse3d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return I.hu(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,Ut.G)(n,t)}}),qt=(0,S.op)({reverse4d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return I.hu(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,Ut.G)(n,t)}});var jt=n(7809),Xt=n(2634),Kt=n(9494),Yt=n(5503);const Zt=(0,S.op)({separableConv2d_:function(e,t,n,a,i,r=[1,1],s="NHWC"){const o=(0,x._1)(e,"x","separableConv2d"),p=(0,x._1)(t,"depthwiseFilter","separableConv2d"),l=(0,x._1)(n,"pointwiseFilter","separableConv2d");let d=o,u=!1;if(3===o.rank&&(u=!0,d=(0,J.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");I.hu(4===d.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`)),I.hu(4===p.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`)),I.hu(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`)),I.hu(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),I.hu(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const c=p.shape[2],h=p.shape[3];I.hu(l.shape[2]===c*h,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*h}, but got ${l.shape[2]}.`));const m=(0,oe.B)(d,p,a,i,s,r),f=(0,X.T)(m,l,1,"valid",s);return u?(0,J.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Qt=n(6567),Jt=n(4434),en=n(9331),tn=n(3254);const nn=(0,S.op)({slice1d_:function(e,t,n){const a=(0,x._1)(e,"x","slice1d");return I.hu(1===a.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`)),(0,E.t)(a,[t],[n])}}),an=(0,S.op)({slice2d_:function(e,t,n){const a=(0,x._1)(e,"x","slice2d");return I.hu(2===a.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`)),(0,E.t)(a,t,n)}}),rn=(0,S.op)({slice3d_:function(e,t,n){const a=(0,x._1)(e,"x","slice3d");return I.hu(3===a.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`)),(0,E.t)(a,t,n)}}),sn=(0,S.op)({slice4d_:function(e,t,n){const a=(0,x._1)(e,"x","slice4d");return I.hu(4===a.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`)),(0,E.t)(a,t,n)}});var on=n(682),pn=n(7020),ln=n(8447),dn=n(4415),un=n(3710),cn=n(8644),hn=n(3261),mn=n(5265),fn=n(9590),gn=n(2991),vn=n(1901),yn=n(5158),xn=n(1173),bn=n(701),wn=n(6092),_n=n(7852);function Sn(e,t,n){if((0,I.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=(0,x.C)(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,_n.H)(e,t,a,n)}var Tn=n(9906);function En(e,t,n){if((0,I.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=(0,x.C)(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,_n.H)(e,t,a,n)}function Mn(e,t,n){if((0,I.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=(0,x.C)(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,_n.H)(e,t,a,n)}function Nn(e,t,n){if((0,I.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=(0,x.C)(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||a,(0,_n.H)(e,t,a,n)}var Cn=n(3243),An=n(3596),In=n(9608);const Rn=(0,S.op)({unsortedSegmentSum_:function(e,t,n){const a=(0,x._1)(e,"x","unsortedSegmentSum"),i=(0,x._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,I.hu)((0,I.GN)(n),(()=>"numSegments must be of dtype int"));const r={x:a,segmentIds:i},s={numSegments:n};return Z.BV.runKernel(Q.Qv,r,s)}});var kn=n(4136);function Dn(e,t=!0,n,a){return Z.BV.makeVariable(e,t,n,a)}var Pn=n(5912),Ln=n(6380),On=n(9640),Bn=n(6577);const Fn=async function(e,t,n){const a=(0,x._1)(e,"tensor","boolMask"),i=(0,x._1)(t,"mask","boolMask","bool"),r=null==n?0:n,s=i.rank,o=a.shape;I.hu(s>0,(()=>"mask cannot be scalar")),I.k5(o.slice(r,r+s),i.shape,"mask's shape must match the first K dimensions of tensor's shape,");let p=1;for(let e=r;e<r+s;e++)p*=o[e];const l=o.slice(0,r).concat([p],o.slice(r+s)),d=(0,J.X)(a,l),u=(0,J.X)(i,[-1]),c=await(0,Ln.i)(u),h=(0,fn.L)(c,[1]),m=(0,Ee.I)(d,h,r);return e!==a&&a.dispose(),t!==i&&i.dispose(),h.dispose(),d.dispose(),u.dispose(),c.dispose(),m};var $n=n(9065);function Vn(e,t,n=null){if(0===e.rank)return(0,a.W)(e);if(1!==e.rank&&null===n)return Vn((0,J.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,je.S)((0,a.W)(e),n);if(t===1/0)return(0,He.F)((0,a.W)(e),n);if(t===-1/0)return(0,pt.V)((0,a.W)(e),n);if("euclidean"===t||2===t)return(0,hn._)((0,je.S)((0,Ct.s)((0,a.W)(e),(0,Kt.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,He.F)((0,je.S)((0,a.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,He.F)((0,je.S)((0,a.W)(e),n[1]),n[0]);if(t===-1/0)return(0,pt.V)((0,je.S)((0,a.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,hn._)((0,je.S)((0,ct.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const zn=(0,S.op)({norm_:function(e,t="euclidean",n=null,a=!1){const i=Vn(e=(0,x._1)(e,"x","norm"),t,n);let r=i.shape;if(a){const t=(0,I.EC)(n,e.shape);r=We.rv(i.shape,t)}return(0,J.X)(i,r)}});var Un=n(747);const Gn=(0,S.op)({movingAverage_:function(e,t,n,a,i=!0){const r=(0,x._1)(e,"v","movingAverage"),o=(0,x._1)(t,"x","movingAverage"),p=(0,x._1)(n,"decay","movingAverage");(0,Un.assertTypesMatch)(r,o),I.hu(I.cO(r.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=(0,Kt.i)(1),d=(0,qe.l)(l,p);let u=(0,_.d)((0,qe.l)(o,r),d);if(i){I.hu(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=(0,x._1)(a,"step","movingAverage");u=(0,de.h)(u,(0,qe.l)(l,(0,Ct.s)(p,e)))}return(0,s.I)(r,u)}});var Wn=n(3100),Hn=n(9758),qn=n(7494);const jn=(0,S.op)({dropout_:function(e,t,n,a){const i=(0,x._1)(e,"x","dropout");if(I.hu("float32"===i.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`)),I.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof st.es?i.clone():i;const r=function(e,t){if(null==t)return e.shape.slice();if(I.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(i,n),o=1-t,p=(0,de.h)((0,Se.G)((0,s.I)((0,Ot.L)(r,0,1,"float32",a),o)),o);return(0,_.d)(i,p)}});function Xn(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Kn(e,t,n){const a=1-e%2,i=new Float32Array(e);for(let r=0;r<e;++r){const s=2*Math.PI*r/(e+a-1);i[r]=t-n*Math.cos(s)}return(0,wn.R)(i,"float32")}const Yn=async function(e,t,n=1){const a=(0,x._1)(e,"predictions","inTopK"),i=(0,x._1)(t,"targets","inTopK");(0,I.hu)(a.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${a.rank}`)),(0,I.hu)(a.rank-1===i.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${a.rank} and targets rank ${i.rank}`)),(0,I.k5)(a.shape.slice(0,a.shape.length-1),i.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const r=a.shape[a.shape.length-1];(0,I.hu)(n>0&&n<=r,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${r}), but got ${n}`));const s=await a.data(),o=await i.data(),[p,l]=[s.length/r,r],d=(0,I.WP)("bool",p);for(let e=0;e<p;e++){const t=e*l,a=s.subarray(t,t+l),i=[];for(let e=0;e<a.length;e++)i.push({value:a[e],index:e});i.sort(((e,t)=>t.value-e.value)),d[e]=0;for(let t=0;t<n;t++)if(i[t].index===o[e]){d[e]=1;break}}return e!==a&&a.dispose(),t!==i&&i.dispose(),(0,bn.X)(d,i.shape,"bool")};var Zn=n(2277);const Qn=(0,S.op)({hammingWindow_:function(e){return Kn(e,.54,.46)}}),Jn=(0,S.op)({hannWindow_:function(e){return Kn(e,.5,.5)}}),ea=(0,S.op)({frame_:function(e,t,n,a=!1,i=0){let r=0;const s=[];for(;r+t<=e.size;)s.push((0,E.t)(e,r,t)),r+=n;if(a)for(;r<e.size;){const a=r+t-e.size,o=(0,b.z)([(0,E.t)(e,r,t-a),(0,_e.h)([a],i)]);s.push(o),r+=n}return 0===s.length?Sn([],[0,t]):(0,J.X)((0,b.z)(s),[s.length,t])}}),ta=(0,S.op)({stft_:function(e,t,n,a,i=Jn){null==a&&(a=Xn(t));const r=ea(e,t,n),s=(0,_.d)(r,i(t));return(0,un.Q)(s,a)}}),na=(0,S.op)({cropAndResize_:function(e,t,n,a,i="bilinear",r=0){const s=(0,x._1)(e,"image","cropAndResize"),o=(0,x._1)(t,"boxes","cropAndResize","float32"),p=(0,x._1)(n,"boxInd","cropAndResize","int32"),l=o.shape[0];I.hu(4===s.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`)),I.hu(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),I.hu(1===p.rank&&p.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),I.hu(2===a.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`)),I.hu(a[0]>=1&&a[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${a}`)),I.hu("bilinear"===i||"nearest"===i,(()=>`method must be bilinear or nearest, but was ${i}`));const d={image:s,boxes:o,boxInd:p},u={method:i,extrapolationValue:r,cropSize:a};return Z.BV.runKernel(Q.Vc,d,u)}}),aa=(0,S.op)({flipLeftRight_:function(e){const t=(0,x._1)(e,"image","flipLeftRight","float32");I.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Z.BV.runKernel(Q.Uy,n,{})}}),ia=(0,S.op)({grayscaleToRGB_:function(e){const t=(0,x._1)(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];I.hu(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),I.hu(1===a,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${a}.`));const i=new Array(t.rank);return i.fill(1,0,n),i[n]=3,(0,be.G)(t,i)}}),ra=(0,S.op)({rotateWithOffset_:function(e,t,n=0,a=.5){const i=(0,x._1)(e,"image","rotateWithOffset","float32");I.hu(4===i.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`));const r={image:i},s={radians:t,fillValue:n,center:a};return Z.BV.runKernel(Q.b9,r,s)}});function sa(e,t,n,a,i,r){null==a&&(a=.5),null==i&&(i=Number.NEGATIVE_INFINITY),null==r&&(r=0);const s=e.shape[0];return n=Math.min(n,s),I.hu(0<=a&&a<=1,(()=>`iouThreshold must be in [0, 1], but was '${a}'`)),I.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),I.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),I.hu(1===t.rank,(()=>"scores must be a 1D tensor")),I.hu(t.shape[0]===s,(()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`)),I.hu(0<=r&&r<=1,(()=>`softNmsSigma must be in [0, 1], but was '${r}'`)),{maxOutputSize:n,iouThreshold:a,scoreThreshold:i,softNmsSigma:r}}const oa=(0,S.op)({nonMaxSuppression_:function(e,t,n,a=.5,i=Number.NEGATIVE_INFINITY){const r=(0,x._1)(e,"boxes","nonMaxSuppression","float32"),s=(0,x._1)(t,"scores","nonMaxSuppression","float32"),o=sa(r,s,n,a,i),p={maxOutputSize:n=o.maxOutputSize,iouThreshold:a=o.iouThreshold,scoreThreshold:i=o.scoreThreshold};return Z.BV.runKernel(Q.uv,{boxes:r,scores:s},p)}});var pa=n(3337);const la=(0,S.op)({nonMaxSuppressionWithScore_:function(e,t,n,a=.5,i=Number.NEGATIVE_INFINITY,r=0){const s=(0,x._1)(e,"boxes","nonMaxSuppression"),o=(0,x._1)(t,"scores","nonMaxSuppression"),p=sa(s,o,n,a,i,r),l={boxes:s,scores:o},d={maxOutputSize:n=p.maxOutputSize,iouThreshold:a=p.iouThreshold,scoreThreshold:i=p.scoreThreshold,softNmsSigma:r=p.softNmsSigma},u=Z.BV.runKernel(Q.W0,l,d);return{selectedIndices:u[0],selectedScores:u[1]}}}),da=(0,S.op)({nonMaxSuppressionPadded_:function(e,t,n,a=.5,i=Number.NEGATIVE_INFINITY,r=!1){const s=(0,x._1)(e,"boxes","nonMaxSuppression"),o=(0,x._1)(t,"scores","nonMaxSuppression"),p=sa(s,o,n,a,i,null),l={boxes:s,scores:o},d={maxOutputSize:p.maxOutputSize,iouThreshold:p.iouThreshold,scoreThreshold:p.scoreThreshold,padToMaxOutputSize:r},u=Z.BV.runKernel(Q.cy,l,d);return{selectedIndices:u[0],validOutputs:u[1]}}}),ua=(0,S.op)({resizeBilinear_:function(e,t,n=!1,a=!1){const i=(0,x._1)(e,"images","resizeBilinear");I.hu(3===i.rank||4===i.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`)),I.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),I.hu(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let r=i,s=!1;3===i.rank&&(s=!0,r=(0,J.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=t,o={images:r},p={alignCorners:n,halfPixelCenters:a,size:t},l=Z.BV.runKernel(Q._Y,o,p);return s?(0,J.X)(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),ca=(0,S.op)({resizeNearestNeighbor_:function(e,t,n=!1,a=!1){const i=(0,x._1)(e,"images","resizeNearestNeighbor");I.hu(3===i.rank||4===i.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`)),I.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),I.hu("float32"===i.dtype||"int32"===i.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),I.hu(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let r=i,s=!1;3===i.rank&&(s=!0,r=(0,J.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=t,o={images:r},p={alignCorners:n,halfPixelCenters:a,size:t},l=Z.BV.runKernel(Q.dp,o,p);return s?(0,J.X)(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),ha=(0,S.op)({threshold_:function(e,t="binary",n=!1,a=.5){const i=(0,x._1)(e,"image","threshold"),r=i.shape[0]*i.shape[1];let o,p,l,d,u=(0,_.d)((0,wn.R)([a]),255);if(I.hu(3===i.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`)),I.hu(3===i.shape[2]||1===i.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`)),I.hu("int32"===i.dtype||"float32"===i.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`)),I.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===i.shape[2]){[o,p,l]=(0,cn.V)(i,[1,1,1],-1);const e=(0,_.d)(o,.2989),t=(0,_.d)(p,.587),n=(0,_.d)(l,.114);d=(0,s.I)((0,s.I)(e,t),n)}else d=e;"otsu"===t&&(u=function(e,t){let n,a,i,r,o,p,l=(0,wn.R)([-1]),d=(0,wn.R)([0]),u=(0,wn.R)([0]);for(let c=0;c<e.size-1;c++){n=(0,E.t)(e,0,c+1),a=(0,E.t)(e,c+1),o=(0,de.h)((0,je.S)(n),t),p=(0,de.h)((0,je.S)(a),t);const h=(0,je.S)((0,_.d)(n,(0,Bt.w)(0,n.size)));i=(0,de.h)(h,(0,je.S)(n));const m=(0,_e.h)(a.shape,n.size),f=(0,s.I)((0,Bt.w)(0,a.size),m),g=(0,_.d)(a,f);r=(0,de.h)((0,je.S)(g),(0,je.S)(a));const v=(0,qe.l)(i,r),y=(0,qe.l)(i,r),x=(0,_.d)(o,p);u=(0,_.d)((0,_.d)(x,v),y);const b=(0,Me.p)(u,d);d=(0,Pn.a)(b,u,d),l=(0,Pn.a)(b,(0,wn.R)([c]),l)}return l}((0,P.y)((0,F.p)((0,jt.N)(d),"int32"),(0,bn.X)([]),256),r));const c=n?(0,Pe.z)(d,u):(0,Me.p)(d,u);return(0,F.p)((0,_.d)(c,255),"int32")}}),ma=(0,S.op)({transform_:function(e,t,n="nearest",a="constant",i=0,r){const s=(0,x._1)(e,"image","transform","float32"),o=(0,x._1)(t,"transforms","transform","float32");I.hu(4===s.rank,(()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`)),I.hu(2===o.rank&&(o.shape[0]===s.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),I.hu(null==r||2===r.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`));const p={image:s,transforms:o},l={interpolation:n,fillMode:a,fillValue:i,outputShape:r};return Z.BV.runKernel(Q.wx,p,l)}}),fa=(0,S.op)({bandPart_:function(e,t,n){(0,I.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,I.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const a=(0,x._1)(e,"a","bandPart");(0,I.hu)(a.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`));const i=a.shape,[r,s]=a.shape.slice(-2);if(!(t<=r))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${r}).`);if(!(n<=s))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${s}).`);t<0&&(t=r),n<0&&(n=s);const o=(0,J.X)((0,Bt.w)(0,r,1,"int32"),[-1,1]),p=(0,Bt.w)(0,s,1,"int32"),l=(0,qe.l)(o,p),d=(0,Ke.H)((0,Pe.z)(l,(0,Kt.i)(+t,"int32")),(0,Ne.b)(l,(0,Kt.i)(-n,"int32"))),u=(0,On.l)([r,s],a.dtype);return(0,J.X)((0,gn.k)((0,kn.H)((0,J.X)(a,[-1,r,s])).map((e=>(0,Pn.a)(d,e,u)))),i)}}),ga=(0,S.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,I.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,I.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,cn.V)(e,e.shape[0],0).map((e=>(0,fn.L)(e,[0])));(0,I.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],a=e;for(let t=0;t<e.length;++t)n.push(Z.BV.tidy((()=>{let e=a[t];if(t>0)for(let a=0;a<t;++a){const t=(0,_.d)((0,je.S)((0,_.d)(n[a],e)),n[a]);e=(0,qe.l)(e,t)}return(0,de.h)(e,zn(e,"euclidean"))})));return t?(0,gn.k)(n,0):n}});var va=n(4368);function ya(e,t=!1){return Z.BV.tidy((()=>{(0,I.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],a=e.shape[1];let i=we(n),r=(0,z.d)(e);const s=Sn([[1]],[1,1]);let o=(0,z.d)(s);const p=n>=a?a:n;for(let e=0;e<p;++e){const t=r,p=o,l=i;[o,r,i]=Z.BV.tidy((()=>{const t=(0,E.t)(r,[e,e],[n-e,1]),p=zn(t),l=(0,E.t)(r,[e,e],[1,1]),d=(0,Pn.a)((0,Me.p)(l,0),Sn([[-1]]),Sn([[1]])),u=(0,qe.l)(l,(0,_.d)(d,p)),c=(0,de.h)(t,u);o=1===c.shape[0]?(0,z.d)(s):(0,b.z)([s,(0,E.t)(c,[1,0],[c.shape[0]-1,c.shape[1]])],0);const h=(0,Ve.W)((0,de.h)((0,w.O)(d,u),p)),m=(0,E.t)(r,[e,0],[n-e,a]),f=(0,_.d)(h,o),g=(0,$n.p)(o);if(0===e)r=(0,qe.l)(m,(0,w.O)(f,(0,w.O)(g,m)));else{const t=(0,qe.l)(m,(0,w.O)(f,(0,w.O)(g,m)));r=(0,b.z)([(0,E.t)(r,[0,0],[e,a]),t],0)}const v=(0,$n.p)(f),y=(0,E.t)(i,[0,e],[n,i.shape[1]-e]);if(0===e)i=(0,qe.l)(y,(0,w.O)((0,w.O)(y,o),v));else{const t=(0,qe.l)(y,(0,w.O)((0,w.O)(y,o),v));i=(0,b.z)([(0,E.t)(i,[0,0],[n,e]),t],1)}return[o,r,i]})),(0,va.B9)([t,p,l])}return!t&&n>a&&(i=(0,E.t)(i,[0,0],[n,a]),r=(0,E.t)(r,[0,0],[a,a])),[i,r]}))}const xa=(0,S.op)({qr_:function(e,t=!1){if((0,I.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ya(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=(0,kn.H)((0,J.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),i=[],r=[];return a.forEach((e=>{const[n,a]=ya(e,t);i.push(n),r.push(a)})),[(0,J.X)((0,gn.k)(i,0),e.shape),(0,J.X)((0,gn.k)(r,0),e.shape)]}}});var ba=n(9876);const wa=(0,S.op)({computeWeightedLoss_:function(e,t,n=ba.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,x._1)(e,"losses","computeWeightedLoss");let i=null;null!=t&&(i=(0,x._1)(t,"weights","computeWeightedLoss"));const r=null==i?a:(0,_.d)(a,i);if(n===ba.I.NONE)return r;if(n===ba.I.SUM)return(0,je.S)(r);if(n===ba.I.MEAN){if(null==i)return(0,it.J)(r);{const e=a.size/i.size,t=(0,de.h)((0,je.S)(r),(0,je.S)(i));return e>1?(0,de.h)(t,(0,Kt.i)(e)):t}}if(n===ba.I.SUM_BY_NONZERO_WEIGHTS){if(null==i)return(0,de.h)((0,je.S)(r),(0,Kt.i)(a.size));{const e=(0,_.d)(i,(0,rt.i)(a.shape)),t=(0,F.p)((0,je.S)((0,gt.Q)(e,(0,Kt.i)(0))),"float32");return(0,de.h)((0,je.S)(r),t)}}throw Error(`Unknown reduction: ${n}`)}}),_a=(0,S.op)({absoluteDifference_:function(e,t,n,i=ba.I.SUM_BY_NONZERO_WEIGHTS){const r=(0,x._1)(e,"labels","absoluteDifference"),s=(0,x._1)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=(0,x._1)(n,"weights","absoluteDifference")),(0,I.k5)(r.shape,s.shape,"Error in absoluteDifference: ");const p=(0,a.W)((0,qe.l)(r,s));return wa(p,o,i)}}),Sa=(0,S.op)({cosineDistance_:function(e,t,n,a,i=ba.I.SUM_BY_NONZERO_WEIGHTS){const r=(0,x._1)(e,"labels","cosineDistance"),s=(0,x._1)(t,"predictions","cosineDistance");let o=null;null!=a&&(o=(0,x._1)(a,"weights","cosineDistance")),(0,I.k5)(r.shape,s.shape,"Error in cosineDistance: ");const p=(0,Kt.i)(1),l=(0,qe.l)(p,(0,je.S)((0,_.d)(r,s),n,!0));return wa(l,o,i)}}),Ta=(0,S.op)({hingeLoss_:function(e,t,n,a=ba.I.SUM_BY_NONZERO_WEIGHTS){let i=(0,x._1)(e,"labels","hingeLoss");const r=(0,x._1)(t,"predictions","hingeLoss");let s=null;null!=n&&(s=(0,x._1)(n,"weights","hingeLoss")),(0,I.k5)(i.shape,r.shape,"Error in hingeLoss: ");const o=(0,Kt.i)(1);i=(0,qe.l)((0,_.d)((0,Kt.i)(2),i),o);const p=(0,Vt.U)((0,qe.l)(o,(0,_.d)(i,r)));return wa(p,s,a)}}),Ea=(0,S.op)({huberLoss_:function(e,t,n,i=1,r=ba.I.SUM_BY_NONZERO_WEIGHTS){const o=(0,x._1)(e,"labels","huberLoss"),p=(0,x._1)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,x._1)(n,"weights","huberLoss")),(0,I.k5)(o.shape,p.shape,"Error in huberLoss: ");const d=(0,Kt.i)(i),u=(0,a.W)((0,qe.l)(p,o)),c=(0,lt.L)(u,d),h=(0,qe.l)(u,c),m=(0,s.I)((0,_.d)((0,Kt.i)(.5),(0,ct.h)(c)),(0,_.d)(d,h));return wa(m,l,r)}}),Ma=(0,S.op)({logLoss_:function(e,t,n,a=1e-7,i=ba.I.SUM_BY_NONZERO_WEIGHTS){const r=(0,x._1)(e,"labels","logLoss"),o=(0,x._1)(t,"predictions","logLoss");let p=null;null!=n&&(p=(0,x._1)(n,"weights","logLoss")),(0,I.k5)(r.shape,o.shape,"Error in logLoss: ");const l=(0,Kt.i)(1),d=(0,Kt.i)(a),u=(0,Ve.W)((0,_.d)(r,(0,Be.c)((0,s.I)(o,d)))),c=(0,_.d)((0,qe.l)(l,r),(0,Be.c)((0,s.I)((0,qe.l)(l,o),d))),h=(0,qe.l)(u,c);return wa(h,p,i)}}),Na=(0,S.op)({meanSquaredError_:function(e,t,n,a=ba.I.SUM_BY_NONZERO_WEIGHTS){const i=(0,x._1)(e,"labels","meanSquaredError"),r=(0,x._1)(t,"predictions","meanSquaredError");let s=null;null!=n&&(s=(0,x._1)(n,"weights","meanSquaredError")),(0,I.k5)(i.shape,r.shape,"Error in meanSquaredError: ");const o=(0,mn.$)(i,r);return wa(o,s,a)}}),Ca=(0,S.op)({sigmoidCrossEntropy_:function(e,t,n,i=0,r=ba.I.SUM_BY_NONZERO_WEIGHTS){let o=(0,x._1)(e,"multiClassLabels","sigmoidCrossEntropy");const p=(0,x._1)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,x._1)(n,"weights","sigmoidCrossEntropy")),(0,I.k5)(o.shape,p.shape,"Error in sigmoidCrossEntropy: "),i>0){const e=(0,Kt.i)(i),t=(0,Kt.i)(1),n=(0,Kt.i)(.5);o=(0,s.I)((0,_.d)(o,(0,qe.l)(t,e)),(0,_.d)(n,e))}const d=function(e,t){const n=(0,x._1)(e,"labels","sigmoidCrossEntropyWithLogits"),i=(0,x._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,I.k5)(n.shape,i.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=(0,Vt.U)(i),o=(0,_.d)(i,n),p=(0,Fe.K)((0,ve.Q)((0,Ve.W)((0,a.W)(i))));return(0,s.I)((0,qe.l)(r,o),p)}(o,p);return wa(d,l,r)}}),Aa=(0,S.op)({softmaxCrossEntropy_:function(e,t,n,a=0,i=ba.I.SUM_BY_NONZERO_WEIGHTS){let r=(0,x._1)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,x._1)(t,"logits","softmaxCrossEntropy");let p=null;if(null!=n&&(p=(0,x._1)(n,"weights","softmaxCrossEntropy")),(0,I.k5)(r.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){const e=(0,Kt.i)(a),t=(0,Kt.i)(1),n=(0,Kt.i)(r.shape[1]);r=(0,s.I)((0,_.d)(r,(0,qe.l)(t,e)),(0,de.h)(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const a=(0,$e.cb)(((e,t,a)=>{const i=Xe(t,[n],!0),r=(0,qe.l)((0,F.p)(t,"float32"),i);a([e,r]);const s=(0,Ve.W)((0,_.d)(r,e));return{value:(0,je.S)(s,[n]),gradFunc:(e,t)=>{const[a,i]=t,r=(0,We.rv)(e.shape,[n]);return[(0,_.d)((0,J.X)(e,r),(0,qe.l)((0,F.p)(a,"float32"),(0,ve.Q)(i))),(0,_.d)((0,J.X)(e,r),(0,qe.l)((0,ve.Q)(i),(0,F.p)(a,"float32")))]}}}));return a(e,t)}(r,o);return wa(l,p,i)}}),Ia=(0,S.op)({sparseFillEmptyRows_:function(e,t,n,a){const i=(0,x._1)(e,"indices","sparseFillEmptyRows","int32"),r=(0,x._1)(t,"values","sparseFillEmptyRows"),s=(0,x._1)(n,"denseShape","sparseFillEmptyRows","int32"),o=(0,x._1)(a,"defaultValue","sparseFillEmptyRows",r.dtype);if(2!==i.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${i.shape}`);if(1!==r.rank)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(1!==s.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${s.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const p={indices:i,values:r,denseShape:s,defaultValue:o},l=Z.BV.runKernel(Q.O3,p);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),Ra=(0,S.op)({sparseReshape_:function(e,t,n){const a=(0,x._1)(e,"inputIndices","sparseReshape","int32"),i=(0,x._1)(t,"inputShape","sparseReshape","int32"),r=(0,x._1)(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==i.rank)throw new Error(`Input shape should be Tensor1D but received shape ${i.shape}`);if(1!==r.rank)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const s={inputIndices:a,inputShape:i,newShape:r},o=Z.BV.runKernel(Q.nh,s);return{outputIndices:o[0],outputShape:o[1]}}}),ka=(0,S.op)({sparseSegmentMean_:function(e,t,n){const a=(0,x._1)(e,"data","sparseSegmentMean"),i=(0,x._1)(t,"indices","sparseSegmentMean","int32"),r=(0,x._1)(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${i.shape}`);if(1!==r.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${r.shape}`);const s={data:a,indices:i,segmentIds:r};return Z.BV.runKernel(Q.YW,s)}}),Da=(0,S.op)({sparseSegmentSum_:function(e,t,n){const a=(0,x._1)(e,"data","sparseSegmentSum"),i=(0,x._1)(t,"indices","sparseSegmentSum","int32"),r=(0,x._1)(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${i.shape}`);if(1!==r.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${r.shape}`);const s={data:a,indices:i,segmentIds:r};return Z.BV.runKernel(Q.Zj,s)}}),Pa=(0,S.op)({stringNGrams_:function(e,t,n,a,i,r,s,o){const p=(0,x._1)(e,"data","stringNGrams","string");if("string"!==p.dtype)throw new Error("Data must be of datatype string");if(1!==p.shape.length)throw new Error(`Data must be a vector, saw: ${p.shape}`);const l=(0,x._1)(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const d={separator:n,nGramWidths:a,leftPad:i,rightPad:r,padWidth:s,preserveShortSequences:o},u={data:p,dataSplits:l},c=Z.BV.runKernel(Q._J,u,d);return{nGrams:c[0],nGramsSplits:c[1]}}}),La=(0,S.op)({stringSplit_:function(e,t,n=!0){const a=(0,x._1)(e,"input","stringSplit","string"),i=(0,x._1)(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error(`Input should be Tensor1D but received shape ${a.shape}`);if(0!==i.rank)throw new Error(`Delimiter should be a scalar but received shape ${i.shape}`);const r={skipEmpty:n},s={input:a,delimiter:i},o=Z.BV.runKernel(Q.s1,s,r);return{indices:o[0],values:o[1],shape:o[2]}}}),Oa=(0,S.op)({stringToHashBucketFast_:function(e,t){const n=(0,x._1)(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const i={input:n};return Z.BV.runKernel(Q.Xk,i,a)}}),Ba={fft:pn.k,ifft:ln.S,rfft:un.Q,irfft:dn.w},Fa={hammingWindow:Qn,hannWindow:Jn,frame:ea,stft:ta},$a={flipLeftRight:aa,grayscaleToRGB:ia,resizeNearestNeighbor:ca,resizeBilinear:ua,rotateWithOffset:ra,cropAndResize:na,nonMaxSuppression:oa,nonMaxSuppressionAsync:async function(e,t,n,a=.5,i=Number.NEGATIVE_INFINITY){const r=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),s=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),o=sa(r,s,n,a,i);n=o.maxOutputSize,a=o.iouThreshold,i=o.scoreThreshold;const p=await Promise.all([r.data(),s.data()]),l=p[0],d=p[1],{selectedIndices:u}=(0,pa.GP)(l,d,n,a,i);return r!==e&&r.dispose(),s!==t&&s.dispose(),(0,wn.R)(u,"int32")},nonMaxSuppressionWithScore:la,nonMaxSuppressionWithScoreAsync:async function(e,t,n,a=.5,i=Number.NEGATIVE_INFINITY,r=0){const s=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),p=sa(s,o,n,a,i,r);n=p.maxOutputSize,a=p.iouThreshold,i=p.scoreThreshold,r=p.softNmsSigma;const l=await Promise.all([s.data(),o.data()]),d=l[0],u=l[1],{selectedIndices:c,selectedScores:h}=(0,pa.pA)(d,u,n,a,i,r);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,wn.R)(c,"int32"),selectedScores:(0,wn.R)(h)}},nonMaxSuppressionPadded:da,nonMaxSuppressionPaddedAsync:async function(e,t,n,a=.5,i=Number.NEGATIVE_INFINITY,r=!1){const s=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),p=sa(s,o,n,a,i,null),l=p.maxOutputSize,d=p.iouThreshold,u=p.scoreThreshold,[c,h]=await Promise.all([s.data(),o.data()]),{selectedIndices:m,validOutputs:f}=(0,pa.qP)(c,h,l,d,u,r);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,wn.R)(m,"int32"),validOutputs:(0,Kt.i)(f,"int32")}},threshold:ha,transform:ma},Va={bandPart:fa,gramSchmidt:ga,qr:xa},za={absoluteDifference:_a,computeWeightedLoss:wa,cosineDistance:Sa,hingeLoss:Ta,huberLoss:Ea,logLoss:Ma,meanSquaredError:Na,sigmoidCrossEntropy:Ca,softmaxCrossEntropy:Aa},Ua={sparseFillEmptyRows:Ia,sparseReshape:Ra,sparseSegmentMean:ka,sparseSegmentSum:Da},Ga={stringNGrams:Pa,stringSplit:La,stringToHashBucketFast:Oa}},9682:(e,t,n)=>{"use strict";n.d(t,{v:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({pad_:function(e,t,n=0){const s=(0,r._1)(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},p={x:s};return a.BV.runKernel(i.ly,p,o)}})},3453:(e,t,n)=>{"use strict";n.d(t,{s:()=>o});var a=n(7097),i=n(9121),r=n(747),s=n(3740);const o=(0,n(2668).op)({pow_:function(e,t){let n=(0,s._1)(e,"base","pow"),o=(0,s._1)(t,"exp","pow");[n,o]=(0,r.makeTypesMatch)(n,o);const p={a:n,b:o};return a.BV.runKernel(i.pe,p)}})},8151:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({prelu_:function(e,t){const n={x:(0,r._1)(e,"x","prelu"),alpha:(0,r._1)(t,"alpha","prelu")};return a.BV.runKernel(i.o0,n)}})},9798:(e,t,n)=>{"use strict";function a(e,t=!1){console.log(e.toString(t))}n.d(t,{S:()=>a})},9451:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(2271);const o=(0,n(2668).op)({prod_:function(e,t=null,n=!1){let o=(0,r._1)(e,"x","prod");"bool"===o.dtype&&(o=(0,s.p)(o,"int32"));const p={x:o},l={axis:t,keepDims:n};return a.BV.runKernel(i.Dl,p,l)}})},6845:(e,t,n)=>{"use strict";n.d(t,{Yi:()=>i,T9:()=>r,wv:()=>s});var a=n(3129);class i{constructor(e,t,n,i,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=i,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=a.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,i,r;do{a=2*this.random()-1,i=2*this.random()-1,r=a*a+i*i}while(r>=1||0===r);const s=Math.sqrt(-2*Math.log(r)/r);e=this.mean+this.stdDev*a*s,t=this.mean+this.stdDev*i*s,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class r{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=a.alea(s.toString()),this.randn=new i(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,i,r;for(;;){do{a=this.randn.nextValue(),r=1+this.c*a}while(r<=0);if(r*=r*r,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-r+Math.log(r)),i=this.randu(),i<t||Math.log(i)<n)break}return r=1/this.beta*this.d*r,this.alpha<1&&(r*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(r)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class s{constructor(e=0,t=1,n,i){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==i&&(i=Math.random()),"number"==typeof i&&(i=i.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=a.alea(i)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},5002:(e,t,n)=>{"use strict";n.d(t,{L:()=>s});var a=n(2657),i=n(2668),r=n(6845);const s=(0,i.op)({randomUniform_:function(e,t=0,n=1,i="float32",s){const o=(0,a.f)(e,i),p=new r.wv(t,n,null,s);for(let e=0;e<o.values.length;e++)o.values[e]=p.nextValue();return o.toTensor()}})},7245:(e,t,n)=>{"use strict";n.d(t,{w:()=>r});var a=n(7097),i=n(9121);function r(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return a.BV.runKernel(i.e6,{},s)}},766:(e,t,n)=>{"use strict";n.d(t,{k:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({real_:function(e){const t={input:(0,r._1)(e,"input","real")};return a.BV.runKernel(i.xJ,t)}})},9036:(e,t,n)=>{"use strict";n.d(t,{M:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({reciprocal_:function(e){const t={x:(0,r._1)(e,"x","reciprocal")};return a.BV.runKernel(i.$H,t)}})},7409:(e,t,n)=>{"use strict";n.d(t,{U:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({relu_:function(e){const t={x:(0,r._1)(e,"x","relu")};return a.BV.runKernel(i.qk,t)}})},3582:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({relu6_:function(e){const t={x:(0,r._1)(e,"x","relu6")};return a.BV.runKernel(i.Sb,t)}})},4968:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({reshape_:function(e,t){const n={x:(0,r._1)(e,"x","reshape","string_or_numeric")},s={shape:t};return a.BV.runKernel(i.HZ,n,s)}})},7486:(e,t,n)=>{"use strict";n.d(t,{G:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({reverse_:function(e,t){const n={x:(0,r._1)(e,"x","reverse")},s={dims:t};return a.BV.runKernel(i.mK,n,s)}})},7809:(e,t,n)=>{"use strict";n.d(t,{N:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({round_:function(e){const t={x:(0,r._1)(e,"x","round")};return a.BV.runKernel(i.e0,t)}})},2634:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({rsqrt_:function(e){const t={x:(0,r._1)(e,"x","rsqrt","float32")};return a.BV.runKernel(i.bV,t)}})},9494:(e,t,n)=>{"use strict";n.d(t,{i:()=>r});var a=n(569),i=n(7852);function r(e,t){if(((0,a.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,a.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,i.H)(e,[],[],t)}},3100:(e,t,n)=>{"use strict";n.d(t,{s:()=>p});var a=n(7097),i=n(9121),r=n(3740),s=n(2668),o=n(3028);const p=(0,s.op)({scatterND_:function(e,t,n){const s=(0,r._1)(e,"indices","scatterND","int32"),p=(0,r._1)(t,"updates","scatterND");o.validateInput(p,s,n);const l={indices:s,updates:p},d={shape:n};return a.BV.runKernel(i.xQ,l,d)}})},3028:(e,t,n)=>{"use strict";n.r(t),n.d(t,{validateUpdateShape:()=>i,validateInput:()=>r,calculateShapes:()=>s});var a=n(569);function i(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,i=t.rank>1?t.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${i}.`;if(n.rank<i)throw new Error(r+` update.rank < ${i}. `);if(e.length<a+(n.rank-i))throw new Error(r+` Output shape length < ${a+(n.rank-i)}`);if(n.rank!==i+e.length-a)throw new Error(r+" update.rank != "+(i+e.length-a));for(let e=0;e<i;++e)if(n.shape[e]!==t.shape[e])throw new Error(r+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-i;++t)if(n.shape[t+i]!==e[t+a])throw new Error(r+` updates.shape[${t+i}] (${n.shape[t+i]}) != shape[${t+i}] (${e[t+i]})`)}function r(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}i(n,t,e)}function s(e,t,n){const i=t.shape.length,r=i>1?t.shape[i-1]:1,s=n.length;let o=1;for(let e=r;e<s;++e)o*=n[e];const p=r<1?1:r;return{sliceRank:r,numUpdates:(0,a.NA)(t.shape)/p,sliceSize:o,strides:[...(0,a.e3)(n.slice(0,r)),1],outputSize:(0,a.NA)(n)}}},5503:(e,t,n)=>{"use strict";n.d(t,{U:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({selu_:function(e){const t={x:(0,r._1)(e,"x","selu")};return a.BV.runKernel(i.oF,t)}})},6567:(e,t,n)=>{"use strict";n.d(t,{O:()=>s});var a=n(4077),i=n(3740),r=n(569);const s=async function(e,t){const n=(0,i._1)(e,"x","setdiff1d"),s=(0,i._1)(t,"y","setdiff1d");r.hu(n.dtype===s.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`)),r.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),r.hu(1===s.rank,(()=>`y should be 1D tensor, but got y (${s.shape}).`));const o=await n.data(),p=await s.data(),l=new Set(p);let d=0;for(let e=0;e<o.length;e++)l.has(o[e])||d++;const u=new a.YD([d],n.dtype),c=new a.YD([d],"int32");for(let e=0,t=0;e<o.length;e++)l.has(o[e])||(u.values[t]=o[e],c.values[t]=e,t++);return[u.toTensor(),c.toTensor()]}},625:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({sigmoid_:function(e){const t={x:(0,r._1)(e,"x","sigmoid","float32")};return a.BV.runKernel(i.a5,t)}})},4434:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({sign_:function(e){const t={x:(0,r._1)(e,"x","sign")};return a.BV.runKernel(i.i5,t)}})},9331:(e,t,n)=>{"use strict";n.d(t,{O:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({sin_:function(e){const t={x:(0,r._1)(e,"x","sin","float32")};return a.BV.runKernel(i.RQ,t)}})},3254:(e,t,n)=>{"use strict";n.d(t,{R:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({sinh_:function(e){const t={x:(0,r._1)(e,"x","sinh")};return a.BV.runKernel(i.w3,t)}})},2676:(e,t,n)=>{"use strict";n.d(t,{t:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({slice_:function(e,t,n){const s=(0,r._1)(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const o={x:s},p={begin:t,size:n};return a.BV.runKernel(i.p2,o,p)}})},682:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({softmax_:function(e,t=-1){const n=(0,r._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},o={dim:t};return a.BV.runKernel(i.Gc,s,o)}})},3694:(e,t,n)=>{"use strict";n.d(t,{W:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({softplus_:function(e){const t={x:(0,r._1)(e,"x","softplus")};return a.BV.runKernel(i.MR,t)}})},7918:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({spaceToBatchND_:function(e,t,n){const o=(0,r._1)(e,"x","spaceToBatchND");s.hu(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),s.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),s.hu(o.shape.reduce(((e,a,i)=>i>0&&i<=t.length?e&&(a+n[i-1][0]+n[i-1][1])%t[i-1]==0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const p={x:o},l={blockShape:t,paddings:n};return a.BV.runKernel(i.TQ,p,l)}})},9758:(e,t,n)=>{"use strict";n.d(t,{e:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({sparseToDense_:function(e,t,n,s=0){const o=(0,r._1)(e,"sparseIndices","sparseToDense","int32"),p=(0,r._1)(t,"sparseValues","sparseToDense"),l=(0,r._1)(s,"defaultValue","sparseToDense",p.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const i=e.rank>0?e.shape[0]:1,r=e.rank>1?e.shape[1]:1;if(n.length!==r)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${r}.`);const s=t.size;if(0!==t.rank&&(1!==t.rank||s!==i))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${i}]`);if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,p,n,l);const d={sparseIndices:o,sparseValues:p,defaultValue:l},u={outputShape:n};return a.BV.runKernel(i.D2,d,u)}})},7020:(e,t,n)=>{"use strict";n.d(t,{k:()=>s});var a=n(7097),i=n(9121),r=n(569);const s=(0,n(2668).op)({fft_:function(e){(0,r.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return a.BV.runKernel(i.vw,t)}})},8447:(e,t,n)=>{"use strict";n.d(t,{S:()=>s});var a=n(7097),i=n(9121),r=n(569);const s=(0,n(2668).op)({ifft_:function(e){(0,r.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return a.BV.runKernel(i.Qg,t)}})},4415:(e,t,n)=>{"use strict";n.d(t,{w:()=>m});var a=n(1661),i=n(6884),r=n(4386),s=n(4841),o=n(2668),p=n(766),l=n(4968),d=n(7486),u=n(9494),c=n(2676),h=n(8447);const m=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const a=(0,l.X)(e,[n,t]);o=(0,h.S)(a)}else{const m=[n,2*(t-1)],f=(0,l.X)((0,p.k)(e),[n,t]),g=(0,l.X)((0,r.a)(e),[n,t]),v=(0,d.G)((0,c.t)(f,[0,1],[n,t-2]),1),y=(0,s.d)((0,d.G)((0,c.t)(g,[0,1],[n,t-2]),1),(0,u.i)(-1)),x=(0,i.z)([f,v],1),b=(0,i.z)([g,y],1),w=(0,l.X)((0,a.P)(x,b),[m[0],m[1]]);o=(0,h.S)(w)}if(o=(0,p.k)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,l.X)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},3710:(e,t,n)=>{"use strict";n.d(t,{Q:()=>f});var a=n(569),i=n(1661),r=n(6884),s=n(4386),o=n(2668),p=n(766),l=n(4968),d=n(2676),u=n(8644),c=n(9640),h=n(6577),m=n(7020);const f=(0,o.op)({rfft_:function(e,t){(0,a.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let f;if(null!=t&&t<n){const a=e.shape.map((e=>0)),i=e.shape.map((e=>e));i[e.shape.length-1]=t,f=(0,d.t)(e,a,i),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,f=(0,r.z)([e,(0,c.l)(a)],e.shape.length-1),n=t}else f=e;const g=(0,h.P)(f),v=(0,l.X)((0,i.P)(f,g),[o,n]),y=(0,m.k)(v),x=Math.floor(n/2)+1,b=(0,p.k)(y),w=(0,s.a)(y),_=(0,u.V)(b,[x,n-x],b.shape.length-1),S=(0,u.V)(w,[x,n-x],w.shape.length-1),T=f.shape.slice();return T[f.shape.length-1]=x,(0,l.X)((0,i.P)(_[0],S[0]),T)}})},8644:(e,t,n)=>{"use strict";n.d(t,{V:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({split_:function(e,t,n=0){const s={x:(0,r._1)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return a.BV.runKernel(i.L8,s,o)}})},3261:(e,t,n)=>{"use strict";n.d(t,{_:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({sqrt_:function(e){const t={x:(0,r._1)(e,"x","sqrt","float32")};return a.BV.runKernel(i.FK,t)}})},248:(e,t,n)=>{"use strict";n.d(t,{h:()=>r});var a=n(7097),i=n(3740);const r=(0,n(2668).op)({square_:function(e){const t=(0,i._1)(e,"x","square");return a.BV.runKernel("Square",{x:t},{})}})},5265:(e,t,n)=>{"use strict";n.d(t,{$:()=>p});var a=n(7097),i=n(9121),r=n(747),s=n(3740),o=n(2200);const p=(0,n(2668).op)({squaredDifference_:function(e,t){let n=(0,s._1)(e,"a","squaredDifference"),p=(0,s._1)(t,"b","squaredDifference");[n,p]=(0,r.makeTypesMatch)(n,p),(0,o.assertAndGetBroadcastShape)(n.shape,p.shape);const l={a:n,b:p};return a.BV.runKernel(i._t,l,{})}})},9590:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var a=n(3740),i=n(569),r=n(2668),s=n(4968);const o=(0,r.op)({squeeze_:function(e,t){const n=(0,a._1)(e,"x","squeeze");return(0,s.X)(n,(0,i.bp)(n.shape,t).newShape)}})},2991:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({stack_:function(e,t=0){const n=(0,r.sI)(e,"tensors","stack","string_or_numeric");s.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&s.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,p={axis:t};return a.BV.runKernel(i.Qi,o,p)}})},1901:(e,t,n)=>{"use strict";n.d(t,{N:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({step_:function(e,t=0){const n={x:(0,r._1)(e,"x","step")},s={alpha:t};return a.BV.runKernel(i.h8,n,s)}})},5158:(e,t,n)=>{"use strict";n.d(t,{N:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({stridedSlice_:function(e,t,n,s,o=0,p=0,l=0,d=0,u=0){const c={x:(0,r._1)(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:s,beginMask:o,endMask:p,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:u};return a.BV.runKernel(i.m2,c,h)}})},827:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var a=n(7097),i=n(9121),r=n(747),s=n(3740);const o=(0,n(2668).op)({sub_:function(e,t){let n=(0,s._1)(e,"a","sub"),o=(0,s._1)(t,"b","sub");[n,o]=(0,r.makeTypesMatch)(n,o);const p={a:n,b:o};return a.BV.runKernel(i.Tr,p)}})},5475:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(2271);const o=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let o=(0,r._1)(e,"x","sum");"bool"===o.dtype&&(o=(0,s.p)(o,"int32"));const p={x:o},l={axis:t,keepDims:n};return a.BV.runKernel(i.GB,p,l)}})},1173:(e,t,n)=>{"use strict";n.d(t,{O:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({tan_:function(e){const t={x:(0,r._1)(e,"x","tan","float32")};return a.BV.runKernel(i.sE,t)}})},1869:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({tanh_:function(e){const t={x:(0,r._1)(e,"x","tanh","float32")};return a.BV.runKernel(i.MI,t)}})},701:(e,t,n)=>{"use strict";n.d(t,{X:()=>r});var a=n(3740),i=n(7852);function r(e,t,n){const r=(0,a.C)(e,n);return(0,i.H)(e,t,r,n)}},6092:(e,t,n)=>{"use strict";n.d(t,{R:()=>s});var a=n(3740),i=n(569),r=n(7852);function s(e,t){(0,i.Cq)(e);const n=(0,a.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,r.H)(e,null,n,t)}},9906:(e,t,n)=>{"use strict";n.d(t,{w:()=>s});var a=n(3740),i=n(569),r=n(7852);function s(e,t,n){if((0,i.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=(0,a.C)(e,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,r.H)(e,t,s,n)}},7852:(e,t,n)=>{"use strict";n.d(t,{H:()=>s});var a=n(7097),i=n(569),r=n(9122);function s(e,t,n,s){if(null==s&&(s=(0,i.D2)(e)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,i.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,i.Mu)(t);const e=(0,i.NA)(t),a=(0,i.NA)(n);(0,i.hu)(e===a,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${a}`));for(let e=0;e<n.length;++e){const a=n[e],r=e!==n.length-1||a!==(0,i.NA)(t.slice(e));(0,i.hu)(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,i.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?(0,r.toTypedArray)(e,s):(0,i.xH)(e,[],!0),a.BV.makeTensor(e,t,s)}},7501:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({tile_:function(e,t){const n=(0,r._1)(e,"x","tile","string_or_numeric");s.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},p={reps:t};return a.BV.runKernel(i.n9,o,p)}})},3243:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({topk_:function(e,t=1,n=!0){const s=(0,r._1)(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const p={x:s},l={k:t,sorted:n},[d,u]=a.BV.runKernel(i.cW,p,l);return{values:d,indices:u}}})},9065:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({transpose_:function(e,t){const n=(0,r._1)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),s.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{s.hu(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const o={x:n},p={perm:t};return a.BV.runKernel(i.G3,o,p)}})},3596:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var a=n(2657),i=n(2668),r=n(6845);const s=(0,i.op)({truncatedNormal_:function(e,t=0,n=1,i,s){if(null!=i&&"bool"===i)throw new Error("Unsupported data type $ { dtype }");const o=new r.Yi(t,n,i,!0,s),p=(0,a.f)(e,i);for(let e=0;e<p.values.length;e++)p.values[e]=o.nextValue();return p.toTensor()}})},9608:(e,t,n)=>{"use strict";n.d(t,{T:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({unique_:function(e,t=0){const n=(0,r._1)(e,"x","unique","string_or_numeric");(0,s.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},p={axis:t},[l,d]=a.BV.runKernel(i.kp,o,p);return{values:l,indices:d}}})},4136:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var a=n(7097),i=n(9121),r=n(3740),s=n(569);const o=(0,n(2668).op)({unstack_:function(e,t=0){const n=(0,r._1)(e,"x","unstack","string_or_numeric");s.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},p={axis:t};return a.BV.runKernel(i.To,o,p)}})},5912:(e,t,n)=>{"use strict";n.d(t,{a:()=>p});var a=n(7097),i=n(9121),r=n(3740),s=n(8247),o=n(2200);const p=(0,n(2668).op)({where_:function(e,t,n){const p=(0,r._1)(t,"a","where"),l=(0,r._1)(n,"b","where"),d=(0,r._1)(e,"condition","where","bool"),u=(0,o.assertAndGetBroadcastShape)((0,o.assertAndGetBroadcastShape)(d.shape,p.shape),l.shape),c={condition:(0,s.U)(d,u),t:(0,s.U)(p,u),e:(0,s.U)(l,u)};return a.BV.runKernel(i.Ph,c)}})},6380:(e,t,n)=>{"use strict";n.d(t,{i:()=>r});var a=n(8333),i=n(3740);const r=async function(e){const t=(0,i._1)(e,"condition","whereAsync","bool"),n=await t.data(),r=(0,a.Z)(t.shape,n);return e!==t&&t.dispose(),r}},9640:(e,t,n)=>{"use strict";n.d(t,{l:()=>s});var a=n(7097),i=n(569),r=n(1661);function s(e,t="float32"){if("complex64"===t){const t=s(e,"float32"),n=s(e,"float32");return(0,r.P)(t,n)}const n=(0,i.wT)((0,i.NA)(e),t);return a.BV.makeTensor(n,e,t)}},6577:(e,t,n)=>{"use strict";n.d(t,{P:()=>s});var a=n(7097),i=n(9121),r=n(3740);const s=(0,n(2668).op)({zerosLike_:function(e){const t={x:(0,r._1)(e,"x","zerosLike")};return a.BV.runKernel(i.Ru,t)}})},4077:(e,t,n)=>{"use strict";n.d(t,{es:()=>y,YD:()=>u,_w:()=>x,FZ:()=>v,Vp:()=>g,Vi:()=>f});var a=n(5938),i=n(569);function r(e,t,n,a){const r=(0,i.e3)(t),o=function(e,t,n,a){const r=(0,i.NA)(t),o=a[a.length-1],p=new Array(o).fill(0),d=t.length,u="complex64"===n?l(e):e;if(d>1)for(let e=0;e<r/o;e++){const t=e*o;for(let e=0;e<o;e++)p[e]=Math.max(p[e],s(u[t+e],0,n).length)}return p}(e,t,n,r),d=t.length,u=p(e,t,n,r,o),c=["Tensor"];return a&&(c.push(`  dtype: ${n}`),c.push(`  rank: ${d}`),c.push(`  shape: [${t}]`),c.push("  values:")),c.push(u.map((e=>"    "+e)).join("\n")),c.join("\n")}function s(e,t,n){let a;return a=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,i.HD)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,i.oj)(a,t)}function o(e){return 0===e?"false":"true"}function p(e,t,n,a,i,r=!0){const d="complex64"===n?2:1,u=t[0],c=t.length;if(0===c)return"complex64"===n?[s(l(e)[0],0,n)]:"bool"===n?[o(e[0])]:[e[0].toString()];if(1===c){if(u>20){const t=3*d;let a=Array.from(e.slice(0,t)),r=Array.from(e.slice((u-3)*d,u*d));return"complex64"===n&&(a=l(a),r=l(r)),["["+a.map(((e,t)=>s(e,i[t],n))).join(", ")+", ..., "+r.map(((e,t)=>s(e,i[u-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>s(e,i[t],n))).join(", ")+"]"]}const h=t.slice(1),m=a.slice(1),f=a[0]*d,g=[];if(u>20){for(let t=0;t<3;t++){const a=t*f,r=a+f;g.push(...p(e.slice(a,r),h,n,m,i,!1))}g.push("...");for(let t=u-3;t<u;t++){const a=t*f,r=a+f;g.push(...p(e.slice(a,r),h,n,m,i,t===u-1))}}else for(let t=0;t<u;t++){const a=t*f,r=a+f;g.push(...p(e.slice(a,r),h,n,m,i,t===u-1))}const v=2===c?",":"";g[0]="["+g[0]+v;for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+v;let y=",\n";for(let e=2;e<c;e++)y+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(r?"":y),g}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var d=n(9122);class u{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=i.NA(e),null!=n){const e=n.length;i.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||i.rQ(t,this.size),this.strides=(0,i.e3)(e)}set(e,...t){0===t.length&&(t=[0]),i.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return c().makeTensor(this.values,this.shape,this.dtype)}}let c=null,h=null,m=null;function f(e){c=e}function g(e){h=e}function v(e){m=e}class y{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=i.NA(e),this.strides=(0,i.e3)(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return h.buffer(this.shape,this.dtype,e)}bufferSync(){return h.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,i.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,i.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=c().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>d.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),c().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=c().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>d.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await c().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(c().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return h.print(this,e)}clone(){return this.throwIfDisposed(),h.clone(this)}toString(e=!1){return r(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),h.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),c().makeVariable(this,e,t,n)}}Object.defineProperty(y,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),(0,a.R)("Tensor",(()=>y));class x extends y{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!i.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);c().disposeTensor(this),this.dataId=e.dataId,c().incRef(this,null)}dispose(){c().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>e instanceof y&&null!=e.assign&&e.assign instanceof Function})},747:(e,t,n)=>{"use strict";n.r(t),n.d(t,{makeTypesMatch:()=>s,assertTypesMatch:()=>o,isTensorInList:()=>p,getTensorsInContainer:()=>l});var a=n(4077),i=n(1221),r=n(569);function s(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,i.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,r.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function p(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return d(e,t,new Set),t}function d(e,t,n){if(null==e)return;if(e instanceof a.es)return void t.push(e);if(i=e,!Array.isArray(i)&&"object"!=typeof i)return;var i;const r=e;for(const e in r){const a=r[e];n.has(a)||(n.add(a),d(a,t,n))}}},3740:(e,t,n)=>{"use strict";n.d(t,{C:()=>p,_1:()=>u,sI:()=>c});var a=n(7097),i=n(2885),r=n(4077),s=n(569),o=n(9122);function p(e,t){let n=e;if((0,s.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||(0,s.fU)(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&(0,i.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&l(e,a,[]),a}function l(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,s.fU)(e))return void(0,s.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,s.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,s.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const a=t.slice(1);for(let t=0;t<e.length;++t)l(e[t],a,n.concat(t))}function d(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function u(e,t,n,i="numeric"){if(e instanceof r.es)return d(i,e.dtype,t,n),e;let l=(0,s.D2)(e);if("string"!==l&&["bool","int32","float32"].indexOf(i)>=0&&(l=i),d(i,l,t,n),null==e||!(0,s.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const a=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${a}'`)}const u=p(e,l);(0,s.fU)(e)||Array.isArray(e)||(e=[e]);const c="string"!==l?(0,o.toTypedArray)(e,l):(0,s.xH)(e,[],!0);return a.BV.makeTensor(c,u,l)}function c(e,t,n,a="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,i)=>u(e,`${t}[${i}]`,n,a)))}},1221:(e,t,n)=>{"use strict";var a,i,r,s,o;n.d(t,{yw:()=>a,x8:()=>l,z4:()=>d}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(r||(r={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(s||(s={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const p={float32:s,int32:i,bool:r,complex64:o};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return p[e][t]}function d(e){return l(e,"int32")}},9122:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>i.cO,assert:()=>i.hu,assertNonNegativeIntegerDimensions:()=>i.Mu,assertNonNull:()=>i.Cq,assertShapesMatch:()=>i.k5,bytesFromStringArray:()=>i.Ub,bytesPerElement:()=>i.bT,checkConversionForErrors:()=>i.D5,clamp:()=>i.uZ,computeStrides:()=>i.e3,createScalarValue:()=>x,createShuffledIndices:()=>i.U$,decodeString:()=>T,distSquared:()=>i.E7,encodeString:()=>S,fetch:()=>_,fingerPrint64:()=>y,flatten:()=>i.xH,getArrayFromDType:()=>i.rQ,getTypedArrayFromDType:()=>i.WP,hasEncodingLoss:()=>i.QB,hexToLong:()=>o,indexToLoc:()=>i.NE,inferDtype:()=>i.D2,inferFromImplicitShape:()=>i.JZ,isBoolean:()=>i.jn,isFunction:()=>i.mf,isInt:()=>i.GN,isNumber:()=>i.hj,isPromise:()=>i.tI,isScalarShape:()=>i.N9,isString:()=>i.HD,isTypedArray:()=>i.fU,isValidDtype:()=>i.LP,locToIndex:()=>i.qy,makeOnesTypedArray:()=>i.p8,makeZerosNestedTypedArray:()=>i.l6,makeZerosTypedArray:()=>i.wT,nearestDivisor:()=>i.jP,nearestLargerEven:()=>i.nY,now:()=>w,parseAxisParam:()=>i.EC,randUniform:()=>i.bj,repeatedTry:()=>i.WD,rightPad:()=>i.oj,shuffle:()=>i.TV,shuffleCombo:()=>i.d7,sizeFromShape:()=>i.NA,sizeToSquarishShape:()=>i.YP,squeezeShape:()=>i.bp,sum:()=>i.Sm,swap:()=>i.LF,tanh:()=>i.AE,toNestedArray:()=>i.GX,toTypedArray:()=>b});var a=n(2885),i=n(569),r=n(3720);const s=n.n(r)()||r;function o(e){return s.fromString(e,!0,16)}const p=o("c3a5c85c97cb3127"),l=o("b492b66fbe98f273"),d=o("9ae16a3b2f90404f");function u(e){return e.xor(e.shru(47))}function c(e,t,n){const a=e.slice(t,t+n);return s.fromBytes(Array.from(a),!0,!0)}function h(e,t){return c(e,t,8)}function m(e,t){return c(e,t,4)}function f(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function g(e,t,n=o("9ddfea08eb382d69")){let a=e.xor(t).mul(n);a=a.xor(a.shru(47));let i=t.xor(a).mul(n);return i=i.xor(i.shru(47)),i=i.mul(n),i}function v(e,t,n,a){return function(e,t,n,a,i,r){i=i.add(e),r=f(r.add(i).add(a),21);const s=i;return i=(i=i.add(t)).add(n),r=r.add(f(i,44)),[i.add(a),r.add(s)]}(h(e,t),h(e,t+8),h(e,t+16),h(e,t+24),n,a)}function y(e,t=e.length){const n=s.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=d.add(2*t),a=h(e,0).add(d),i=h(e,t-8);return g(f(i,37).mul(n).add(a),f(a,25).add(i).mul(n),n)}if(t>=4){const n=d.add(2*t);return g(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return u(d.mul(n).xor(p.mul(a))).mul(d)}return d}(e,t):function(e,t=e.length){const n=d.add(2*t),a=h(e,0).mul(l),i=h(e,8),r=h(e,t-8).mul(n),s=h(e,t-16).mul(d);return g(f(a.add(i),43).add(f(r,30)).add(s),a.add(f(i.add(d),18)).add(r),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=d.add(2*t),a=h(e,0).mul(d),i=h(e,8),r=h(e,t-8).mul(n),s=h(e,t-16).mul(d),o=f(a.add(i),43).add(f(r,30)).add(s),p=g(o,a.add(f(i.add(d),18)).add(r),n),l=h(e,16).mul(n),u=h(e,24),c=o.add(h(e,t-32)).mul(n),m=p.add(h(e,t-24)).mul(n);return g(f(l.add(u),43).add(f(c,30)).add(m),l.add(f(u.add(a),18)).add(c),n)}(e,t);let a=n,i=n.mul(l).add(113),r=u(i.mul(d).add(113)).mul(d),o=[s.UZERO,s.UZERO],c=[s.UZERO,s.UZERO];a=a.mul(d).add(h(e,0));let y=0;const x=64*(t-1>>6),b=x+(t-1&63)-63;do{a=f(a.add(i).add(o[0]).add(h(e,y+8)),37).mul(l),i=f(i.add(o[1]).add(h(e,y+48)),42).mul(l),a=a.xor(c[1]),i=i.add(o[0]).add(h(e,y+40)),r=f(r.add(c[0]),33).mul(l),o=v(e,y,o[1].mul(l),a.add(c[0])),c=v(e,y+32,r.add(c[1]),i.add(h(e,y+16))),[r,a]=[a,r],y+=64}while(y!==x);const w=l.add(r.and(255).shl(1));return y=b,c[0]=c[0].add(t-1&63),o[0]=o[0].add(c[0]),c[0]=c[0].add(o[0]),a=f(a.add(i).add(o[0]).add(h(e,y+8)),37).mul(w),i=f(i.add(o[1]).add(h(e,y+48)),42).mul(w),a=a.xor(c[1].mul(9)),i=i.add(o[0].mul(9).add(h(e,y+40))),r=f(r.add(c[0]),33).mul(w),o=v(e,y,o[1].mul(w),a.add(c[0])),c=v(e,y+32,r.add(c[1]),i.add(h(e,y+16))),[r,a]=[a,r],g(g(o[0],c[0],w).add(u(i).mul(p)).add(r),g(o[1],c[1],w).add(a),w)}function x(e,t){return"string"===t?S(e):b([e],t)}function b(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=i.xH(e)),(0,a.OB)().getBool("DEBUG")&&i.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function w(){return(0,a.OB)().platform.now()}function _(e,t){return(0,a.OB)().platform.fetch(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,a.OB)().platform.encode(e,t)}function T(e,t="utf-8"){return t=t||"utf-8",(0,a.OB)().platform.decode(e,t)}},569:(e,t,n)=>{"use strict";function a(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function i(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,a=0;for(;n>0;)a=Math.random()*n|0,n--,o(e,n,a),o(t,n,a)}function r(e,t,n){return Math.max(e,Math.min(t,n))}function s(e){return e%2==0?e:e+1}function o(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function p(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function d(e,t){let n=0;for(let a=0;a<e.length;a++){const i=Number(e[a])-Number(t[a]);n+=i*i}return n}function u(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function c(e,t,n=""){u(v(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function h(e){u(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function m(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||k(e)&&!n)for(let a=0;a<e.length;++a)m(e[a],t,n);else t.push(e);return t}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function g(e){return 0===e.length}function v(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function y(e){return e%1==0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function b(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return a(t),t}function _(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e,t=(e=>0),n){return new Promise(((a,i)=>{let r=0;const s=()=>{if(e())return void a();r++;const o=t(r);null!=n&&r>=n?i():setTimeout(s,o)};s()}))}function T(e,t){let n=1,a=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==a)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${t}`);a=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===a){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const i=e.slice();return i[a]=t/n,i}function E(e,t){const n=t.length;return u((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),u(e.every((e=>y(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function M(e,t){const n=[],a=[],i=null!=t&&Array.isArray(t)&&0===t.length,r=null==t||i?null:E(t,e).sort();let s=0;for(let t=0;t<e.length;++t){if(null!=r){if(r[s]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==r[s]||r[s]>t)&&1===e[t]&&(n.push(e[t]),a.push(t)),r[s]<=t&&s++}1!==e[t]&&(n.push(e[t]),a.push(t))}return{newShape:n,keptDims:a}}function N(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function A(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}function I(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function R(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function k(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function D(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function P(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function L(e){return"string"==typeof e||e instanceof String}function O(e){return"boolean"==typeof e}function B(e){return"number"==typeof e}function F(e){return Array.isArray(e)?F(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":B(e)?"float32":L(e)?"string":O(e)?"bool":"float32"}function $(e){return!!(e&&e.constructor&&e.call&&e.apply)}function V(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function z(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function U(e,t,n,a=!1){const i=new Array;if(1===t.length){const r=t[0]*(a?2:1);for(let t=0;t<r;t++)i[t]=n[e+t]}else{const r=t[0],s=t.slice(1),o=s.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<r;t++)i[t]=U(e+t*o,s,n,a)}return i}function G(e,t,n=!1){if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return U(0,e,t,n)}function W(e,t){const n=H(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function q(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return G(e,new Float32Array(n));if("int32"===t)return G(e,new Int32Array(n));if("bool"===t)return G(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function j(e){e.forEach((t=>{u(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function X(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let t=0;t<e.length-1;++t)a+=n[t]*e[t];return a}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let t=0;t<a.length-1;++t)a[t]=Math.floor(e/n[t]),e-=a[t]*n[t];return a[a.length-1]=e,a}function Y(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{TV:()=>a,d7:()=>i,uZ:()=>r,nY:()=>s,LF:()=>o,Sm:()=>p,bj:()=>l,E7:()=>d,hu:()=>u,k5:()=>c,Cq:()=>h,xH:()=>m,NA:()=>f,N9:()=>g,cO:()=>v,GN:()=>y,AE:()=>x,YP:()=>b,U$:()=>w,oj:()=>_,WD:()=>S,JZ:()=>T,EC:()=>E,bp:()=>M,WP:()=>N,rQ:()=>C,D5:()=>A,LP:()=>I,QB:()=>R,fU:()=>k,bT:()=>D,Ub:()=>P,HD:()=>L,jn:()=>O,hj:()=>B,D2:()=>F,mf:()=>$,jP:()=>V,e3:()=>z,GX:()=>G,p8:()=>W,wT:()=>H,l6:()=>q,Mu:()=>j,qy:()=>X,NE:()=>K,tI:()=>Y})},3129:(e,t,n)=>{var a=n(626),i=n(477),r=n(2868),s=n(8197),o=n(1954),p=n(2408),l=n(1662);l.alea=a,l.xor128=i,l.xorwow=r,l.xorshift7=s,l.xor4096=o,l.tychei=p,e.exports=l},626:function(e,t,n){var a;!function(e,i,r){function s(e){var t,n=this,a=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));a-=t=a>>>0,t=(a*=t)>>>0,t+=4294967296*(a-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=a(" "),n.s1=a(" "),n.s2=a(" "),n.s0-=a(e),n.s0<0&&(n.s0+=1),n.s1-=a(e),n.s1<0&&(n.s1+=1),n.s2-=a(e),n.s2<0&&(n.s2+=1),a=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function p(e,t){var n=new s(e),a=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,a&&("object"==typeof a&&o(a,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=p:n.amdD&&n.amdO?void 0===(a=function(){return p}.call(t,n,t,i))||(i.exports=a):this.alea=p}(0,e=n.nmd(e),n.amdD)},2408:function(e,t,n){var a;!function(e,i,r){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,i=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^i,i=i-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^i,t.a=i-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function p(e,t){var n=new s(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&o(a,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=p:n.amdD&&n.amdO?void 0===(a=function(){return p}.call(t,n,t,i))||(i.exports=a):this.tychei=p}(0,e=n.nmd(e),n.amdD)},477:function(e,t,n){var a;!function(e,i,r){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function p(e,t){var n=new s(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&o(a,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=p:n.amdD&&n.amdO?void 0===(a=function(){return p}.call(t,n,t,i))||(i.exports=a):this.xor128=p}(0,e=n.nmd(e),n.amdD)},1954:function(e,t,n){var a;!function(e,i,r){function s(e){var t=this;t.next=function(){var e,n,a=t.w,i=t.X,r=t.i;return t.w=a=a+1640531527|0,n=i[r+34&127],e=i[r=r+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=i[r]=n^e,t.i=r,n+(a^a>>>16)|0},function(e,t){var n,a,i,r,s,o=[],p=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,p=Math.max(p,t.length)),i=0,r=-32;r<p;++r)t&&(a^=t.charCodeAt((r+32)%t.length)),0===r&&(s=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,r>=0&&(s=s+1640531527|0,i=0==(n=o[127&r]^=a+s)?i+1:0);for(i>=128&&(o[127&(t&&t.length||0)]=-1),i=127,r=512;r>0;--r)a=o[i+34&127],n=o[i=i+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,o[i]=a^n;e.w=s,e.X=o,e.i=i}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function p(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,a&&(a.X&&o(a,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=p:n.amdD&&n.amdO?void 0===(a=function(){return p}.call(t,n,t,i))||(i.exports=a):this.xor4096=p}(0,e=n.nmd(e),n.amdD)},8197:function(e,t,n){var a;!function(e,i,r){function s(e){var t=this;t.next=function(){var e,n,a=t.x,i=t.i;return e=a[i],n=(e^=e>>>7)^e<<24,n^=(e=a[i+1&7])^e>>>10,n^=(e=a[i+3&7])^e>>>3,n^=(e=a[i+4&7])^e<<7,e=a[i+7&7],n^=(e^=e<<13)^e<<9,a[i]=n,t.i=i+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function p(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,a&&(a.x&&o(a,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=p:n.amdD&&n.amdO?void 0===(a=function(){return p}.call(t,n,t,i))||(i.exports=a):this.xorshift7=p}(0,e=n.nmd(e),n.amdD)},2868:function(e,t,n){var a;!function(e,i,r){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function p(e,t){var n=new s(e),a=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&o(a,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=p:n.amdD&&n.amdO?void 0===(a=function(){return p}.call(t,n,t,i))||(i.exports=a):this.xorwow=p}(0,e=n.nmd(e),n.amdD)},1662:(e,t,n)=>{var a;!function(i,r){var s,o=this,p=256,l=r.pow(p,6),d=r.pow(2,52),u=2*d,c=255;function h(e,t,n){var a=[],c=v(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(i)]:null==e?function(){try{var e;return s&&(e=s.randomBytes)?e=e(p):(e=new Uint8Array(p),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(i)]}}():e,3),a),h=new m(a),x=function(){for(var e=h.g(6),t=l,n=0;e<d;)e=(e+n)*p,t*=p,n=h.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|h.g(4)},x.quick=function(){return h.g(4)/4294967296},x.double=x,v(y(h.S),i),(t.pass||n||function(e,t,n,a){return a&&(a.S&&f(a,h),e.state=function(){return f(h,{})}),n?(r.random=e,t):e})(x,c,"global"in t?t.global:this==r,t.state)}function m(e){var t,n=e.length,a=this,i=0,r=a.i=a.j=0,s=a.S=[];for(n||(e=[n++]);i<p;)s[i]=i++;for(i=0;i<p;i++)s[i]=s[r=c&r+e[i%n]+(t=s[i])],s[r]=t;(a.g=function(e){for(var t,n=0,i=a.i,r=a.j,s=a.S;e--;)t=s[i=c&i+1],n=n*p+s[c&(s[i]=s[r=c&r+t])+(s[r]=t)];return a.i=i,a.j=r,n})(p)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],i=typeof e;if(t&&"object"==i)for(n in e)try{a.push(g(e[n],t-1))}catch(e){}return a.length?a:"string"==i?e:e+"\0"}function v(e,t){for(var n,a=e+"",i=0;i<a.length;)t[c&i]=c&(n^=19*t[c&i])+a.charCodeAt(i++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(r.seedrandom=h,v(r.random(),i),e.exports){e.exports=h;try{s=n(6113)}catch(e){}}else void 0===(a=function(){return h}.call(t,n,t,e))||(e.exports=a)}([],Math)},3720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var i={},r={};function s(e,t){var n,a,s;return t?(s=0<=(e>>>=0)&&e<256)&&(a=r[e])?a:(n=p(e,(0|e)<0?-1:0,!0),s&&(r[e]=n),n):(s=-128<=(e|=0)&&e<128)&&(a=i[e])?a:(n=p(e,e<0?-1:0,!1),s&&(i[e]=n),n)}function o(e,t){if(isNaN(e))return t?v:g;if(t){if(e<0)return v;if(e>=h)return _}else{if(e<=-m)return S;if(e+1>=m)return w}return e<0?o(-e,t).neg():p(e%c|0,e/c|0,t)}function p(e,t,a){return new n(e,t,a)}n.fromInt=s,n.fromNumber=o,n.fromBits=p;var l=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return d(e.substring(1),t,n).neg();for(var i=o(l(n,8)),r=g,s=0;s<e.length;s+=8){var p=Math.min(8,e.length-s),u=parseInt(e.substring(s,s+p),n);if(p<8){var c=o(l(n,p));r=r.mul(c).add(o(u))}else r=(r=r.mul(i)).add(o(u))}return r.unsigned=t,r}function u(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?d(e,t):p(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=d,n.fromValue=u;var c=4294967296,h=c*c,m=h/2,f=s(1<<24),g=s(0);n.ZERO=g;var v=s(0,!0);n.UZERO=v;var y=s(1);n.ONE=y;var x=s(1,!0);n.UONE=x;var b=s(-1);n.NEG_ONE=b;var w=p(-1,2147483647,!1);n.MAX_VALUE=w;var _=p(-1,-1,!0);n.MAX_UNSIGNED_VALUE=_;var S=p(0,-2147483648,!1);n.MIN_VALUE=S;var T=n.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*c+(this.low>>>0):this.high*c+(this.low>>>0)},T.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=o(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var i=o(l(e,6),this.unsigned),r=this,s="";;){var p=r.div(i),d=(r.sub(p.mul(i)).toInt()>>>0).toString(e);if((r=p).isZero())return d+s;for(;d.length<6;)d="0"+d;s=""+d+s}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return 1==(1&this.low)},T.isEven=function(){return 0==(1&this.low)},T.equals=function(e){return a(e)||(e=u(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},T.eq=T.equals,T.notEquals=function(e){return!this.eq(e)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(e){return this.comp(e)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(e){return this.comp(e)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(e){return this.comp(e)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(e){return this.comp(e)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(e){if(a(e)||(e=u(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(y)},T.neg=T.negate,T.add=function(e){a(e)||(e=u(e));var t=this.high>>>16,n=65535&this.high,i=this.low>>>16,r=65535&this.low,s=e.high>>>16,o=65535&e.high,l=e.low>>>16,d=0,c=0,h=0,m=0;return h+=(m+=r+(65535&e.low))>>>16,c+=(h+=i+l)>>>16,d+=(c+=n+o)>>>16,d+=t+s,p((h&=65535)<<16|(m&=65535),(d&=65535)<<16|(c&=65535),this.unsigned)},T.subtract=function(e){return a(e)||(e=u(e)),this.add(e.neg())},T.sub=T.subtract,T.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=u(e)),t)return p(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(f)&&e.lt(f))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,i=65535&this.high,r=this.low>>>16,s=65535&this.low,l=e.high>>>16,d=65535&e.high,c=e.low>>>16,h=65535&e.low,m=0,v=0,y=0,x=0;return y+=(x+=s*h)>>>16,v+=(y+=r*h)>>>16,y&=65535,v+=(y+=s*c)>>>16,m+=(v+=i*h)>>>16,v&=65535,m+=(v+=r*c)>>>16,v&=65535,m+=(v+=s*d)>>>16,m+=n*h+i*c+r*d+s*l,p((y&=65535)<<16|(x&=65535),(m&=65535)<<16|(v&=65535),this.unsigned)},T.mul=T.multiply,T.divide=function(e){if(a(e)||(e=u(e)),e.isZero())throw Error("division by zero");var n,i,r;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?p((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?v:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return v;if(e.gt(this.shru(1)))return x;r=v}else{if(this.eq(S))return e.eq(y)||e.eq(b)?S:e.eq(S)?y:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?y:b:(i=this.sub(e.mul(n)),r=n.add(i.div(e)));if(e.eq(S))return this.unsigned?v:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=g}for(i=this;i.gte(e);){n=Math.max(1,Math.floor(i.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(n)/Math.LN2),d=s<=48?1:l(2,s-48),c=o(n),h=c.mul(e);h.isNegative()||h.gt(i);)h=(c=o(n-=d,this.unsigned)).mul(e);c.isZero()&&(c=y),r=r.add(c),i=i.sub(h)}return r},T.div=T.divide,T.modulo=function(e){return a(e)||(e=u(e)),t?p((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return p(~this.low,~this.high,this.unsigned)},T.and=function(e){return a(e)||(e=u(e)),p(this.low&e.low,this.high&e.high,this.unsigned)},T.or=function(e){return a(e)||(e=u(e)),p(this.low|e.low,this.high|e.high,this.unsigned)},T.xor=function(e){return a(e)||(e=u(e)),p(this.low^e.low,this.high^e.high,this.unsigned)},T.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?p(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):p(0,this.low<<e-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?p(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):p(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?p(this.low>>>e|t<<32-e,t>>>e,this.unsigned):p(32===e?t:t>>>e-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?p(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:p(this.low,this.high,!0)},T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},5658:(e,t,n)=>{"use strict";var a=n(5477),i=n(1907),r={TRANSITIONAL:0,NONTRANSITIONAL:1};function s(e){return e.split("\0").map((function(e){return e.normalize("NFC")})).join("\0")}function o(e){for(var t=0,n=i.length-1;t<=n;){var a=Math.floor((t+n)/2),r=i[a];if(r[0][0]<=e&&r[0][1]>=e)return r;r[0][0]>e?n=a-1:t=a+1}return null}var p=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function l(e){return e.replace(p,"_").length}var d=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function u(e,t){"xn--"===e.substr(0,4)&&(e=a.toUnicode(e));var n=!1;(s(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(d))&&(n=!0);for(var i=l(e),p=0;p<i;++p){var u=o(e.codePointAt(p));if(c===r.TRANSITIONAL&&"valid"!==u[1]||c===r.NONTRANSITIONAL&&"valid"!==u[1]&&"deviation"!==u[1]){n=!0;break}}return{label:e,error:n}}function c(e,t,n){var a=function(e,t,n){for(var a=!1,i="",s=l(e),p=0;p<s;++p){var d=e.codePointAt(p),u=o(d);switch(u[1]){case"disallowed":a=!0,i+=String.fromCodePoint(d);break;case"ignored":break;case"mapped":i+=String.fromCodePoint.apply(String,u[2]);break;case"deviation":i+=n===r.TRANSITIONAL?String.fromCodePoint.apply(String,u[2]):String.fromCodePoint(d);break;case"valid":i+=String.fromCodePoint(d);break;case"disallowed_STD3_mapped":t?(a=!0,i+=String.fromCodePoint(d)):i+=String.fromCodePoint.apply(String,u[2]);break;case"disallowed_STD3_valid":t&&(a=!0),i+=String.fromCodePoint(d)}}return{string:i,error:a}}(e,t,n);a.string=s(a.string);for(var i=a.string.split("."),p=0;p<i.length;++p)try{var d=u(i[p]);i[p]=d.label,a.error=a.error||d.error}catch(e){a.error=!0}return{string:i.join("."),error:a.error}}e.exports.toASCII=function(e,t,n,i){var r=c(e,t,n),s=r.string.split(".");if(s=s.map((function(e){try{return a.toASCII(e)}catch(t){return r.error=!0,e}})),i){var o=s.slice(0,s.length-1).join(".").length;(o.length>253||0===o.length)&&(r.error=!0);for(var p=0;p<s.length;++p)if(s.length>63||0===s.length){r.error=!0;break}}return r.error?null:s.join(".")},e.exports.toUnicode=function(e,t){var n=c(e,t,r.NONTRANSITIONAL);return{domain:n.string,error:n.error}},e.exports.PROCESSING_OPTIONS=r},8808:e=>{"use strict";var t={};function n(e){return e<0?-1:1}function a(e,t){t.unsigned||--e;const a=t.unsigned?0:-Math.pow(2,e),i=Math.pow(2,e)-1,r=t.moduloBitLength?Math.pow(2,t.moduloBitLength):Math.pow(2,e),s=t.moduloBitLength?Math.pow(2,t.moduloBitLength-1):Math.pow(2,e-1);return function(e,o){o||(o={});let p=+e;if(o.enforceRange){if(!Number.isFinite(p))throw new TypeError("Argument is not a finite number");if(p=n(p)*Math.floor(Math.abs(p)),p<a||p>i)throw new TypeError("Argument is not in byte range");return p}if(!isNaN(p)&&o.clamp)return p=function(e){return e%1==.5&&0==(1&e)?Math.floor(e):Math.round(e)}(p),p<a&&(p=a),p>i&&(p=i),p;if(!Number.isFinite(p)||0===p)return 0;if(p=n(p)*Math.floor(Math.abs(p)),p%=r,!t.unsigned&&p>=s)return p-r;if(t.unsigned)if(p<0)p+=r;else if(-0===p)return 0;return p}}e.exports=t,t.void=function(){},t.boolean=function(e){return!!e},t.byte=a(8,{unsigned:!1}),t.octet=a(8,{unsigned:!0}),t.short=a(16,{unsigned:!1}),t["unsigned short"]=a(16,{unsigned:!0}),t.long=a(32,{unsigned:!1}),t["unsigned long"]=a(32,{unsigned:!0}),t["long long"]=a(32,{unsigned:!1,moduloBitLength:64}),t["unsigned long long"]=a(32,{unsigned:!0,moduloBitLength:64}),t.double=function(e){const t=+e;if(!Number.isFinite(t))throw new TypeError("Argument is not a finite floating-point value");return t},t["unrestricted double"]=function(e){const t=+e;if(isNaN(t))throw new TypeError("Argument is NaN");return t},t.float=t.double,t["unrestricted float"]=t["unrestricted double"],t.DOMString=function(e,t){return t||(t={}),t.treatNullAsEmptyString&&null===e?"":String(e)},t.ByteString=function(e,t){const n=String(e);let a;for(let e=0;void 0!==(a=n.codePointAt(e));++e)if(a>255)throw new TypeError("Argument is not a valid bytestring");return n},t.USVString=function(e){const t=String(e),n=t.length,a=[];for(let e=0;e<n;++e){const i=t.charCodeAt(e);if(i<55296||i>57343)a.push(String.fromCodePoint(i));else if(56320<=i&&i<=57343)a.push(String.fromCodePoint(65533));else if(e===n-1)a.push(String.fromCodePoint(65533));else{const n=t.charCodeAt(e+1);if(56320<=n&&n<=57343){const t=1023&i,r=1023&n;a.push(String.fromCodePoint(65536+1024*t+r)),++e}else a.push(String.fromCodePoint(65533))}}return a.join("")},t.Date=function(e,t){if(!(e instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(e))return e},t.RegExp=function(e,t){return e instanceof RegExp||(e=new RegExp(e)),e}},1167:(e,t,n)=>{"use strict";const a=n(24);t.implementation=class{constructor(e){const t=e[0],n=e[1];let i=null;if(void 0!==n&&(i=a.basicURLParse(n),"failure"===i))throw new TypeError("Invalid base URL");const r=a.basicURLParse(t,{baseURL:i});if("failure"===r)throw new TypeError("Invalid URL");this._url=r}get href(){return a.serializeURL(this._url)}set href(e){const t=a.basicURLParse(e);if("failure"===t)throw new TypeError("Invalid URL");this._url=t}get origin(){return a.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){a.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){a.cannotHaveAUsernamePasswordPort(this._url)||a.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){a.cannotHaveAUsernamePasswordPort(this._url)||a.setThePassword(this._url,e)}get host(){const e=this._url;return null===e.host?"":null===e.port?a.serializeHost(e.host):a.serializeHost(e.host)+":"+a.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||a.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":a.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||a.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":a.serializeInteger(this._url.port)}set port(e){a.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:a.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],a.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){const t=this._url;if(""===e)return void(t.query=null);const n="?"===e[0]?e.substring(1):e;t.query="",a.basicURLParse(n,{url:t,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e)return void(this._url.fragment=null);const t="#"===e[0]?e.substring(1):e;this._url.fragment="",a.basicURLParse(t,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},9221:(e,t,n)=>{"use strict";const a=n(8808),i=n(2625),r=n(1167),s=i.implSymbol;function o(t){if(!this||this[s]||!(this instanceof o))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");const n=[];for(let e=0;e<arguments.length&&e<2;++e)n[e]=arguments[e];n[0]=a.USVString(n[0]),void 0!==n[1]&&(n[1]=a.USVString(n[1])),e.exports.setup(this,n)}o.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");const t=[];for(let e=0;e<arguments.length&&e<0;++e)t[e]=arguments[e];return this[s].toJSON.apply(this[s],t)},Object.defineProperty(o.prototype,"href",{get(){return this[s].href},set(e){e=a.USVString(e),this[s].href=e},enumerable:!0,configurable:!0}),o.prototype.toString=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");return this.href},Object.defineProperty(o.prototype,"origin",{get(){return this[s].origin},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"protocol",{get(){return this[s].protocol},set(e){e=a.USVString(e),this[s].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"username",{get(){return this[s].username},set(e){e=a.USVString(e),this[s].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"password",{get(){return this[s].password},set(e){e=a.USVString(e),this[s].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"host",{get(){return this[s].host},set(e){e=a.USVString(e),this[s].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"hostname",{get(){return this[s].hostname},set(e){e=a.USVString(e),this[s].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"port",{get(){return this[s].port},set(e){e=a.USVString(e),this[s].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"pathname",{get(){return this[s].pathname},set(e){e=a.USVString(e),this[s].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"search",{get(){return this[s].search},set(e){e=a.USVString(e),this[s].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"hash",{get(){return this[s].hash},set(e){e=a.USVString(e),this[s].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[s]instanceof r.implementation,create(e,t){let n=Object.create(o.prototype);return this.setup(n,e,t),n},setup(e,t,n){n||(n={}),n.wrapper=e,e[s]=new r.implementation(t,n),e[s][i.wrapperSymbol]=e},interface:o,expose:{Window:{URL:o},Worker:{URL:o}}}},4831:(e,t,n)=>{"use strict";t.URL=n(9221).interface,n(24).serializeURL,n(24).serializeURLOrigin,n(24).basicURLParse,n(24).setTheUsername,n(24).setThePassword,n(24).serializeHost,n(24).serializeInteger,n(24).parseURL},24:(e,t,n)=>{"use strict";const a=n(5477),i=n(5658),r={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},s=Symbol("failure");function o(e){return a.ucs2.decode(e).length}function p(e,t){const n=e[t];return isNaN(n)?void 0:String.fromCodePoint(n)}function l(e){return e>=48&&e<=57}function d(e){return e>=65&&e<=90||e>=97&&e<=122}function u(e){return l(e)||e>=65&&e<=70||e>=97&&e<=102}function c(e){return"."===e||"%2e"===e.toLowerCase()}function h(e){return 2===e.length&&d(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function m(e){return void 0!==r[e]}function f(e){return m(e.scheme)}function g(e){let t=e.toString(16).toUpperCase();return 1===t.length&&(t="0"+t),"%"+t}function v(e){return e<=31||e>126}const y=new Set([32,34,35,60,62,63,96,123,125]);function x(e){return v(e)||y.has(e)}const b=new Set([47,58,59,61,64,91,92,93,94,124]);function w(e){return x(e)||b.has(e)}function _(e,t){const n=String.fromCodePoint(e);return t(e)?function(e){const t=new Buffer(e);let n="";for(let e=0;e<t.length;++e)n+=g(t[e]);return n}(n):n}function S(e){let t=10;return e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),t=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),t=8),""===e?0:(10===t?/[^0-9]/:16===t?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?s:parseInt(e,t)}function T(e,t){if("["===e[0])return"]"!==e[e.length-1]?s:function(e){const t=[0,0,0,0,0,0,0,0];let n=0,i=null,r=0;if(58===(e=a.ucs2.decode(e))[r]){if(58!==e[r+1])return s;r+=2,++n,i=n}for(;r<e.length;){if(8===n)return s;if(58===e[r]){if(null!==i)return s;++r,++n,i=n;continue}let a=0,o=0;for(;o<4&&u(e[r]);)a=16*a+parseInt(p(e,r),16),++r,++o;if(46===e[r]){if(0===o)return s;if(r-=o,n>6)return s;let a=0;for(;void 0!==e[r];){let i=null;if(a>0){if(!(46===e[r]&&a<4))return s;++r}if(!l(e[r]))return s;for(;l(e[r]);){const t=parseInt(p(e,r));if(null===i)i=t;else{if(0===i)return s;i=10*i+t}if(i>255)return s;++r}t[n]=256*t[n]+i,++a,2!==a&&4!==a||++n}if(4!==a)return s;break}if(58===e[r]){if(++r,void 0===e[r])return s}else if(void 0!==e[r])return s;t[n]=a,++n}if(null!==i){let e=n-i;for(n=7;0!==n&&e>0;){const a=t[i+e-1];t[i+e-1]=t[n],t[n]=a,--n,--e}}else if(null===i&&8!==n)return s;return t}(e.substring(1,e.length-1));if(!t)return function(e){if(-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/))return s;let t="";const n=a.ucs2.decode(e);for(let e=0;e<n.length;++e)t+=_(n[e],v);return t}(e);const n=function(e){const t=new Buffer(e),n=[];for(let e=0;e<t.length;++e)37!==t[e]?n.push(t[e]):37===t[e]&&u(t[e+1])&&u(t[e+2])?(n.push(parseInt(t.slice(e+1,e+3).toString(),16)),e+=2):n.push(t[e]);return new Buffer(n).toString()}(e),r=i.toASCII(n,!1,i.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(null===r)return s;if(-1!==r.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/))return s;const o=function(e){const t=e.split(".");if(""===t[t.length-1]&&t.length>1&&t.pop(),t.length>4)return e;const n=[];for(const a of t){if(""===a)return e;const t=S(a);if(t===s)return e;n.push(t)}for(let e=0;e<n.length-1;++e)if(n[e]>255)return s;if(n[n.length-1]>=Math.pow(256,5-n.length))return s;let a=n.pop(),i=0;for(const e of n)a+=e*Math.pow(256,3-i),++i;return a}(r);return"number"==typeof o||o===s?o:r}function E(e){return"number"==typeof e?function(e){let t="",n=e;for(let e=1;e<=4;++e)t=String(n%256)+t,4!==e&&(t="."+t),n=Math.floor(n/256);return t}(e):e instanceof Array?"["+function(e){let t="";const n=function(e){let t=null,n=1,a=null,i=0;for(let r=0;r<e.length;++r)0!==e[r]?(i>n&&(t=a,n=i),a=null,i=0):(null===a&&(a=r),++i);return i>n&&(t=a,n=i),{idx:t,len:n}}(e).idx;let a=!1;for(let i=0;i<=7;++i)a&&0===e[i]||(a&&(a=!1),n!==i?(t+=e[i].toString(16),7!==i&&(t+=":")):(t+=0===i?"::":":",a=!0));return t}(e)+"]":e}function M(e){const t=e.path;var n;0!==t.length&&("file"===e.scheme&&1===t.length&&(n=t[0],/^[A-Za-z]:$/.test(n))||t.pop())}function N(e){return""!==e.username||""!==e.password}function C(e,t,n,i,r){if(this.pointer=0,this.input=e,this.base=t||null,this.encodingOverride=n||"utf-8",this.stateOverride=r,this.url=i,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};const e=function(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}(this.input);e!==this.input&&(this.parseError=!0),this.input=e}const o=function(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}(this.input);for(o!==this.input&&(this.parseError=!0),this.input=o,this.state=r||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=a.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer],t=isNaN(e)?void 0:String.fromCodePoint(e),n=this["parse "+this.state](e,t);if(!n)break;if(n===s){this.failure=!0;break}}}C.prototype["parse scheme start"]=function(e,t){if(d(e))this.buffer+=t.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,s;this.state="no scheme",--this.pointer}return!0},C.prototype["parse scheme"]=function(e,t){if(function(e){return d(e)||l(e)}(e)||43===e||45===e||46===e)this.buffer+=t.toLowerCase();else if(58===e){if(this.stateOverride){if(f(this.url)&&!m(this.buffer))return!1;if(!f(this.url)&&m(this.buffer))return!1;if((N(this.url)||null!==this.url.port)&&"file"===this.buffer)return!1;if("file"===this.url.scheme&&(""===this.url.host||null===this.url.host))return!1}if(this.url.scheme=this.buffer,this.buffer="",this.stateOverride)return!1;"file"===this.url.scheme?(47===this.input[this.pointer+1]&&47===this.input[this.pointer+2]||(this.parseError=!0),this.state="file"):f(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":f(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,s;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},C.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?s:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):"file"===this.base.scheme?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)},C.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},C.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},C.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):f(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},C.prototype["parse relative slash"]=function(e){return!f(this.url)||47!==e&&92!==e?47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer):(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"),!0},C.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},C.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},C.prototype["parse authority"]=function(e,t){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;const e=o(this.buffer);for(let t=0;t<e;++t){const e=this.buffer.codePointAt(t);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}const n=_(e,w);this.passwordTokenSeenFlag?this.url.password+=n:this.url.username+=n}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,s;this.pointer-=o(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=t;return!0},C.prototype["parse hostname"]=C.prototype["parse host"]=function(e,t){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag)if(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e){if(--this.pointer,f(this.url)&&""===this.buffer)return this.parseError=!0,s;if(this.stateOverride&&""===this.buffer&&(N(this.url)||null!==this.url.port))return this.parseError=!0,!1;const e=T(this.buffer,f(this.url));if(e===s)return s;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=t;else{if(""===this.buffer)return this.parseError=!0,s;const e=T(this.buffer,f(this.url));if(e===s)return s;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},C.prototype["parse port"]=function(e,t){if(l(e))this.buffer+=t;else{if(!(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e||this.stateOverride))return this.parseError=!0,s;if(""!==this.buffer){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1)return this.parseError=!0,s;this.url.port=e===(n=this.url.scheme,r[n])?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}var n;return!0};const A=new Set([47,92,63,35]);C.prototype["parse file"]=function(e){var t,n;return this.url.scheme="file",47===e||92===e?(92===e&&(this.parseError=!0),this.state="file slash"):null!==this.base&&"file"===this.base.scheme?isNaN(e)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):63===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1==0||(t=e,n=this.input[this.pointer+1],!d(t)||58!==n&&124!==n)||this.input.length-this.pointer-1>=2&&!A.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),M(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0},C.prototype["parse file slash"]=function(e){var t;return 47===e||92===e?(92===e&&(this.parseError=!0),this.state="file host"):(null!==this.base&&"file"===this.base.scheme&&(2===(t=this.base.path[0]).length&&d(t.codePointAt(0))&&":"===t[1]?this.url.path.push(this.base.path[0]):this.url.host=this.base.host),this.state="path",--this.pointer),!0},C.prototype["parse file host"]=function(e,t){if(isNaN(e)||47===e||92===e||63===e||35===e)if(--this.pointer,!this.stateOverride&&h(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=T(this.buffer,f(this.url));if(e===s)return s;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=t;return!0},C.prototype["parse path start"]=function(e){return f(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},C.prototype["parse path"]=function(e){if(isNaN(e)||47===e||f(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){if(f(this.url)&&92===e&&(this.parseError=!0),".."===(t=(t=this.buffer).toLowerCase())||"%2e."===t||".%2e"===t||"%2e%2e"===t?(M(this.url),47===e||f(this.url)&&92===e||this.url.path.push("")):!c(this.buffer)||47===e||f(this.url)&&92===e?c(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&h(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)):this.url.path.push(""),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||u(this.input[this.pointer+1])&&u(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=_(e,x);var t;return!0},C.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||u(this.input[this.pointer+1])&&u(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+_(e,v))),!0},C.prototype["parse query"]=function(e,t){if(isNaN(e)||!this.stateOverride&&35===e){f(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");const t=new Buffer(this.buffer);for(let e=0;e<t.length;++e)t[e]<33||t[e]>126||34===t[e]||35===t[e]||60===t[e]||62===t[e]?this.url.query+=g(t[e]):this.url.query+=String.fromCodePoint(t[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||u(this.input[this.pointer+1])&&u(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=t;return!0},C.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||u(this.input[this.pointer+1])&&u(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=_(e,v))),!0},e.exports.serializeURL=function(e,t){let n=e.scheme+":";if(null!==e.host?(n+="//",""===e.username&&""===e.password||(n+=e.username,""!==e.password&&(n+=":"+e.password),n+="@"),n+=E(e.host),null!==e.port&&(n+=":"+e.port)):null===e.host&&"file"===e.scheme&&(n+="//"),e.cannotBeABaseURL)n+=e.path[0];else for(const t of e.path)n+="/"+t;return null!==e.query&&(n+="?"+e.query),t||null===e.fragment||(n+="#"+e.fragment),n},e.exports.serializeURLOrigin=function(t){switch(t.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(t.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return function(e){let t=e.scheme+"://";return t+=E(e.host),null!==e.port&&(t+=":"+e.port),t}({scheme:t.scheme,host:t.host,port:t.port});case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,t){void 0===t&&(t={});const n=new C(e,t.baseURL,t.encodingOverride,t.url,t.stateOverride);return n.failure?"failure":n.url},e.exports.setTheUsername=function(e,t){e.username="";const n=a.ucs2.decode(t);for(let t=0;t<n.length;++t)e.username+=_(n[t],w)},e.exports.setThePassword=function(e,t){e.password="";const n=a.ucs2.decode(t);for(let t=0;t<n.length;++t)e.password+=_(n[t],w)},e.exports.serializeHost=E,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(t,n){return void 0===n&&(n={}),e.exports.basicURLParse(t,{baseURL:n.baseURL,encodingOverride:n.encodingOverride})}},2625:e=>{"use strict";e.exports.mixin=function(e,t){const n=Object.getOwnPropertyNames(t);for(let a=0;a<n.length;++a)Object.defineProperty(e,n[a],Object.getOwnPropertyDescriptor(t,n[a]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(t){return t[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(t){return t[e.exports.implSymbol]}},4155:(e,t,n)=>{"use strict";n.d(t,{q:()=>i});var a=n(8593);class i{callee;name;id=(0,a.iu)();slots={};label;description;execute;ending;next;constructor(e,t,n,a,i){if(this.callee=e,this.name=t,this.label=a||t,this.description=i||`${this.label}-desc`,this.execute=n||e.instance[t],!this.execute)throw new Error(`${this.name} is not found`)}born(){const e=Object.fromEntries(Object.entries(this.slots).map((([e,t])=>[e,(0,a.x3)(t)]))),t={},n=Object.entries(this.slots);for(let e=0;e<n.length;e++){const[a,i]=n[e];if(!i.data)break;t[a]=!0}Object.fromEntries(Object.entries(this.slots).map((([e,t])=>[e,!!t.data])));const{execute:i}=this;return{callee:this.callee.instance,next:this.next?.born(),slots:e,execute:async function(e,n){const r=Object.fromEntries(await Promise.all(Object.entries(this.slots).map((async([i,r])=>[i,t[i]?await(0,a.GU)(r,e,n):r]))));return await i.call(this.callee,r,n)}}}attach(e){if(this.next)throw new Error(`${this.name} already has next block`);this.next=e}dettach(){const e=this.next;return this.next=void 0,e}}},1621:(e,t,n)=>{"use strict";var a;n.d(t,{L:()=>a}),function(e){e.egg="9E8B8E0E-B7B2-4E8E-8A0A-D6E7A9C9D8C0",e.logic="9E8B8E0E-B7B2-4E8E-8A0A-D6E7A9C9D8C1",e.math="9E8B8E0E-B7B2-4E8E-8A0A-D6E7A9C9D8C2",e.storage="9E8B8E0E-B7B2-4E8E-8A0A-D6E7A9C9D8C3",e.timer="9E8B8E0E-B7B2-4E8E-8A0A-D6E7A9C9D8C4",e.screen="9E8B8E0E-B7B2-4E8E-8A0A-D6E7A9C9D8C5",e.camera="9E8B8E0E-B7B2-4E8E-8A0A-D6E7A9C9D8C6",e.speech="9E8B8E0E-B7B2-4E8E-8A0A-D6E7A9C9D8C7",e.gesture="9E8B8E0E-B7B2-4E8E-8A0A-D6E7A9C9D8C8",e.test="9E8B8E0E-B7B2-4E8E-8A0A-D6E7A9C9D8CA",e.scene="9E8B8E0E-B7B2-4E8E-8A0A-D6E7A9C9D8CB",e.pose="9E8B8E0E-B7B2-4E8E-8A0A-D6E7A9C9D8CC",e.box="9E8B8E0E-B7B2-4E8E-A801-000000000001",e.sphere="9E8B8E0E-B7B2-4E8E-A801-000000000002",e.plane="9E8B8E0E-B7B2-4E8E-A801-000000000003",e.text="9E8B8E0E-B7B2-4E8E-A801-000000000004",e.bulb="9E8B8E0E-B7B2-4E8E-A801-000000000005",e.cloth="9E8B8E0E-B7B2-4E8E-A801-000000000006"}(a||(a={}))},6697:(e,t,n)=>{"use strict";n.d(t,{K:()=>i,y:()=>r});var a=n(1356);class i extends a.b${constructor(e,t){super(e,t,e),delete this.actions.clone,delete this.actions.die,delete this.events.clone}}class r extends a.UP{clone(){throw new Error("Not allowed.")}}},9151:(e,t,n)=>{"use strict";var a=n(1621),i=n(8593),r=n(6697);r.y,a.L.storage,r.K;var s=n(1356);r.y,a.L.timer,r.K;class o extends s.T_{output={type:"number",name:".",label:"result",description:"result-desc"};constructor(e){if(super(h,e,void 0,`math.${e}`),!this.execute)throw`unknown math action: ${e}`}}class p extends s.T_{output={type:"boolean",name:".",label:"result",description:"result-desc"};constructor(e){if(super(h,e,void 0,`math.${e}`),!this.execute)throw`unknown math action: ${e}`}}class l extends o{slots={a:(0,i.ud)({name:"a",label:"math.operand.a",data:{type:"number"},required:!0}),b:(0,i.ud)({name:"b",label:"math.operand.b",data:{type:"number"},required:!0})}}class d extends p{slots={a:(0,i.ud)({name:"a",label:"math.operand.a",data:{type:"number"},required:!0}),b:(0,i.ud)({name:"b",label:"math.operand.b",data:{type:"number"},required:!0})}}class u extends s.UP{static type="virtual-device";static clsname="math";static clsid=a.L.math;uuid=a.L.math;clone(){throw new Error("Not allowed.")}add({a:e,b:t}){return e+t}sub({a:e,b:t}){return e-t}mul({a:e,b:t}){return e*t}div({a:e,b:t}){return e/t}mod({a:e,b:t}){return e%t}random({a:e,b:t}){return Math.floor(Math.random()*(t-e+1)+e)}not({a:e}){return!e}equal({a:e,b:t}){return e===t}greaterThen({a:e,b:t}){return e>t}greaterThenOrEqual({a:e,b:t}){return e>=t}lessThen({a:e,b:t}){return e>t}lessThenOrEqual({a:e,b:t}){return e<=t}}class c extends s.b${static runtime=u;constructor(e,t){super(e,t,e),this.actions={add:class extends l{constructor(){super("add"),this.slots.a.suffix="math.+"}},sub:class extends l{constructor(){super("sub"),this.slots.a.suffix="math.-"}},mul:class extends l{constructor(){super("mul"),this.slots.a.suffix="math.*"}},div:class extends l{constructor(){super("div"),this.slots.a.suffix="math./"}},mod:class extends l{constructor(){super("mod"),this.slots.a.suffix="math.%"}},random:class extends l{constructor(){super("random"),this.slots.a.prefix="from",this.slots.a.suffix="to"}},not:class extends p{slots={a:(0,i.ud)({name:"a",label:"math.operand.a",data:{type:"boolean"},required:!0,prefix:"math.!"})};constructor(){super("not")}},equal:class extends d{constructor(){super("equal"),this.slots.a.suffix="math.=="}},greaterThen:class extends d{constructor(){super("greaterThen"),this.slots.a.suffix="math.>"}},greaterThenOrEqual:class extends d{constructor(){super("greaterThenOrEqual"),this.slots.a.suffix="math.>="}},lessThen:class extends d{constructor(){super("lessThen"),this.slots.a.suffix="math.<"}},lessThenOrEqual:class extends d{constructor(){super("lessThenOrEqual"),this.slots.a.suffix="math.<="}}}}}const h=new c(null,new u);var m=n(4155);s.UP,a.L.logic,m.q,s.b$,m.q,s.UP,a.L.test,s.b$,a.L.egg},1356:(e,t,n)=>{"use strict";n.d(t,{T_:()=>r,yN:()=>s,UP:()=>o,b$:()=>p});var a=n(4155),i=n(8593);class r extends a.q{static type="action";output;constructor(e,t,n,a){super(e,t,n,a)}}class s extends a.q{static type="data";constructor(e,t,n,a){super(e,t,n,a)}}class o{parent;uuid;properties={};events={};children={};clonedCount=0;constructor(e,t){this.parent=t,this.uuid=e||(0,i.iu)()}get({name:e}){return this.properties[e]}set({name:e,value:t}){this.properties[e]=t}appendChild(e){if(this.children[e.uuid])throw new Error(`unit ${e.uuid} already exists`);e.parent=this,this.children[e.uuid]=e}removeChild(e){delete this.children[e.uuid]}async clone(){if(!this.parent)throw new Error("cannot clone root unit");this.clonedCount++;const e=new this.__proto__.constructor(void 0,this.parent,this);e.cloned=!0,Object.assign(e.properties,this.properties);const t=this.events.clone;return t.length&&(e.events.clone=t.map((t=>({filter:t.filter,blocks:(0,i.Wm)(t.blocks,this,e)})))),this.parent.appendChild(e),e.emit("clone",{}),e}async die(){this.parent&&(this.parent.removeChild(this),console.log(`${this.uuid} died`))}async emit(e,t){const n=this.events[e];n?.length&&await Promise.all(n.map((async n=>{if(!n.filter||t.name===n.filter)return await(0,i.GU)(n.blocks,{},{from:this,name:e,params:t})}))).catch((e=>{console.error(e)}))}static async create(e,t,n){return new this(e,t,n)}}class p{egg;instance;parent;properties={};actions={};events={};chains={};children={};constructor(e,t,n){this.egg=e,this.instance=t,this.parent=n;const a=this;this.actions={clone:class extends r{constructor(e){super(e,"clone")}},die:class extends r{constructor(e){super(e,"die")}},get:class extends s{slots={name:(0,i.ud)({name:"name",data:(0,i.QK)(a,{}),required:!0,suffix:"valueof"})};output={type:"unknown",name:".",label:"value",description:"value-desc"};constructor(e){super(e,"get")}},set:class extends r{slots={name:(0,i.ud)({name:"name",data:(0,i.QK)(a,{}),required:!0,suffix:"valueof"}),value:(0,i.ud)({name:"value",data:(0,i.FR)(a,this,{},"name"),required:!0,prefix:"tois"})};constructor(e){super(e,"set")}}},this.events={clone:(0,i.BU)({name:"clone"})}}get uuid(){return this.instance.uuid}get name(){return this.instance.constructor.clsname}appendChild(e){if(this.children[e.instance.uuid])throw new Error(`unit ${e.instance.uuid} already exists`);e.parent&&e.parent.removeChild(e),e.parent=this,this.children[e.instance.uuid]=e,this.instance.appendChild(e.instance)}removeChild(e){delete this.children[e.instance.uuid],this.instance.removeChild(e.instance)}createChain(e){const t={id:(0,i.iu)(),unit:this,head:e};if(this.chains[t.id])throw"duplicate chain";return this.chains[t.id]=t,t}removeChain(e){e.bound&&e.bound.unit.unbindEvent(e.bound.event,e),delete this.chains[e.id]}bindEvent(e,t,n){const a=this.events[e];if(!a)throw new Error(`event ${e} not found`);t.bound&&t.bound.unit.unbindEvent(t.bound.event,t),a.chains.push(t),t.bound={unit:this,event:e,filter:n}}unbindEvent(e,t){const n=this.events[e];if(!n)throw new Error(`event ${e} not found`);const a=n.chains.indexOf(t);-1!==a&&(n.chains.splice(a,1),t.bound=void 0)}appendBlock(e,t){if(e.head){let n=e.head;for(;n.next;)n=n.next;n.next=t}else e.head=t}removeBlock(e,t){if(e.head===t)e.head=t.next;else if(e.head){let n=e.head;for(;n.next!==t;)n=n.next;if(!n)throw new Error("block not found");n.next=t.next}t.next=void 0}findBlock(e,t){let n=e.head;for(;n;){if(n.id===t)return n;n=n.next}}clearChains(){Object.values(this.chains).forEach((e=>{this.removeChain(e)}))}clearEvents(){Object.values(this.events).forEach((e=>{e.chains.length=0}))}build(){(0,i._V)(this,this.instance);for(const e of Object.values(this.children))e.build();return this.instance}createAction(e){return new this.actions[e](this)}}},8593:(e,t,n)=>{"use strict";function a(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){const t=16*Math.random()|0;return("x"==e?t:3&t|8).toString(16)}))}function i(e){return{params:{},chains:[],label:e.name,description:`${e.name}-desc`,...e}}function r(e,t,n){return new Proxy({label:t.name,description:`${t.name}-desc`,type:"string",...t,default:e.get({name:t.name})},{get:(n,a,i)=>"value"===a?e.get({name:t.name}):Reflect.get(n,a,i),set(a,i,r,s){const o=Reflect.set(a,i,r,s);return o&&"value"===i&&(e.set({name:t.name,value:r}),n&&n(t.name,r)),o}})}function s(e,t,n){return new Proxy({type:"string",...t},{get:(t,a,i)=>"values"===a?n?n():Object.keys(e.properties):Reflect.get(t,a,i)})}function o(e,t,n){return new Proxy({type:"string",...t},{get:(t,a,i)=>"values"===a?n?n():Object.keys(e.properties):Reflect.get(t,a,i)})}function p(e,t,n,a){return new Proxy({...n},{get(n,i,r){if("type"===i){const n=t.slots[a];if(!n||"string"!==n.data?.type)return"unknown";const i=n.data?.value;return i&&e.properties[i]?.type||"unknown"}return Reflect.get(n,i,r)}})}function l(e,t){for(const[n,a]of Object.entries(e.events))t.events[n]=a.chains.map((e=>({filter:e.bound?.filter,blocks:e.head?.born()}))).filter((e=>e.blocks));return t}function d(e){return"string"==typeof e?{name:e,label:e,description:`${e}-desc`}:{label:e.name,description:`${e.name}-desc`,...e}}function u(e){if(e.block)return e.block.born();if(e.data){const t=e.data.value??e.data.default;if("unit"===e.data.type)return t?.instance??void 0;if(e.required&&void 0===t)throw new Error(`${e.name} is required`);return t}if(e.required)throw new Error(`${e.name} is required`)}async function c(e,t,n){let a;if(e?.execute){let i=e;for(;i;)a=await i.execute(t||{},n),i=i.next;return a}return e}function h(e,t,n){return e.execute?{callee:e.callee===t?n:e.callee,slots:Object.fromEntries(Object.entries(e.slots).map((([e,a])=>[e,h(a,t,n)]))),next:e.next?h(e.next,t,n):void 0,execute:e.execute}:e}n.d(t,{iu:()=>a,BU:()=>i,M5:()=>r,QK:()=>s,WX:()=>o,FR:()=>p,_V:()=>l,ud:()=>d,x3:()=>u,GU:()=>c,Wm:()=>h})},6113:e=>{"use strict";e.exports=require("crypto")},5477:e=>{"use strict";e.exports=require("punycode")},3837:e=>{"use strict";e.exports=require("util")},7085:(e,t,n)=>{"use strict";n.r(t),n.d(t,{FetchError:()=>h,Headers:()=>I,Request:()=>q,Response:()=>F,default:()=>Z});const a=require("stream"),i=require("http"),r=require("url");var s=n(4831);const o=require("https"),p=require("zlib"),l=a.Readable,d=Symbol("buffer"),u=Symbol("type");class c{constructor(){this[u]="";const e=arguments[0],t=arguments[1],n=[];let a=0;if(e){const t=e,i=Number(t.length);for(let e=0;e<i;e++){const i=t[e];let r;r=i instanceof Buffer?i:ArrayBuffer.isView(i)?Buffer.from(i.buffer,i.byteOffset,i.byteLength):i instanceof ArrayBuffer?Buffer.from(i):i instanceof c?i[d]:Buffer.from("string"==typeof i?i:String(i)),a+=r.length,n.push(r)}}this[d]=Buffer.concat(n);let i=t&&void 0!==t.type&&String(t.type).toLowerCase();i&&!/[^\u0020-\u007E]/.test(i)&&(this[u]=i)}get size(){return this[d].length}get type(){return this[u]}text(){return Promise.resolve(this[d].toString())}arrayBuffer(){const e=this[d],t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new l;return e._read=function(){},e.push(this[d]),e.push(null),e}toString(){return"[object Blob]"}slice(){const e=this.size,t=arguments[0],n=arguments[1];let a,i;a=void 0===t?0:t<0?Math.max(e+t,0):Math.min(t,e),i=void 0===n?e:n<0?Math.max(e+n,0):Math.min(n,e);const r=Math.max(i-a,0),s=this[d].slice(a,a+r),o=new c([],{type:arguments[2]});return o[d]=s,o}}function h(e,t,n){Error.call(this,e),this.message=e,this.type=t,n&&(this.code=this.errno=n.code),Error.captureStackTrace(this,this.constructor)}let m;Object.defineProperties(c.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(c.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),h.prototype=Object.create(Error.prototype),h.prototype.constructor=h,h.prototype.name="FetchError";try{m=require("encoding").convert}catch(e){}const f=Symbol("Body internals"),g=a.PassThrough;function v(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=n.size;let r=void 0===i?0:i;var s=n.timeout;let o=void 0===s?0:s;null==e?e=null:x(e)?e=Buffer.from(e.toString()):b(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof a||(e=Buffer.from(String(e)))),this[f]={body:e,disturbed:!1,error:null},this.size=r,this.timeout=o,e instanceof a&&e.on("error",(function(e){const n="AbortError"===e.name?e:new h(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[f].error=n}))}function y(){var e=this;if(this[f].disturbed)return v.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[f].disturbed=!0,this[f].error)return v.Promise.reject(this[f].error);let t=this.body;if(null===t)return v.Promise.resolve(Buffer.alloc(0));if(b(t)&&(t=t.stream()),Buffer.isBuffer(t))return v.Promise.resolve(t);if(!(t instanceof a))return v.Promise.resolve(Buffer.alloc(0));let n=[],i=0,r=!1;return new v.Promise((function(a,s){let o;e.timeout&&(o=setTimeout((function(){r=!0,s(new h(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)),t.on("error",(function(t){"AbortError"===t.name?(r=!0,s(t)):s(new h(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))})),t.on("data",(function(t){if(!r&&null!==t){if(e.size&&i+t.length>e.size)return r=!0,void s(new h(`content size at ${e.url} over limit: ${e.size}`,"max-size"));i+=t.length,n.push(t)}})),t.on("end",(function(){if(!r){clearTimeout(o);try{a(Buffer.concat(n,i))}catch(t){s(new h(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}}))}))}function x(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function b(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function w(e){let t,n,i=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return i instanceof a&&"function"!=typeof i.getBoundary&&(t=new g,n=new g,i.pipe(t),i.pipe(n),e[f].body=t,i=n),i}function _(e){return null===e?null:"string"==typeof e?"text/plain;charset=UTF-8":x(e)?"application/x-www-form-urlencoded;charset=UTF-8":b(e)?e.type||null:Buffer.isBuffer(e)||"[object ArrayBuffer]"===Object.prototype.toString.call(e)||ArrayBuffer.isView(e)?null:"function"==typeof e.getBoundary?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof a?null:"text/plain;charset=UTF-8"}function S(e){const t=e.body;return null===t?0:b(t)?t.size:Buffer.isBuffer(t)?t.length:t&&"function"==typeof t.getLengthSync&&(t._lengthRetrievers&&0==t._lengthRetrievers.length||t.hasKnownLength&&t.hasKnownLength())?t.getLengthSync():null}v.prototype={get body(){return this[f].body},get bodyUsed(){return this[f].disturbed},arrayBuffer(){return y.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return y.call(this).then((function(t){return Object.assign(new c([],{type:e.toLowerCase()}),{[d]:t})}))},json(){var e=this;return y.call(this).then((function(t){try{return JSON.parse(t.toString())}catch(t){return v.Promise.reject(new h(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}}))},text(){return y.call(this).then((function(e){return e.toString()}))},buffer(){return y.call(this)},textConverted(){var e=this;return y.call(this).then((function(t){return function(e,t){if("function"!=typeof m)throw new Error("The package `encoding` must be installed to use the textConverted() function");const n=t.get("content-type");let a,i,r="utf-8";return n&&(a=/charset=([^;]*)/i.exec(n)),i=e.slice(0,1024).toString(),!a&&i&&(a=/<meta.+?charset=(['"])(.+?)\1/i.exec(i)),!a&&i&&(a=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(i),a||(a=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(i),a&&a.pop()),a&&(a=/charset=(.*)/i.exec(a.pop()))),!a&&i&&(a=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(i)),a&&(r=a.pop(),"gb2312"!==r&&"gbk"!==r||(r="gb18030")),m(e,"UTF-8",r).toString()}(t,e.headers)}))}},Object.defineProperties(v.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),v.mixIn=function(e){for(const t of Object.getOwnPropertyNames(v.prototype))if(!(t in e)){const n=Object.getOwnPropertyDescriptor(v.prototype,t);Object.defineProperty(e,t,n)}},v.Promise=global.Promise;const T=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,E=/[^\t\x20-\x7e\x80-\xff]/;function M(e){if(e=`${e}`,T.test(e)||""===e)throw new TypeError(`${e} is not a legal HTTP header name`)}function N(e){if(e=`${e}`,E.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function C(e,t){t=t.toLowerCase();for(const n in e)if(n.toLowerCase()===t)return n}const A=Symbol("map");class I{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[A]=Object.create(null),e instanceof I){const t=e.raw(),n=Object.keys(t);for(const e of n)for(const n of t[e])this.append(e,n)}else if(null==e);else{if("object"!=typeof e)throw new TypeError("Provided initializer must be an object");{const t=e[Symbol.iterator];if(null!=t){if("function"!=typeof t)throw new TypeError("Header pairs must be iterable");const n=[];for(const t of e){if("object"!=typeof t||"function"!=typeof t[Symbol.iterator])throw new TypeError("Each header pair must be iterable");n.push(Array.from(t))}for(const e of n){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const t of Object.keys(e)){const n=e[t];this.append(t,n)}}}}get(e){M(e=`${e}`);const t=C(this[A],e);return void 0===t?null:this[A][t].join(", ")}forEach(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,n=R(this),a=0;for(;a<n.length;){var i=n[a];const r=i[0],s=i[1];e.call(t,s,r,this),n=R(this),a++}}set(e,t){t=`${t}`,M(e=`${e}`),N(t);const n=C(this[A],e);this[A][void 0!==n?n:e]=[t]}append(e,t){t=`${t}`,M(e=`${e}`),N(t);const n=C(this[A],e);void 0!==n?this[A][n].push(t):this[A][e]=[t]}has(e){return M(e=`${e}`),void 0!==C(this[A],e)}delete(e){M(e=`${e}`);const t=C(this[A],e);void 0!==t&&delete this[A][t]}raw(){return this[A]}keys(){return D(this,"key")}values(){return D(this,"value")}[Symbol.iterator](){return D(this,"key+value")}}function R(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";const n=Object.keys(e[A]).sort();return n.map("key"===t?function(e){return e.toLowerCase()}:"value"===t?function(t){return e[A][t].join(", ")}:function(t){return[t.toLowerCase(),e[A][t].join(", ")]})}I.prototype.entries=I.prototype[Symbol.iterator],Object.defineProperty(I.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(I.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const k=Symbol("internal");function D(e,t){const n=Object.create(P);return n[k]={target:e,kind:t,index:0},n}const P=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==P)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[k];const t=e.target,n=e.kind,a=e.index,i=R(t,n);return a>=i.length?{value:void 0,done:!0}:(this[k].index=a+1,{value:i[a],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function L(e){const t=Object.assign({__proto__:null},e[A]),n=C(e[A],"Host");return void 0!==n&&(t[n]=t[n][0]),t}Object.defineProperty(P,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const O=Symbol("Response internals"),B=i.STATUS_CODES;class F{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};v.call(this,e,t);const n=t.status||200,a=new I(t.headers);if(null!=e&&!a.has("Content-Type")){const t=_(e);t&&a.append("Content-Type",t)}this[O]={url:t.url,status:n,statusText:t.statusText||B[n],headers:a,counter:t.counter}}get url(){return this[O].url||""}get status(){return this[O].status}get ok(){return this[O].status>=200&&this[O].status<300}get redirected(){return this[O].counter>0}get statusText(){return this[O].statusText}get headers(){return this[O].headers}clone(){return new F(w(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}v.mixIn(F.prototype),Object.defineProperties(F.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(F.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const $=Symbol("Request internals"),V=r.URL||s.URL,z=r.parse,U=r.format;function G(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new V(e).toString()),z(e)}const W="destroy"in a.Readable.prototype;function H(e){return"object"==typeof e&&"object"==typeof e[$]}class q{constructor(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};H(e)?t=G(e.url):(t=e&&e.href?G(e.href):G(`${e}`),e={});let a=n.method||e.method||"GET";if(a=a.toUpperCase(),(null!=n.body||H(e)&&null!==e.body)&&("GET"===a||"HEAD"===a))throw new TypeError("Request with GET/HEAD method cannot have body");let i=null!=n.body?n.body:H(e)&&null!==e.body?w(e):null;v.call(this,i,{timeout:n.timeout||e.timeout||0,size:n.size||e.size||0});const r=new I(n.headers||e.headers||{});if(null!=i&&!r.has("Content-Type")){const e=_(i);e&&r.append("Content-Type",e)}let s=H(e)?e.signal:null;if("signal"in n&&(s=n.signal),null!=s&&!function(e){const t=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!(!t||"AbortSignal"!==t.constructor.name)}(s))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[$]={method:a,redirect:n.redirect||e.redirect||"follow",headers:r,parsedURL:t,signal:s},this.follow=void 0!==n.follow?n.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==n.compress?n.compress:void 0===e.compress||e.compress,this.counter=n.counter||e.counter||0,this.agent=n.agent||e.agent}get method(){return this[$].method}get url(){return U(this[$].parsedURL)}get headers(){return this[$].headers}get redirect(){return this[$].redirect}get signal(){return this[$].signal}clone(){return new q(this)}}function j(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}v.mixIn(q.prototype),Object.defineProperty(q.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(q.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),j.prototype=Object.create(Error.prototype),j.prototype.constructor=j,j.prototype.name="AbortError";const X=r.URL||s.URL,K=a.PassThrough;function Y(e,t){if(!Y.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return v.Promise=Y.Promise,new Y.Promise((function(n,r){const s=new q(e,t),l=function(e){const t=e[$].parsedURL,n=new I(e[$].headers);if(n.has("Accept")||n.set("Accept","*/*"),!t.protocol||!t.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof a.Readable&&!W)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let i=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(i="0"),null!=e.body){const t=S(e);"number"==typeof t&&(i=String(t))}i&&n.set("Content-Length",i),n.has("User-Agent")||n.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!n.has("Accept-Encoding")&&n.set("Accept-Encoding","gzip,deflate");let r=e.agent;return"function"==typeof r&&(r=r(t)),n.has("Connection")||r||n.set("Connection","close"),Object.assign({},t,{method:e.method,headers:L(n),agent:r})}(s),d=("https:"===l.protocol?o:i).request,u=s.signal;let c=null;const m=function(){let e=new j("The user aborted a request.");r(e),s.body&&s.body instanceof a.Readable&&s.body.destroy(e),c&&c.body&&c.body.emit("error",e)};if(u&&u.aborted)return void m();const f=function(){m(),y()},g=d(l);let v;function y(){g.abort(),u&&u.removeEventListener("abort",f),clearTimeout(v)}u&&u.addEventListener("abort",f),s.timeout&&g.once("socket",(function(e){v=setTimeout((function(){r(new h(`network timeout at: ${s.url}`,"request-timeout")),y()}),s.timeout)})),g.on("error",(function(e){r(new h(`request to ${s.url} failed, reason: ${e.message}`,"system",e)),y()})),g.on("response",(function(e){clearTimeout(v);const t=function(e){const t=new I;for(const n of Object.keys(e))if(!T.test(n))if(Array.isArray(e[n]))for(const a of e[n])E.test(a)||(void 0===t[A][n]?t[A][n]=[a]:t[A][n].push(a));else E.test(e[n])||(t[A][n]=[e[n]]);return t}(e.headers);if(Y.isRedirect(e.statusCode)){const a=t.get("Location");let i=null;try{i=null===a?null:new X(a,s.url).toString()}catch(e){if("manual"!==s.redirect)return r(new h(`uri requested responds with an invalid redirect URL: ${a}`,"invalid-redirect")),void y()}switch(s.redirect){case"error":return r(new h(`uri requested responds with a redirect, redirect mode is set to error: ${s.url}`,"no-redirect")),void y();case"manual":if(null!==i)try{t.set("Location",i)}catch(e){r(e)}break;case"follow":if(null===i)break;if(s.counter>=s.follow)return r(new h(`maximum redirect reached at: ${s.url}`,"max-redirect")),void y();const a={headers:new I(s.headers),follow:s.follow,counter:s.counter+1,agent:s.agent,compress:s.compress,method:s.method,body:s.body,signal:s.signal,timeout:s.timeout,size:s.size};if(!function(e,t){const n=new X(t).hostname,a=new X(e).hostname;return n===a||"."===n[n.length-a.length-1]&&n.endsWith(a)}(s.url,i))for(const e of["authorization","www-authenticate","cookie","cookie2"])a.headers.delete(e);return 303!==e.statusCode&&s.body&&null===S(s)?(r(new h("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void y()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==s.method)||(a.method="GET",a.body=void 0,a.headers.delete("content-length")),n(Y(new q(i,a))),void y())}}e.once("end",(function(){u&&u.removeEventListener("abort",f)}));let a=e.pipe(new K);const i={url:s.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:s.size,timeout:s.timeout,counter:s.counter},o=t.get("Content-Encoding");if(!s.compress||"HEAD"===s.method||null===o||204===e.statusCode||304===e.statusCode)return c=new F(a,i),void n(c);const l={flush:p.Z_SYNC_FLUSH,finishFlush:p.Z_SYNC_FLUSH};if("gzip"==o||"x-gzip"==o)return a=a.pipe(p.createGunzip(l)),c=new F(a,i),void n(c);if("deflate"!=o&&"x-deflate"!=o){if("br"==o&&"function"==typeof p.createBrotliDecompress)return a=a.pipe(p.createBrotliDecompress()),c=new F(a,i),void n(c);c=new F(a,i),n(c)}else e.pipe(new K).once("data",(function(e){a=8==(15&e[0])?a.pipe(p.createInflate()):a.pipe(p.createInflateRaw()),c=new F(a,i),n(c)}))})),function(e,t){const n=t.body;null===n?e.end():b(n)?n.stream().pipe(e):Buffer.isBuffer(n)?(e.write(n),e.end()):n.pipe(e)}(g,s)}))}Y.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},Y.Promise=global.Promise;const Z=Y},1907:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var r=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{addImpl:()=>Nc,bincountImpl:()=>Ac,bincountReduceImpl:()=>Ic,ceilImpl:()=>Pc,concatImpl:()=>Lc,equalImpl:()=>Oc,expImpl:()=>Bc,expm1Impl:()=>Fc,floorImpl:()=>$c,gatherNdImpl:()=>Vc,gatherV2Impl:()=>zc,greaterEqualImpl:()=>Gc,greaterImpl:()=>Uc,lessEqualImpl:()=>Hc,lessImpl:()=>Wc,linSpaceImpl:()=>qc,logImpl:()=>jc,maxImpl:()=>Xc,maximumImpl:()=>Kc,minimumImpl:()=>Yc,multiplyImpl:()=>Zc,negImpl:()=>Jc,notEqualImpl:()=>eh,prodImpl:()=>nh,rangeImpl:()=>ah,rsqrtImpl:()=>ih,sigmoidImpl:()=>rh,simpleAbsImpl:()=>xc,sliceImpl:()=>sh,sparseFillEmptyRowsImpl:()=>oh,sparseReshapeImpl:()=>ph,sparseSegmentReductionImpl:()=>lh,sqrtImpl:()=>dh,squaredDifferenceImpl:()=>uh,stridedSliceImpl:()=>ch,stringNGramsImpl:()=>mh,stringSplitImpl:()=>gh,stringToHashBucketFastImpl:()=>vh,subImpl:()=>yh,tileImpl:()=>bh,topKImpl:()=>Sh,transposeImpl:()=>th,uniqueImpl:()=>Th});var t={};n.r(t),n.d(t,{json:()=>nw});var a={};n.r(a),n.d(a,{json:()=>aw});var i={};n.r(i),n.d(i,{json:()=>iw});var r={};n.r(r),n.d(r,{json:()=>rw});var s={};n.r(s),n.d(s,{json:()=>sw});var o={};n.r(o),n.d(o,{json:()=>ow});var p={};n.r(p),n.d(p,{json:()=>pw});var l={};n.r(l),n.d(l,{json:()=>lw});var d={};n.r(d),n.d(d,{json:()=>dw});var u={};n.r(u),n.d(u,{json:()=>uw});var c={};n.r(c),n.d(c,{json:()=>cw});var h={};n.r(h),n.d(h,{json:()=>hw});var m={};n.r(m),n.d(m,{json:()=>mw});var f={};n.r(f),n.d(f,{json:()=>fw});var g={};n.r(g),n.d(g,{json:()=>gw});var v={};n.r(v),n.d(v,{json:()=>vw});var y={};n.r(y),n.d(y,{json:()=>yw});var x={};n.r(x),n.d(x,{json:()=>xw});var b={};n.r(b),n.d(b,{json:()=>bw}),n(9151);const w=100,_=301,S=302,T=306,E=1e3,M=1001,N=1002,C=1003,A=1006,I=1008,R=1009,k=1012,D=1014,P=1015,L=1016,O=1020,B=1023,F=1026,$=1027,V=33776,z=33777,U=33778,G=33779,W=2300,H=2301,q=2302,j=2400,X=2401,K=2402,Y=3e3,Z=3001,Q=7680,J=35044,ee=35048,te="300 es",ne=1035;class ae{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let t=0,a=n.length;t<a;t++)n[t].call(this,e);e.target=null}}}const ie=[];for(let e=0;e<256;e++)ie[e]=(e<16?"0":"")+e.toString(16);const re=Math.PI/180,se=180/Math.PI;function oe(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,a=4294967295*Math.random()|0;return(ie[255&e]+ie[e>>8&255]+ie[e>>16&255]+ie[e>>24&255]+"-"+ie[255&t]+ie[t>>8&255]+"-"+ie[t>>16&15|64]+ie[t>>24&255]+"-"+ie[63&n|128]+ie[n>>8&255]+"-"+ie[n>>16&255]+ie[n>>24&255]+ie[255&a]+ie[a>>8&255]+ie[a>>16&255]+ie[a>>24&255]).toUpperCase()}function pe(e,t,n){return Math.max(t,Math.min(n,e))}function le(e,t,n){return(1-n)*e+n*t}function de(e){return 0==(e&e-1)&&0!==e}function ue(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}class ce{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,a=e.elements;return this.x=a[0]*t+a[3]*n+a[6],this.y=a[1]*t+a[4]*n+a[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),a=Math.sin(t),i=this.x-e.x,r=this.y-e.y;return this.x=i*n-r*a+e.x,this.y=i*a+r*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}ce.prototype.isVector2=!0;class he{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,a,i,r,s,o,p){const l=this.elements;return l[0]=e,l[1]=a,l[2]=s,l[3]=t,l[4]=i,l[5]=o,l[6]=n,l[7]=r,l[8]=p,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,a=t.elements,i=this.elements,r=n[0],s=n[3],o=n[6],p=n[1],l=n[4],d=n[7],u=n[2],c=n[5],h=n[8],m=a[0],f=a[3],g=a[6],v=a[1],y=a[4],x=a[7],b=a[2],w=a[5],_=a[8];return i[0]=r*m+s*v+o*b,i[3]=r*f+s*y+o*w,i[6]=r*g+s*x+o*_,i[1]=p*m+l*v+d*b,i[4]=p*f+l*y+d*w,i[7]=p*g+l*x+d*_,i[2]=u*m+c*v+h*b,i[5]=u*f+c*y+h*w,i[8]=u*g+c*x+h*_,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],a=e[2],i=e[3],r=e[4],s=e[5],o=e[6],p=e[7],l=e[8];return t*r*l-t*s*p-n*i*l+n*s*o+a*i*p-a*r*o}invert(){const e=this.elements,t=e[0],n=e[1],a=e[2],i=e[3],r=e[4],s=e[5],o=e[6],p=e[7],l=e[8],d=l*r-s*p,u=s*o-l*i,c=p*i-r*o,h=t*d+n*u+a*c;if(0===h)return this.set(0,0,0,0,0,0,0,0,0);const m=1/h;return e[0]=d*m,e[1]=(a*p-l*n)*m,e[2]=(s*n-a*r)*m,e[3]=u*m,e[4]=(l*t-a*o)*m,e[5]=(a*i-s*t)*m,e[6]=c*m,e[7]=(n*o-p*t)*m,e[8]=(r*t-n*i)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,a,i,r,s){const o=Math.cos(i),p=Math.sin(i);return this.set(n*o,n*p,-n*(o*r+p*s)+r+e,-a*p,a*o,-a*(-p*r+o*s)+s+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),a=this.elements,i=a[0],r=a[3],s=a[6],o=a[1],p=a[4],l=a[7];return a[0]=t*i+n*o,a[3]=t*r+n*p,a[6]=t*s+n*l,a[1]=-n*i+t*o,a[4]=-n*r+t*p,a[7]=-n*s+t*l,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}function me(e){for(let t=e.length-1;t>=0;--t)if(e[t]>65535)return!0;return!1}function fe(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}he.prototype.isMatrix3=!0,Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const ge={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ve={h:0,s:0,l:0},ye={h:0,s:0,l:0};function xe(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function be(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function we(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class _e{constructor(e,t,n){return void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){if(e=(e%(a=1)+a)%a,t=pe(t,0,1),n=pe(n,0,1),0===t)this.r=this.g=this.b=n;else{const a=n<=.5?n*(1+t):n+t-n*t,i=2*n-a;this.r=xe(i,a,e+1/3),this.g=xe(i,a,e),this.b=xe(i,a,e-1/3)}var a;return this}setStyle(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let e;const a=n[1],i=n[2];switch(a){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,t(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,t(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i)){const n=parseFloat(e[1])/360,a=parseInt(e[2],10)/100,i=parseInt(e[3],10)/100;return t(e[4]),this.setHSL(n,a,i)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=n[1],t=e.length;if(3===t)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===t)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=ge[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=be(e.r),this.g=be(e.g),this.b=be(e.b),this}copyLinearToSRGB(e){return this.r=we(e.r),this.g=we(e.g),this.b=we(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){const t=this.r,n=this.g,a=this.b,i=Math.max(t,n,a),r=Math.min(t,n,a);let s,o;const p=(r+i)/2;if(r===i)s=0,o=0;else{const e=i-r;switch(o=p<=.5?e/(i+r):e/(2-i-r),i){case t:s=(n-a)/e+(n<a?6:0);break;case n:s=(a-t)/e+2;break;case a:s=(t-n)/e+4}s/=6}return e.h=s,e.s=o,e.l=p,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,n){return this.getHSL(ve),ve.h+=e,ve.s+=t,ve.l+=n,this.setHSL(ve.h,ve.s,ve.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(ve),e.getHSL(ye);const n=le(ve.h,ye.h,t),a=le(ve.s,ye.s,t),i=le(ve.l,ye.l,t);return this.setHSL(n,a,i),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}let Se;_e.NAMES=ge,_e.prototype.isColor=!0,_e.prototype.r=1,_e.prototype.g=1,_e.prototype.b=1;class Te{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===Se&&(Se=fe("canvas")),Se.width=e.width,Se.height=e.height;const n=Se.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Se}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const t=fe("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const a=n.getImageData(0,0,e.width,e.height),i=a.data;for(let e=0;e<i.length;e++)i[e]=255*be(i[e]/255);return n.putImageData(a,0,0),t}if(e.data){const t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*be(t[e]/255)):t[e]=be(t[e]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Ee{constructor(e=null){this.uuid=oe(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const n={uuid:this.uuid,url:""},a=this.data;if(null!==a){let e;if(Array.isArray(a)){e=[];for(let t=0,n=a.length;t<n;t++)a[t].isDataTexture?e.push(Me(a[t].image)):e.push(Me(a[t]))}else e=Me(a);n.url=e}return t||(e.images[this.uuid]=n),n}}function Me(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Te.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Ee.prototype.isSource=!0;let Ne=0;class Ce extends ae{constructor(e=Ce.DEFAULT_IMAGE,t=Ce.DEFAULT_MAPPING,n=1001,a=1001,i=1006,r=1008,s=1023,o=1009,p=1,l=3e3){super(),Object.defineProperty(this,"id",{value:Ne++}),this.uuid=oe(),this.name="",this.source=new Ee(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=a,this.magFilter=i,this.minFilter=r,this.anisotropy=p,this.format=s,this.internalFormat=null,this.type=o,this.offset=new ce(0,0),this.repeat=new ce(1,1),this.center=new ce(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new he,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case E:e.x=e.x-Math.floor(e.x);break;case M:e.x=e.x<0?0:1;break;case N:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case E:e.y=e.y-Math.floor(e.y);break;case M:e.y=e.y<0?0:1;break;case N:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}Ce.DEFAULT_IMAGE=null,Ce.DEFAULT_MAPPING=300,Ce.prototype.isTexture=!0;class Ae{constructor(e=0,t=0,n=0,a=1){this.x=e,this.y=t,this.z=n,this.w=a}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,a){return this.x=e,this.y=t,this.z=n,this.w=a,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,a=this.z,i=this.w,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*a+r[12]*i,this.y=r[1]*t+r[5]*n+r[9]*a+r[13]*i,this.z=r[2]*t+r[6]*n+r[10]*a+r[14]*i,this.w=r[3]*t+r[7]*n+r[11]*a+r[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,a,i;const r=.01,s=.1,o=e.elements,p=o[0],l=o[4],d=o[8],u=o[1],c=o[5],h=o[9],m=o[2],f=o[6],g=o[10];if(Math.abs(l-u)<r&&Math.abs(d-m)<r&&Math.abs(h-f)<r){if(Math.abs(l+u)<s&&Math.abs(d+m)<s&&Math.abs(h+f)<s&&Math.abs(p+c+g-3)<s)return this.set(1,0,0,0),this;t=Math.PI;const e=(p+1)/2,o=(c+1)/2,v=(g+1)/2,y=(l+u)/4,x=(d+m)/4,b=(h+f)/4;return e>o&&e>v?e<r?(n=0,a=.707106781,i=.707106781):(n=Math.sqrt(e),a=y/n,i=x/n):o>v?o<r?(n=.707106781,a=0,i=.707106781):(a=Math.sqrt(o),n=y/a,i=b/a):v<r?(n=.707106781,a=.707106781,i=0):(i=Math.sqrt(v),n=x/i,a=b/i),this.set(n,a,i,t),this}let v=Math.sqrt((f-h)*(f-h)+(d-m)*(d-m)+(u-l)*(u-l));return Math.abs(v)<.001&&(v=1),this.x=(f-h)/v,this.y=(d-m)/v,this.z=(u-l)/v,this.w=Math.acos((p+c+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Ae.prototype.isVector4=!0;class Ie extends ae{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Ae(0,0,e,t),this.scissorTest=!1,this.viewport=new Ae(0,0,e,t);const a={width:e,height:t,depth:1};this.texture=new Ce(a,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:A,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null,this.samples=void 0!==n.samples?n.samples:0}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}Ie.prototype.isWebGLRenderTarget=!0;class Re extends Ce{constructor(e=null,t=1,n=1,a=1){super(null),this.image={data:e,width:t,height:n,depth:a},this.magFilter=C,this.minFilter=C,this.wrapR=M,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Re.prototype.isDataArrayTexture=!0,class extends Ie{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new Re(null,e,t,n),this.texture.isRenderTargetTexture=!0}}.prototype.isWebGLArrayRenderTarget=!0;class ke extends Ce{constructor(e=null,t=1,n=1,a=1){super(null),this.image={data:e,width:t,height:n,depth:a},this.magFilter=C,this.minFilter=C,this.wrapR=M,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}ke.prototype.isData3DTexture=!0,class extends Ie{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new ke(null,e,t,n),this.texture.isRenderTargetTexture=!0}}.prototype.isWebGL3DRenderTarget=!0,class extends Ie{constructor(e,t,n,a={}){super(e,t,a);const i=this.texture;this.texture=[];for(let e=0;e<n;e++)this.texture[e]=i.clone(),this.texture[e].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let a=0,i=this.texture.length;a<i;a++)this.texture[a].image.width=e,this.texture[a].image.height=t,this.texture[a].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone();return this}}.prototype.isWebGLMultipleRenderTargets=!0;class De{constructor(e=0,t=0,n=0,a=1){this._x=e,this._y=t,this._z=n,this._w=a}static slerp(e,t,n,a){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,a)}static slerpFlat(e,t,n,a,i,r,s){let o=n[a+0],p=n[a+1],l=n[a+2],d=n[a+3];const u=i[r+0],c=i[r+1],h=i[r+2],m=i[r+3];if(0===s)return e[t+0]=o,e[t+1]=p,e[t+2]=l,void(e[t+3]=d);if(1===s)return e[t+0]=u,e[t+1]=c,e[t+2]=h,void(e[t+3]=m);if(d!==m||o!==u||p!==c||l!==h){let e=1-s;const t=o*u+p*c+l*h+d*m,n=t>=0?1:-1,a=1-t*t;if(a>Number.EPSILON){const i=Math.sqrt(a),r=Math.atan2(i,t*n);e=Math.sin(e*r)/i,s=Math.sin(s*r)/i}const i=s*n;if(o=o*e+u*i,p=p*e+c*i,l=l*e+h*i,d=d*e+m*i,e===1-s){const e=1/Math.sqrt(o*o+p*p+l*l+d*d);o*=e,p*=e,l*=e,d*=e}}e[t]=o,e[t+1]=p,e[t+2]=l,e[t+3]=d}static multiplyQuaternionsFlat(e,t,n,a,i,r){const s=n[a],o=n[a+1],p=n[a+2],l=n[a+3],d=i[r],u=i[r+1],c=i[r+2],h=i[r+3];return e[t]=s*h+l*d+o*c-p*u,e[t+1]=o*h+l*u+p*d-s*c,e[t+2]=p*h+l*c+s*u-o*d,e[t+3]=l*h-s*d-o*u-p*c,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,a){return this._x=e,this._y=t,this._z=n,this._w=a,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,a=e._y,i=e._z,r=e._order,s=Math.cos,o=Math.sin,p=s(n/2),l=s(a/2),d=s(i/2),u=o(n/2),c=o(a/2),h=o(i/2);switch(r){case"XYZ":this._x=u*l*d+p*c*h,this._y=p*c*d-u*l*h,this._z=p*l*h+u*c*d,this._w=p*l*d-u*c*h;break;case"YXZ":this._x=u*l*d+p*c*h,this._y=p*c*d-u*l*h,this._z=p*l*h-u*c*d,this._w=p*l*d+u*c*h;break;case"ZXY":this._x=u*l*d-p*c*h,this._y=p*c*d+u*l*h,this._z=p*l*h+u*c*d,this._w=p*l*d-u*c*h;break;case"ZYX":this._x=u*l*d-p*c*h,this._y=p*c*d+u*l*h,this._z=p*l*h-u*c*d,this._w=p*l*d+u*c*h;break;case"YZX":this._x=u*l*d+p*c*h,this._y=p*c*d+u*l*h,this._z=p*l*h-u*c*d,this._w=p*l*d-u*c*h;break;case"XZY":this._x=u*l*d-p*c*h,this._y=p*c*d-u*l*h,this._z=p*l*h+u*c*d,this._w=p*l*d+u*c*h;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,a=Math.sin(n);return this._x=e.x*a,this._y=e.y*a,this._z=e.z*a,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],a=t[4],i=t[8],r=t[1],s=t[5],o=t[9],p=t[2],l=t[6],d=t[10],u=n+s+d;if(u>0){const e=.5/Math.sqrt(u+1);this._w=.25/e,this._x=(l-o)*e,this._y=(i-p)*e,this._z=(r-a)*e}else if(n>s&&n>d){const e=2*Math.sqrt(1+n-s-d);this._w=(l-o)/e,this._x=.25*e,this._y=(a+r)/e,this._z=(i+p)/e}else if(s>d){const e=2*Math.sqrt(1+s-n-d);this._w=(i-p)/e,this._x=(a+r)/e,this._y=.25*e,this._z=(o+l)/e}else{const e=2*Math.sqrt(1+d-n-s);this._w=(r-a)/e,this._x=(i+p)/e,this._y=(o+l)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(pe(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const a=Math.min(1,t/n);return this.slerp(e,a),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,a=e._y,i=e._z,r=e._w,s=t._x,o=t._y,p=t._z,l=t._w;return this._x=n*l+r*s+a*p-i*o,this._y=a*l+r*o+i*s-n*p,this._z=i*l+r*p+n*o-a*s,this._w=r*l-n*s-a*o-i*p,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,a=this._y,i=this._z,r=this._w;let s=r*e._w+n*e._x+a*e._y+i*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=r,this._x=n,this._y=a,this._z=i,this;const o=1-s*s;if(o<=Number.EPSILON){const e=1-t;return this._w=e*r+t*this._w,this._x=e*n+t*this._x,this._y=e*a+t*this._y,this._z=e*i+t*this._z,this.normalize(),this._onChangeCallback(),this}const p=Math.sqrt(o),l=Math.atan2(p,s),d=Math.sin((1-t)*l)/p,u=Math.sin(t*l)/p;return this._w=r*d+this._w*u,this._x=n*d+this._x*u,this._y=a*d+this._y*u,this._z=i*d+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),a=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(t*Math.cos(a),n*Math.sin(i),n*Math.cos(i),t*Math.sin(a))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}De.prototype.isQuaternion=!0;class Pe{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Oe.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Oe.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,a=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*a,this.y=i[1]*t+i[4]*n+i[7]*a,this.z=i[2]*t+i[5]*n+i[8]*a,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,a=this.z,i=e.elements,r=1/(i[3]*t+i[7]*n+i[11]*a+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*a+i[12])*r,this.y=(i[1]*t+i[5]*n+i[9]*a+i[13])*r,this.z=(i[2]*t+i[6]*n+i[10]*a+i[14])*r,this}applyQuaternion(e){const t=this.x,n=this.y,a=this.z,i=e.x,r=e.y,s=e.z,o=e.w,p=o*t+r*a-s*n,l=o*n+s*t-i*a,d=o*a+i*n-r*t,u=-i*t-r*n-s*a;return this.x=p*o+u*-i+l*-s-d*-r,this.y=l*o+u*-r+d*-i-p*-s,this.z=d*o+u*-s+p*-r-l*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,a=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*a,this.y=i[1]*t+i[5]*n+i[9]*a,this.z=i[2]*t+i[6]*n+i[10]*a,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,a=e.y,i=e.z,r=t.x,s=t.y,o=t.z;return this.x=a*o-i*s,this.y=i*r-n*o,this.z=n*s-a*r,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Le.copy(this).projectOnVector(e),this.sub(Le)}reflect(e){return this.sub(Le.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(pe(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,a=this.z-e.z;return t*t+n*n+a*a}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const a=Math.sin(t)*e;return this.x=a*Math.sin(n),this.y=Math.cos(t)*e,this.z=a*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),a=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=a,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}Pe.prototype.isVector3=!0;const Le=new Pe,Oe=new De;class Be{constructor(e=new Pe(1/0,1/0,1/0),t=new Pe(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,a=1/0,i=-1/0,r=-1/0,s=-1/0;for(let o=0,p=e.length;o<p;o+=3){const p=e[o],l=e[o+1],d=e[o+2];p<t&&(t=p),l<n&&(n=l),d<a&&(a=d),p>i&&(i=p),l>r&&(r=l),d>s&&(s=d)}return this.min.set(t,n,a),this.max.set(i,r,s),this}setFromBufferAttribute(e){let t=1/0,n=1/0,a=1/0,i=-1/0,r=-1/0,s=-1/0;for(let o=0,p=e.count;o<p;o++){const p=e.getX(o),l=e.getY(o),d=e.getZ(o);p<t&&(t=p),l<n&&(n=l),d<a&&(a=d),p>i&&(i=p),l>r&&(r=l),d>s&&(s=d)}return this.min.set(t,n,a),this.max.set(i,r,s),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=$e.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(void 0!==n)if(t&&null!=n.attributes&&void 0!==n.attributes.position){const t=n.attributes.position;for(let n=0,a=t.count;n<a;n++)$e.fromBufferAttribute(t,n).applyMatrix4(e.matrixWorld),this.expandByPoint($e)}else null===n.boundingBox&&n.computeBoundingBox(),Ve.copy(n.boundingBox),Ve.applyMatrix4(e.matrixWorld),this.union(Ve);const a=e.children;for(let e=0,n=a.length;e<n;e++)this.expandByObject(a[e],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,$e),$e.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(je),Xe.subVectors(this.max,je),ze.subVectors(e.a,je),Ue.subVectors(e.b,je),Ge.subVectors(e.c,je),We.subVectors(Ue,ze),He.subVectors(Ge,Ue),qe.subVectors(ze,Ge);let t=[0,-We.z,We.y,0,-He.z,He.y,0,-qe.z,qe.y,We.z,0,-We.x,He.z,0,-He.x,qe.z,0,-qe.x,-We.y,We.x,0,-He.y,He.x,0,-qe.y,qe.x,0];return!!Ze(t,ze,Ue,Ge,Xe)&&(t=[1,0,0,0,1,0,0,0,1],!!Ze(t,ze,Ue,Ge,Xe)&&(Ke.crossVectors(We,He),t=[Ke.x,Ke.y,Ke.z],Ze(t,ze,Ue,Ge,Xe)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return $e.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize($e).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(Fe[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Fe[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Fe[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Fe[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Fe[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Fe[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Fe[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Fe[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Fe)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Be.prototype.isBox3=!0;const Fe=[new Pe,new Pe,new Pe,new Pe,new Pe,new Pe,new Pe,new Pe],$e=new Pe,Ve=new Be,ze=new Pe,Ue=new Pe,Ge=new Pe,We=new Pe,He=new Pe,qe=new Pe,je=new Pe,Xe=new Pe,Ke=new Pe,Ye=new Pe;function Ze(e,t,n,a,i){for(let r=0,s=e.length-3;r<=s;r+=3){Ye.fromArray(e,r);const s=i.x*Math.abs(Ye.x)+i.y*Math.abs(Ye.y)+i.z*Math.abs(Ye.z),o=t.dot(Ye),p=n.dot(Ye),l=a.dot(Ye);if(Math.max(-Math.max(o,p,l),Math.min(o,p,l))>s)return!1}return!0}const Qe=new Be,Je=new Pe,et=new Pe,tt=new Pe;class nt{constructor(e=new Pe,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):Qe.setFromPoints(e).getCenter(n);let a=0;for(let t=0,i=e.length;t<i;t++)a=Math.max(a,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(a),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){tt.subVectors(e,this.center);const t=tt.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.add(tt.multiplyScalar(n/e)),this.radius+=n}return this}union(e){return!0===this.center.equals(e.center)?et.set(0,0,1).multiplyScalar(e.radius):et.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Je.copy(e.center).add(et)),this.expandByPoint(Je.copy(e.center).sub(et)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const at=new Pe,it=new Pe,rt=new Pe,st=new Pe,ot=new Pe,pt=new Pe,lt=new Pe;class dt{constructor(e=new Pe,t=new Pe(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,at)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=at.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(at.copy(this.direction).multiplyScalar(t).add(this.origin),at.distanceToSquared(e))}distanceSqToSegment(e,t,n,a){it.copy(e).add(t).multiplyScalar(.5),rt.copy(t).sub(e).normalize(),st.copy(this.origin).sub(it);const i=.5*e.distanceTo(t),r=-this.direction.dot(rt),s=st.dot(this.direction),o=-st.dot(rt),p=st.lengthSq(),l=Math.abs(1-r*r);let d,u,c,h;if(l>0)if(d=r*o-s,u=r*s-o,h=i*l,d>=0)if(u>=-h)if(u<=h){const e=1/l;d*=e,u*=e,c=d*(d+r*u+2*s)+u*(r*d+u+2*o)+p}else u=i,d=Math.max(0,-(r*u+s)),c=-d*d+u*(u+2*o)+p;else u=-i,d=Math.max(0,-(r*u+s)),c=-d*d+u*(u+2*o)+p;else u<=-h?(d=Math.max(0,-(-r*i+s)),u=d>0?-i:Math.min(Math.max(-i,-o),i),c=-d*d+u*(u+2*o)+p):u<=h?(d=0,u=Math.min(Math.max(-i,-o),i),c=u*(u+2*o)+p):(d=Math.max(0,-(r*i+s)),u=d>0?i:Math.min(Math.max(-i,-o),i),c=-d*d+u*(u+2*o)+p);else u=r>0?-i:i,d=Math.max(0,-(r*u+s)),c=-d*d+u*(u+2*o)+p;return n&&n.copy(this.direction).multiplyScalar(d).add(this.origin),a&&a.copy(rt).multiplyScalar(u).add(it),c}intersectSphere(e,t){at.subVectors(e.center,this.origin);const n=at.dot(this.direction),a=at.dot(at)-n*n,i=e.radius*e.radius;if(a>i)return null;const r=Math.sqrt(i-a),s=n-r,o=n+r;return s<0&&o<0?null:s<0?this.at(o,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,a,i,r,s,o;const p=1/this.direction.x,l=1/this.direction.y,d=1/this.direction.z,u=this.origin;return p>=0?(n=(e.min.x-u.x)*p,a=(e.max.x-u.x)*p):(n=(e.max.x-u.x)*p,a=(e.min.x-u.x)*p),l>=0?(i=(e.min.y-u.y)*l,r=(e.max.y-u.y)*l):(i=(e.max.y-u.y)*l,r=(e.min.y-u.y)*l),n>r||i>a?null:((i>n||n!=n)&&(n=i),(r<a||a!=a)&&(a=r),d>=0?(s=(e.min.z-u.z)*d,o=(e.max.z-u.z)*d):(s=(e.max.z-u.z)*d,o=(e.min.z-u.z)*d),n>o||s>a?null:((s>n||n!=n)&&(n=s),(o<a||a!=a)&&(a=o),a<0?null:this.at(n>=0?n:a,t)))}intersectsBox(e){return null!==this.intersectBox(e,at)}intersectTriangle(e,t,n,a,i){ot.subVectors(t,e),pt.subVectors(n,e),lt.crossVectors(ot,pt);let r,s=this.direction.dot(lt);if(s>0){if(a)return null;r=1}else{if(!(s<0))return null;r=-1,s=-s}st.subVectors(this.origin,e);const o=r*this.direction.dot(pt.crossVectors(st,pt));if(o<0)return null;const p=r*this.direction.dot(ot.cross(st));if(p<0)return null;if(o+p>s)return null;const l=-r*st.dot(lt);return l<0?null:this.at(l/s,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class ut{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,a,i,r,s,o,p,l,d,u,c,h,m,f){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=a,g[1]=i,g[5]=r,g[9]=s,g[13]=o,g[2]=p,g[6]=l,g[10]=d,g[14]=u,g[3]=c,g[7]=h,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new ut).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,a=1/ct.setFromMatrixColumn(e,0).length(),i=1/ct.setFromMatrixColumn(e,1).length(),r=1/ct.setFromMatrixColumn(e,2).length();return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=0,t[4]=n[4]*i,t[5]=n[5]*i,t[6]=n[6]*i,t[7]=0,t[8]=n[8]*r,t[9]=n[9]*r,t[10]=n[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,a=e.y,i=e.z,r=Math.cos(n),s=Math.sin(n),o=Math.cos(a),p=Math.sin(a),l=Math.cos(i),d=Math.sin(i);if("XYZ"===e.order){const e=r*l,n=r*d,a=s*l,i=s*d;t[0]=o*l,t[4]=-o*d,t[8]=p,t[1]=n+a*p,t[5]=e-i*p,t[9]=-s*o,t[2]=i-e*p,t[6]=a+n*p,t[10]=r*o}else if("YXZ"===e.order){const e=o*l,n=o*d,a=p*l,i=p*d;t[0]=e+i*s,t[4]=a*s-n,t[8]=r*p,t[1]=r*d,t[5]=r*l,t[9]=-s,t[2]=n*s-a,t[6]=i+e*s,t[10]=r*o}else if("ZXY"===e.order){const e=o*l,n=o*d,a=p*l,i=p*d;t[0]=e-i*s,t[4]=-r*d,t[8]=a+n*s,t[1]=n+a*s,t[5]=r*l,t[9]=i-e*s,t[2]=-r*p,t[6]=s,t[10]=r*o}else if("ZYX"===e.order){const e=r*l,n=r*d,a=s*l,i=s*d;t[0]=o*l,t[4]=a*p-n,t[8]=e*p+i,t[1]=o*d,t[5]=i*p+e,t[9]=n*p-a,t[2]=-p,t[6]=s*o,t[10]=r*o}else if("YZX"===e.order){const e=r*o,n=r*p,a=s*o,i=s*p;t[0]=o*l,t[4]=i-e*d,t[8]=a*d+n,t[1]=d,t[5]=r*l,t[9]=-s*l,t[2]=-p*l,t[6]=n*d+a,t[10]=e-i*d}else if("XZY"===e.order){const e=r*o,n=r*p,a=s*o,i=s*p;t[0]=o*l,t[4]=-d,t[8]=p*l,t[1]=e*d+i,t[5]=r*l,t[9]=n*d-a,t[2]=a*d-n,t[6]=s*l,t[10]=i*d+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(mt,e,ft)}lookAt(e,t,n){const a=this.elements;return yt.subVectors(e,t),0===yt.lengthSq()&&(yt.z=1),yt.normalize(),gt.crossVectors(n,yt),0===gt.lengthSq()&&(1===Math.abs(n.z)?yt.x+=1e-4:yt.z+=1e-4,yt.normalize(),gt.crossVectors(n,yt)),gt.normalize(),vt.crossVectors(yt,gt),a[0]=gt.x,a[4]=vt.x,a[8]=yt.x,a[1]=gt.y,a[5]=vt.y,a[9]=yt.y,a[2]=gt.z,a[6]=vt.z,a[10]=yt.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,a=t.elements,i=this.elements,r=n[0],s=n[4],o=n[8],p=n[12],l=n[1],d=n[5],u=n[9],c=n[13],h=n[2],m=n[6],f=n[10],g=n[14],v=n[3],y=n[7],x=n[11],b=n[15],w=a[0],_=a[4],S=a[8],T=a[12],E=a[1],M=a[5],N=a[9],C=a[13],A=a[2],I=a[6],R=a[10],k=a[14],D=a[3],P=a[7],L=a[11],O=a[15];return i[0]=r*w+s*E+o*A+p*D,i[4]=r*_+s*M+o*I+p*P,i[8]=r*S+s*N+o*R+p*L,i[12]=r*T+s*C+o*k+p*O,i[1]=l*w+d*E+u*A+c*D,i[5]=l*_+d*M+u*I+c*P,i[9]=l*S+d*N+u*R+c*L,i[13]=l*T+d*C+u*k+c*O,i[2]=h*w+m*E+f*A+g*D,i[6]=h*_+m*M+f*I+g*P,i[10]=h*S+m*N+f*R+g*L,i[14]=h*T+m*C+f*k+g*O,i[3]=v*w+y*E+x*A+b*D,i[7]=v*_+y*M+x*I+b*P,i[11]=v*S+y*N+x*R+b*L,i[15]=v*T+y*C+x*k+b*O,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],a=e[8],i=e[12],r=e[1],s=e[5],o=e[9],p=e[13],l=e[2],d=e[6],u=e[10],c=e[14];return e[3]*(+i*o*d-a*p*d-i*s*u+n*p*u+a*s*c-n*o*c)+e[7]*(+t*o*c-t*p*u+i*r*u-a*r*c+a*p*l-i*o*l)+e[11]*(+t*p*d-t*s*c-i*r*d+n*r*c+i*s*l-n*p*l)+e[15]*(-a*s*l-t*o*d+t*s*u+a*r*d-n*r*u+n*o*l)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const a=this.elements;return e.isVector3?(a[12]=e.x,a[13]=e.y,a[14]=e.z):(a[12]=e,a[13]=t,a[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],a=e[2],i=e[3],r=e[4],s=e[5],o=e[6],p=e[7],l=e[8],d=e[9],u=e[10],c=e[11],h=e[12],m=e[13],f=e[14],g=e[15],v=d*f*p-m*u*p+m*o*c-s*f*c-d*o*g+s*u*g,y=h*u*p-l*f*p-h*o*c+r*f*c+l*o*g-r*u*g,x=l*m*p-h*d*p+h*s*c-r*m*c-l*s*g+r*d*g,b=h*d*o-l*m*o-h*s*u+r*m*u+l*s*f-r*d*f,w=t*v+n*y+a*x+i*b;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/w;return e[0]=v*_,e[1]=(m*u*i-d*f*i-m*a*c+n*f*c+d*a*g-n*u*g)*_,e[2]=(s*f*i-m*o*i+m*a*p-n*f*p-s*a*g+n*o*g)*_,e[3]=(d*o*i-s*u*i-d*a*p+n*u*p+s*a*c-n*o*c)*_,e[4]=y*_,e[5]=(l*f*i-h*u*i+h*a*c-t*f*c-l*a*g+t*u*g)*_,e[6]=(h*o*i-r*f*i-h*a*p+t*f*p+r*a*g-t*o*g)*_,e[7]=(r*u*i-l*o*i+l*a*p-t*u*p-r*a*c+t*o*c)*_,e[8]=x*_,e[9]=(h*d*i-l*m*i-h*n*c+t*m*c+l*n*g-t*d*g)*_,e[10]=(r*m*i-h*s*i+h*n*p-t*m*p-r*n*g+t*s*g)*_,e[11]=(l*s*i-r*d*i-l*n*p+t*d*p+r*n*c-t*s*c)*_,e[12]=b*_,e[13]=(l*m*a-h*d*a+h*n*u-t*m*u-l*n*f+t*d*f)*_,e[14]=(h*s*a-r*m*a-h*n*o+t*m*o+r*n*f-t*s*f)*_,e[15]=(r*d*a-l*s*a+l*n*o-t*d*o-r*n*u+t*s*u)*_,this}scale(e){const t=this.elements,n=e.x,a=e.y,i=e.z;return t[0]*=n,t[4]*=a,t[8]*=i,t[1]*=n,t[5]*=a,t[9]*=i,t[2]*=n,t[6]*=a,t[10]*=i,t[3]*=n,t[7]*=a,t[11]*=i,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],a=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,a))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),a=Math.sin(t),i=1-n,r=e.x,s=e.y,o=e.z,p=i*r,l=i*s;return this.set(p*r+n,p*s-a*o,p*o+a*s,0,p*s+a*o,l*s+n,l*o-a*r,0,p*o-a*s,l*o+a*r,i*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,a,i,r){return this.set(1,n,i,0,e,1,r,0,t,a,1,0,0,0,0,1),this}compose(e,t,n){const a=this.elements,i=t._x,r=t._y,s=t._z,o=t._w,p=i+i,l=r+r,d=s+s,u=i*p,c=i*l,h=i*d,m=r*l,f=r*d,g=s*d,v=o*p,y=o*l,x=o*d,b=n.x,w=n.y,_=n.z;return a[0]=(1-(m+g))*b,a[1]=(c+x)*b,a[2]=(h-y)*b,a[3]=0,a[4]=(c-x)*w,a[5]=(1-(u+g))*w,a[6]=(f+v)*w,a[7]=0,a[8]=(h+y)*_,a[9]=(f-v)*_,a[10]=(1-(u+m))*_,a[11]=0,a[12]=e.x,a[13]=e.y,a[14]=e.z,a[15]=1,this}decompose(e,t,n){const a=this.elements;let i=ct.set(a[0],a[1],a[2]).length();const r=ct.set(a[4],a[5],a[6]).length(),s=ct.set(a[8],a[9],a[10]).length();this.determinant()<0&&(i=-i),e.x=a[12],e.y=a[13],e.z=a[14],ht.copy(this);const o=1/i,p=1/r,l=1/s;return ht.elements[0]*=o,ht.elements[1]*=o,ht.elements[2]*=o,ht.elements[4]*=p,ht.elements[5]*=p,ht.elements[6]*=p,ht.elements[8]*=l,ht.elements[9]*=l,ht.elements[10]*=l,t.setFromRotationMatrix(ht),n.x=i,n.y=r,n.z=s,this}makePerspective(e,t,n,a,i,r){void 0===r&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,o=2*i/(t-e),p=2*i/(n-a),l=(t+e)/(t-e),d=(n+a)/(n-a),u=-(r+i)/(r-i),c=-2*r*i/(r-i);return s[0]=o,s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=p,s[9]=d,s[13]=0,s[2]=0,s[6]=0,s[10]=u,s[14]=c,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,n,a,i,r){const s=this.elements,o=1/(t-e),p=1/(n-a),l=1/(r-i),d=(t+e)*o,u=(n+a)*p,c=(r+i)*l;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-d,s[1]=0,s[5]=2*p,s[9]=0,s[13]=-u,s[2]=0,s[6]=0,s[10]=-2*l,s[14]=-c,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}ut.prototype.isMatrix4=!0;const ct=new Pe,ht=new ut,mt=new Pe(0,0,0),ft=new Pe(1,1,1),gt=new Pe,vt=new Pe,yt=new Pe,xt=new ut,bt=new De;class wt{constructor(e=0,t=0,n=0,a=wt.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=a}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,a=this._order){return this._x=e,this._y=t,this._z=n,this._order=a,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const a=e.elements,i=a[0],r=a[4],s=a[8],o=a[1],p=a[5],l=a[9],d=a[2],u=a[6],c=a[10];switch(t){case"XYZ":this._y=Math.asin(pe(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-l,c),this._z=Math.atan2(-r,i)):(this._x=Math.atan2(u,p),this._z=0);break;case"YXZ":this._x=Math.asin(-pe(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(s,c),this._z=Math.atan2(o,p)):(this._y=Math.atan2(-d,i),this._z=0);break;case"ZXY":this._x=Math.asin(pe(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-d,c),this._z=Math.atan2(-r,p)):(this._y=0,this._z=Math.atan2(o,i));break;case"ZYX":this._y=Math.asin(-pe(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(u,c),this._z=Math.atan2(o,i)):(this._x=0,this._z=Math.atan2(-r,p));break;case"YZX":this._z=Math.asin(pe(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-l,p),this._y=Math.atan2(-d,i)):(this._x=0,this._y=Math.atan2(s,c));break;case"XZY":this._z=Math.asin(-pe(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(u,p),this._y=Math.atan2(s,i)):(this._x=Math.atan2(-l,c),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return xt.makeRotationFromQuaternion(e),this.setFromRotationMatrix(xt,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return bt.setFromEuler(this),this.setFromQuaternion(bt,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}wt.prototype.isEuler=!0,wt.DefaultOrder="XYZ",wt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class _t{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let St=0;const Tt=new Pe,Et=new De,Mt=new ut,Nt=new Pe,Ct=new Pe,At=new Pe,It=new De,Rt=new Pe(1,0,0),kt=new Pe(0,1,0),Dt=new Pe(0,0,1),Pt={type:"added"},Lt={type:"removed"};class Ot extends ae{constructor(){super(),Object.defineProperty(this,"id",{value:St++}),this.uuid=oe(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ot.DefaultUp.clone();const e=new Pe,t=new wt,n=new De,a=new Pe(1,1,1);t._onChange((function(){n.setFromEuler(t,!1)})),n._onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:a},modelViewMatrix:{value:new ut},normalMatrix:{value:new he}}),this.matrix=new ut,this.matrixWorld=new ut,this.matrixAutoUpdate=Ot.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new _t,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Et.setFromAxisAngle(e,t),this.quaternion.multiply(Et),this}rotateOnWorldAxis(e,t){return Et.setFromAxisAngle(e,t),this.quaternion.premultiply(Et),this}rotateX(e){return this.rotateOnAxis(Rt,e)}rotateY(e){return this.rotateOnAxis(kt,e)}rotateZ(e){return this.rotateOnAxis(Dt,e)}translateOnAxis(e,t){return Tt.copy(e).applyQuaternion(this.quaternion),this.position.add(Tt.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Rt,e)}translateY(e){return this.translateOnAxis(kt,e)}translateZ(e){return this.translateOnAxis(Dt,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Mt.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Nt.copy(e):Nt.set(e,t,n);const a=this.parent;this.updateWorldMatrix(!0,!1),Ct.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Mt.lookAt(Ct,Nt,this.up):Mt.lookAt(Nt,Ct,this.up),this.quaternion.setFromRotationMatrix(Mt),a&&(Mt.extractRotation(a.matrixWorld),Et.setFromRotationMatrix(Mt),this.quaternion.premultiply(Et.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Pt)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Lt)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Lt)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Mt.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Mt.multiply(e.parent.matrixWorld)),e.applyMatrix4(Mt),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,a=this.children.length;n<a;n++){const a=this.children[n].getObjectByProperty(e,t);if(void 0!==a)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ct,e,At),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ct,It,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,a=t.length;n<a;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,a=t.length;n<a;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,a=t.length;n<a;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++)e[t].updateWorldMatrix(!1,!0)}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const a={};function i(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),!1===this.frustumCulled&&(a.frustumCulled=!1),0!==this.renderOrder&&(a.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),a.layers=this.layers.mask,a.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(a.matrixAutoUpdate=!1),this.isInstancedMesh&&(a.type="InstancedMesh",a.count=this.count,a.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(a.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?a.background=this.background.toJSON():this.background.isTexture&&(a.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(a.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){a.geometry=i(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,a=n.length;t<a;t++){const a=n[t];i(e.shapes,a)}else i(e.shapes,n)}}if(this.isSkinnedMesh&&(a.bindMode=this.bindMode,a.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(e.skeletons,this.skeleton),a.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,a=this.material.length;n<a;n++)t.push(i(e.materials,this.material[n]));a.material=t}else a.material=i(e.materials,this.material);if(this.children.length>0){a.children=[];for(let t=0;t<this.children.length;t++)a.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){a.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];a.animations.push(i(e.animations,n))}}if(t){const t=r(e.geometries),a=r(e.materials),i=r(e.textures),s=r(e.images),o=r(e.shapes),p=r(e.skeletons),l=r(e.animations),d=r(e.nodes);t.length>0&&(n.geometries=t),a.length>0&&(n.materials=a),i.length>0&&(n.textures=i),s.length>0&&(n.images=s),o.length>0&&(n.shapes=o),p.length>0&&(n.skeletons=p),l.length>0&&(n.animations=l),d.length>0&&(n.nodes=d)}return n.object=a,n;function r(e){const t=[];for(const n in e){const a=e[n];delete a.metadata,t.push(a)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const n=e.children[t];this.add(n.clone())}return this}}Ot.DefaultUp=new Pe(0,1,0),Ot.DefaultMatrixAutoUpdate=!0,Ot.prototype.isObject3D=!0;const Bt=new Pe,Ft=new Pe,$t=new Pe,Vt=new Pe,zt=new Pe,Ut=new Pe,Gt=new Pe,Wt=new Pe,Ht=new Pe,qt=new Pe;class jt{constructor(e=new Pe,t=new Pe,n=new Pe){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,a){a.subVectors(n,t),Bt.subVectors(e,t),a.cross(Bt);const i=a.lengthSq();return i>0?a.multiplyScalar(1/Math.sqrt(i)):a.set(0,0,0)}static getBarycoord(e,t,n,a,i){Bt.subVectors(a,t),Ft.subVectors(n,t),$t.subVectors(e,t);const r=Bt.dot(Bt),s=Bt.dot(Ft),o=Bt.dot($t),p=Ft.dot(Ft),l=Ft.dot($t),d=r*p-s*s;if(0===d)return i.set(-2,-1,-1);const u=1/d,c=(p*o-s*l)*u,h=(r*l-s*o)*u;return i.set(1-c-h,h,c)}static containsPoint(e,t,n,a){return this.getBarycoord(e,t,n,a,Vt),Vt.x>=0&&Vt.y>=0&&Vt.x+Vt.y<=1}static getUV(e,t,n,a,i,r,s,o){return this.getBarycoord(e,t,n,a,Vt),o.set(0,0),o.addScaledVector(i,Vt.x),o.addScaledVector(r,Vt.y),o.addScaledVector(s,Vt.z),o}static isFrontFacing(e,t,n,a){return Bt.subVectors(n,t),Ft.subVectors(e,t),Bt.cross(Ft).dot(a)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,a){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[a]),this}setFromAttributeAndIndices(e,t,n,a){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,a),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Bt.subVectors(this.c,this.b),Ft.subVectors(this.a,this.b),.5*Bt.cross(Ft).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return jt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return jt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,a,i){return jt.getUV(e,this.a,this.b,this.c,t,n,a,i)}containsPoint(e){return jt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return jt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,a=this.b,i=this.c;let r,s;zt.subVectors(a,n),Ut.subVectors(i,n),Wt.subVectors(e,n);const o=zt.dot(Wt),p=Ut.dot(Wt);if(o<=0&&p<=0)return t.copy(n);Ht.subVectors(e,a);const l=zt.dot(Ht),d=Ut.dot(Ht);if(l>=0&&d<=l)return t.copy(a);const u=o*d-l*p;if(u<=0&&o>=0&&l<=0)return r=o/(o-l),t.copy(n).addScaledVector(zt,r);qt.subVectors(e,i);const c=zt.dot(qt),h=Ut.dot(qt);if(h>=0&&c<=h)return t.copy(i);const m=c*p-o*h;if(m<=0&&p>=0&&h<=0)return s=p/(p-h),t.copy(n).addScaledVector(Ut,s);const f=l*h-c*d;if(f<=0&&d-l>=0&&c-h>=0)return Gt.subVectors(i,a),s=(d-l)/(d-l+(c-h)),t.copy(a).addScaledVector(Gt,s);const g=1/(f+m+u);return r=m*g,s=u*g,t.copy(n).addScaledVector(zt,r).addScaledVector(Ut,s)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Xt=0;class Kt extends ae{constructor(){super(),Object.defineProperty(this,"id",{value:Xt++}),this.uuid=oe(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=w,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Q,this.stencilZFail=Q,this.stencilZPass=Q,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const a=this[t];void 0!==a?a&&a.isColor?a.set(n):a&&a.isVector3&&n&&n.isVector3?a.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function a(e){const t=[];for(const n in e){const a=e[n];delete a.metadata,t.push(a)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){const t=a(e.textures),i=a(e.images);t.length>0&&(n.textures=t),i.length>0&&(n.images=i)}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let a=0;a!==e;++a)n[a]=t[a].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}Kt.prototype.isMaterial=!0,Kt.fromType=function(){return null};class Yt extends Kt{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new _e(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}Yt.prototype.isMeshBasicMaterial=!0;const Zt=new Pe,Qt=new ce;class Jt{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=J,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let a=0,i=this.itemSize;a<i;a++)this.array[e+a]=t.array[n+a];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let a=0,i=e.length;a<i;a++){let i=e[a];void 0===i&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",a),i=new _e),t[n++]=i.r,t[n++]=i.g,t[n++]=i.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let a=0,i=e.length;a<i;a++){let i=e[a];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",a),i=new ce),t[n++]=i.x,t[n++]=i.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let a=0,i=e.length;a<i;a++){let i=e[a];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",a),i=new Pe),t[n++]=i.x,t[n++]=i.y,t[n++]=i.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let a=0,i=e.length;a<i;a++){let i=e[a];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",a),i=new Ae),t[n++]=i.x,t[n++]=i.y,t[n++]=i.z,t[n++]=i.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)Qt.fromBufferAttribute(this,t),Qt.applyMatrix3(e),this.setXY(t,Qt.x,Qt.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)Zt.fromBufferAttribute(this,t),Zt.applyMatrix3(e),this.setXYZ(t,Zt.x,Zt.y,Zt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Zt.x=this.getX(t),Zt.y=this.getY(t),Zt.z=this.getZ(t),Zt.applyMatrix4(e),this.setXYZ(t,Zt.x,Zt.y,Zt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Zt.x=this.getX(t),Zt.y=this.getY(t),Zt.z=this.getZ(t),Zt.applyNormalMatrix(e),this.setXYZ(t,Zt.x,Zt.y,Zt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Zt.x=this.getX(t),Zt.y=this.getY(t),Zt.z=this.getZ(t),Zt.transformDirection(e),this.setXYZ(t,Zt.x,Zt.y,Zt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,a){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=a,this}setXYZW(e,t,n,a,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=a,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==J&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}Jt.prototype.isBufferAttribute=!0;class en extends Jt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class tn extends Jt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}(class extends Jt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}).prototype.isFloat16BufferAttribute=!0;class nn extends Jt{constructor(e,t,n){super(new Float32Array(e),t,n)}}let an=0;const rn=new ut,sn=new Ot,on=new Pe,pn=new Be,ln=new Be,dn=new Pe;class un extends ae{constructor(){super(),Object.defineProperty(this,"id",{value:an++}),this.uuid=oe(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(me(e)?tn:en)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new he).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const a=this.attributes.tangent;return void 0!==a&&(a.transformDirection(e),a.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return rn.makeRotationFromQuaternion(e),this.applyMatrix4(rn),this}rotateX(e){return rn.makeRotationX(e),this.applyMatrix4(rn),this}rotateY(e){return rn.makeRotationY(e),this.applyMatrix4(rn),this}rotateZ(e){return rn.makeRotationZ(e),this.applyMatrix4(rn),this}translate(e,t,n){return rn.makeTranslation(e,t,n),this.applyMatrix4(rn),this}scale(e,t,n){return rn.makeScale(e,t,n),this.applyMatrix4(rn),this}lookAt(e){return sn.lookAt(e),sn.updateMatrix(),this.applyMatrix4(sn.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(on).negate(),this.translate(on.x,on.y,on.z),this}setFromPoints(e){const t=[];for(let n=0,a=e.length;n<a;n++){const a=e[n];t.push(a.x,a.y,a.z||0)}return this.setAttribute("position",new nn(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Be);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Pe(-1/0,-1/0,-1/0),new Pe(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];pn.setFromBufferAttribute(n),this.morphTargetsRelative?(dn.addVectors(this.boundingBox.min,pn.min),this.boundingBox.expandByPoint(dn),dn.addVectors(this.boundingBox.max,pn.max),this.boundingBox.expandByPoint(dn)):(this.boundingBox.expandByPoint(pn.min),this.boundingBox.expandByPoint(pn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new nt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Pe,1/0);if(e){const n=this.boundingSphere.center;if(pn.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];ln.setFromBufferAttribute(n),this.morphTargetsRelative?(dn.addVectors(pn.min,ln.min),pn.expandByPoint(dn),dn.addVectors(pn.max,ln.max),pn.expandByPoint(dn)):(pn.expandByPoint(ln.min),pn.expandByPoint(ln.max))}pn.getCenter(n);let a=0;for(let t=0,i=e.count;t<i;t++)dn.fromBufferAttribute(e,t),a=Math.max(a,n.distanceToSquared(dn));if(t)for(let i=0,r=t.length;i<r;i++){const r=t[i],s=this.morphTargetsRelative;for(let t=0,i=r.count;t<i;t++)dn.fromBufferAttribute(r,t),s&&(on.fromBufferAttribute(e,t),dn.add(on)),a=Math.max(a,n.distanceToSquared(dn))}this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,a=t.position.array,i=t.normal.array,r=t.uv.array,s=a.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Jt(new Float32Array(4*s),4));const o=this.getAttribute("tangent").array,p=[],l=[];for(let e=0;e<s;e++)p[e]=new Pe,l[e]=new Pe;const d=new Pe,u=new Pe,c=new Pe,h=new ce,m=new ce,f=new ce,g=new Pe,v=new Pe;function y(e,t,n){d.fromArray(a,3*e),u.fromArray(a,3*t),c.fromArray(a,3*n),h.fromArray(r,2*e),m.fromArray(r,2*t),f.fromArray(r,2*n),u.sub(d),c.sub(d),m.sub(h),f.sub(h);const i=1/(m.x*f.y-f.x*m.y);isFinite(i)&&(g.copy(u).multiplyScalar(f.y).addScaledVector(c,-m.y).multiplyScalar(i),v.copy(c).multiplyScalar(m.x).addScaledVector(u,-f.x).multiplyScalar(i),p[e].add(g),p[t].add(g),p[n].add(g),l[e].add(v),l[t].add(v),l[n].add(v))}let x=this.groups;0===x.length&&(x=[{start:0,count:n.length}]);for(let e=0,t=x.length;e<t;++e){const t=x[e],a=t.start;for(let e=a,i=a+t.count;e<i;e+=3)y(n[e+0],n[e+1],n[e+2])}const b=new Pe,w=new Pe,_=new Pe,S=new Pe;function T(e){_.fromArray(i,3*e),S.copy(_);const t=p[e];b.copy(t),b.sub(_.multiplyScalar(_.dot(t))).normalize(),w.crossVectors(S,t);const n=w.dot(l[e])<0?-1:1;o[4*e]=b.x,o[4*e+1]=b.y,o[4*e+2]=b.z,o[4*e+3]=n}for(let e=0,t=x.length;e<t;++e){const t=x[e],a=t.start;for(let e=a,i=a+t.count;e<i;e+=3)T(n[e+0]),T(n[e+1]),T(n[e+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new Jt(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const a=new Pe,i=new Pe,r=new Pe,s=new Pe,o=new Pe,p=new Pe,l=new Pe,d=new Pe;if(e)for(let u=0,c=e.count;u<c;u+=3){const c=e.getX(u+0),h=e.getX(u+1),m=e.getX(u+2);a.fromBufferAttribute(t,c),i.fromBufferAttribute(t,h),r.fromBufferAttribute(t,m),l.subVectors(r,i),d.subVectors(a,i),l.cross(d),s.fromBufferAttribute(n,c),o.fromBufferAttribute(n,h),p.fromBufferAttribute(n,m),s.add(l),o.add(l),p.add(l),n.setXYZ(c,s.x,s.y,s.z),n.setXYZ(h,o.x,o.y,o.z),n.setXYZ(m,p.x,p.y,p.z)}else for(let e=0,s=t.count;e<s;e+=3)a.fromBufferAttribute(t,e+0),i.fromBufferAttribute(t,e+1),r.fromBufferAttribute(t,e+2),l.subVectors(r,i),d.subVectors(a,i),l.cross(d),n.setXYZ(e+0,l.x,l.y,l.z),n.setXYZ(e+1,l.x,l.y,l.z),n.setXYZ(e+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const a in n){if(void 0===e.attributes[a])continue;const i=n[a].array,r=e.attributes[a],s=r.array,o=r.itemSize*t,p=Math.min(s.length,i.length-o);for(let e=0,t=o;e<p;e++,t++)i[t]=s[e]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)dn.fromBufferAttribute(e,t),dn.normalize(),e.setXYZ(t,dn.x,dn.y,dn.z)}toNonIndexed(){function e(e,t){const n=e.array,a=e.itemSize,i=e.normalized,r=new n.constructor(t.length*a);let s=0,o=0;for(let i=0,p=t.length;i<p;i++){s=e.isInterleavedBufferAttribute?t[i]*e.data.stride+e.offset:t[i]*a;for(let e=0;e<a;e++)r[o++]=n[s++]}return new Jt(r,a,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new un,n=this.index.array,a=this.attributes;for(const i in a){const r=e(a[i],n);t.setAttribute(i,r)}const i=this.morphAttributes;for(const a in i){const r=[],s=i[a];for(let t=0,a=s.length;t<a;t++){const a=e(s[t],n);r.push(a)}t.morphAttributes[a]=r}t.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let e=0,n=r.length;e<n;e++){const n=r[e];t.addGroup(n.start,n.count,n.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const t in n){const a=n[t];e.data.attributes[t]=a.toJSON(e.data)}const a={};let i=!1;for(const t in this.morphAttributes){const n=this.morphAttributes[t],r=[];for(let t=0,a=n.length;t<a;t++){const a=n[t];r.push(a.toJSON(e.data))}r.length>0&&(a[t]=r,i=!0)}i&&(e.data.morphAttributes=a,e.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(e.data.groups=JSON.parse(JSON.stringify(r)));const s=this.boundingSphere;return null!==s&&(e.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const a=e.attributes;for(const e in a){const n=a[e];this.setAttribute(e,n.clone(t))}const i=e.morphAttributes;for(const e in i){const n=[],a=i[e];for(let e=0,i=a.length;e<i;e++)n.push(a[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;const r=e.groups;for(let e=0,t=r.length;e<t;e++){const t=r[e];this.addGroup(t.start,t.count,t.materialIndex)}const s=e.boundingBox;null!==s&&(this.boundingBox=s.clone());const o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}un.prototype.isBufferGeometry=!0;const cn=new ut,hn=new dt,mn=new nt,fn=new Pe,gn=new Pe,vn=new Pe,yn=new Pe,xn=new Pe,bn=new Pe,wn=new Pe,_n=new Pe,Sn=new Pe,Tn=new ce,En=new ce,Mn=new ce,Nn=new Pe,Cn=new Pe;class An extends Ot{constructor(e=new un,t=new Yt){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,a=this.material,i=this.matrixWorld;if(void 0===a)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),mn.copy(n.boundingSphere),mn.applyMatrix4(i),!1===e.ray.intersectsSphere(mn))return;if(cn.copy(i).invert(),hn.copy(e.ray).applyMatrix4(cn),null!==n.boundingBox&&!1===hn.intersectsBox(n.boundingBox))return;let r;if(n.isBufferGeometry){const i=n.index,s=n.attributes.position,o=n.morphAttributes.position,p=n.morphTargetsRelative,l=n.attributes.uv,d=n.attributes.uv2,u=n.groups,c=n.drawRange;if(null!==i)if(Array.isArray(a))for(let n=0,h=u.length;n<h;n++){const h=u[n],m=a[h.materialIndex];for(let n=Math.max(h.start,c.start),a=Math.min(i.count,Math.min(h.start+h.count,c.start+c.count));n<a;n+=3){const a=i.getX(n),u=i.getX(n+1),c=i.getX(n+2);r=In(this,m,e,hn,s,o,p,l,d,a,u,c),r&&(r.faceIndex=Math.floor(n/3),r.face.materialIndex=h.materialIndex,t.push(r))}}else for(let n=Math.max(0,c.start),u=Math.min(i.count,c.start+c.count);n<u;n+=3){const u=i.getX(n),c=i.getX(n+1),h=i.getX(n+2);r=In(this,a,e,hn,s,o,p,l,d,u,c,h),r&&(r.faceIndex=Math.floor(n/3),t.push(r))}else if(void 0!==s)if(Array.isArray(a))for(let n=0,i=u.length;n<i;n++){const i=u[n],h=a[i.materialIndex];for(let n=Math.max(i.start,c.start),a=Math.min(s.count,Math.min(i.start+i.count,c.start+c.count));n<a;n+=3)r=In(this,h,e,hn,s,o,p,l,d,n,n+1,n+2),r&&(r.faceIndex=Math.floor(n/3),r.face.materialIndex=i.materialIndex,t.push(r))}else for(let n=Math.max(0,c.start),i=Math.min(s.count,c.start+c.count);n<i;n+=3)r=In(this,a,e,hn,s,o,p,l,d,n,n+1,n+2),r&&(r.faceIndex=Math.floor(n/3),t.push(r))}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function In(e,t,n,a,i,r,s,o,p,l,d,u){fn.fromBufferAttribute(i,l),gn.fromBufferAttribute(i,d),vn.fromBufferAttribute(i,u);const c=e.morphTargetInfluences;if(r&&c){wn.set(0,0,0),_n.set(0,0,0),Sn.set(0,0,0);for(let e=0,t=r.length;e<t;e++){const t=c[e],n=r[e];0!==t&&(yn.fromBufferAttribute(n,l),xn.fromBufferAttribute(n,d),bn.fromBufferAttribute(n,u),s?(wn.addScaledVector(yn,t),_n.addScaledVector(xn,t),Sn.addScaledVector(bn,t)):(wn.addScaledVector(yn.sub(fn),t),_n.addScaledVector(xn.sub(gn),t),Sn.addScaledVector(bn.sub(vn),t)))}fn.add(wn),gn.add(_n),vn.add(Sn)}e.isSkinnedMesh&&(e.boneTransform(l,fn),e.boneTransform(d,gn),e.boneTransform(u,vn));const h=function(e,t,n,a,i,r,s,o){let p;if(p=1===t.side?a.intersectTriangle(s,r,i,!0,o):a.intersectTriangle(i,r,s,2!==t.side,o),null===p)return null;Cn.copy(o),Cn.applyMatrix4(e.matrixWorld);const l=n.ray.origin.distanceTo(Cn);return l<n.near||l>n.far?null:{distance:l,point:Cn.clone(),object:e}}(e,t,n,a,fn,gn,vn,Nn);if(h){o&&(Tn.fromBufferAttribute(o,l),En.fromBufferAttribute(o,d),Mn.fromBufferAttribute(o,u),h.uv=jt.getUV(Nn,fn,gn,vn,Tn,En,Mn,new ce)),p&&(Tn.fromBufferAttribute(p,l),En.fromBufferAttribute(p,d),Mn.fromBufferAttribute(p,u),h.uv2=jt.getUV(Nn,fn,gn,vn,Tn,En,Mn,new ce));const e={a:l,b:d,c:u,normal:new Pe,materialIndex:0};jt.getNormal(fn,gn,vn,e.normal),h.face=e}return h}An.prototype.isMesh=!0;class Rn extends un{constructor(e=1,t=1,n=1,a=1,i=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:a,heightSegments:i,depthSegments:r};const s=this;a=Math.floor(a),i=Math.floor(i),r=Math.floor(r);const o=[],p=[],l=[],d=[];let u=0,c=0;function h(e,t,n,a,i,r,h,m,f,g,v){const y=r/f,x=h/g,b=r/2,w=h/2,_=m/2,S=f+1,T=g+1;let E=0,M=0;const N=new Pe;for(let r=0;r<T;r++){const s=r*x-w;for(let o=0;o<S;o++){const u=o*y-b;N[e]=u*a,N[t]=s*i,N[n]=_,p.push(N.x,N.y,N.z),N[e]=0,N[t]=0,N[n]=m>0?1:-1,l.push(N.x,N.y,N.z),d.push(o/f),d.push(1-r/g),E+=1}}for(let e=0;e<g;e++)for(let t=0;t<f;t++){const n=u+t+S*e,a=u+t+S*(e+1),i=u+(t+1)+S*(e+1),r=u+(t+1)+S*e;o.push(n,a,r),o.push(a,i,r),M+=6}s.addGroup(c,M,v),c+=M,u+=E}h("z","y","x",-1,-1,n,t,e,r,i,0),h("z","y","x",1,-1,n,t,-e,r,i,1),h("x","z","y",1,1,e,n,t,a,r,2),h("x","z","y",1,-1,e,n,-t,a,r,3),h("x","y","z",1,-1,e,t,n,a,i,4),h("x","y","z",-1,-1,e,t,-n,a,i,5),this.setIndex(o),this.setAttribute("position",new nn(p,3)),this.setAttribute("normal",new nn(l,3)),this.setAttribute("uv",new nn(d,2))}static fromJSON(e){return new Rn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function kn(e){const t={};for(const n in e){t[n]={};for(const a in e[n]){const i=e[n][a];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[n][a]=i.clone():Array.isArray(i)?t[n][a]=i.slice():t[n][a]=i}}return t}function Dn(e){const t={};for(let n=0;n<e.length;n++){const a=kn(e[n]);for(const e in a)t[e]=a[e]}return t}const Pn={clone:kn,merge:Dn};class Ln extends Kt{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=kn(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const a=this.uniforms[n].value;a&&a.isTexture?t.uniforms[n]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[n]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[n]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[n]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[n]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[n]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[n]={type:"m4",value:a.toArray()}:t.uniforms[n]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}Ln.prototype.isShaderMaterial=!0;class On extends Ot{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new ut,this.projectionMatrix=new ut,this.projectionMatrixInverse=new ut}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}On.prototype.isCamera=!0;class Bn extends On{constructor(e=50,t=1,n=.1,a=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=a,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*se*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*re*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*se*Math.atan(Math.tan(.5*re*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,a,i,r){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=a,this.view.width=i,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*re*this.fov)/this.zoom,n=2*t,a=this.aspect*n,i=-.5*a;const r=this.view;if(null!==this.view&&this.view.enabled){const e=r.fullWidth,s=r.fullHeight;i+=r.offsetX*a/e,t-=r.offsetY*n/s,a*=r.width/e,n*=r.height/s}const s=this.filmOffset;0!==s&&(i+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+a,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}Bn.prototype.isPerspectiveCamera=!0;const Fn=90;class $n extends Ot{constructor(e,t,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const a=new Bn(Fn,1,e,t);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new Pe(1,0,0)),this.add(a);const i=new Bn(Fn,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new Pe(-1,0,0)),this.add(i);const r=new Bn(Fn,1,e,t);r.layers=this.layers,r.up.set(0,0,1),r.lookAt(new Pe(0,1,0)),this.add(r);const s=new Bn(Fn,1,e,t);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new Pe(0,-1,0)),this.add(s);const o=new Bn(Fn,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new Pe(0,0,1)),this.add(o);const p=new Bn(Fn,1,e,t);p.layers=this.layers,p.up.set(0,-1,0),p.lookAt(new Pe(0,0,-1)),this.add(p)}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[a,i,r,s,o,p]=this.children,l=e.xr.enabled,d=e.getRenderTarget();e.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,a),e.setRenderTarget(n,1),e.render(t,i),e.setRenderTarget(n,2),e.render(t,r),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,o),n.texture.generateMipmaps=u,e.setRenderTarget(n,5),e.render(t,p),e.setRenderTarget(d),e.xr.enabled=l,n.texture.needsPMREMUpdate=!0}}class Vn extends Ce{constructor(e,t,n,a,i,r,s,o,p,l){super(e=void 0!==e?e:[],t=void 0!==t?t:_,n,a,i,r,s,o,p,l),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}Vn.prototype.isCubeTexture=!0;class zn extends Ie{constructor(e,t={}){super(e,e,t);const n={width:e,height:e,depth:1},a=[n,n,n,n,n,n];this.texture=new Vn(a,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:A}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=B,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={tEquirect:{value:null}},a="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",i="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",r=new Rn(5,5,5),s=new Ln({name:"CubemapFromEquirect",uniforms:kn(n),vertexShader:a,fragmentShader:i,side:1,blending:0});s.uniforms.tEquirect.value=t;const o=new An(r,s),p=t.minFilter;return t.minFilter===I&&(t.minFilter=A),new $n(1,10,this).update(e,o),t.minFilter=p,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,a){const i=e.getRenderTarget();for(let i=0;i<6;i++)e.setRenderTarget(this,i),e.clear(t,n,a);e.setRenderTarget(i)}}zn.prototype.isWebGLCubeRenderTarget=!0;const Un=new Pe,Gn=new Pe,Wn=new he;class Hn{constructor(e=new Pe(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,a){return this.normal.set(e,t,n),this.constant=a,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const a=Un.subVectors(n,t).cross(Gn.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(a,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Un),a=this.normal.dot(n);if(0===a)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const i=-(e.start.dot(this.normal)+this.constant)/a;return i<0||i>1?null:t.copy(n).multiplyScalar(i).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Wn.getNormalMatrix(e),a=this.coplanarPoint(Un).applyMatrix4(e),i=this.normal.applyMatrix3(n).normalize();return this.constant=-a.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Hn.prototype.isPlane=!0;const qn=new nt,jn=new Pe;class Xn{constructor(e=new Hn,t=new Hn,n=new Hn,a=new Hn,i=new Hn,r=new Hn){this.planes=[e,t,n,a,i,r]}set(e,t,n,a,i,r){const s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(a),s[4].copy(i),s[5].copy(r),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,a=n[0],i=n[1],r=n[2],s=n[3],o=n[4],p=n[5],l=n[6],d=n[7],u=n[8],c=n[9],h=n[10],m=n[11],f=n[12],g=n[13],v=n[14],y=n[15];return t[0].setComponents(s-a,d-o,m-u,y-f).normalize(),t[1].setComponents(s+a,d+o,m+u,y+f).normalize(),t[2].setComponents(s+i,d+p,m+c,y+g).normalize(),t[3].setComponents(s-i,d-p,m-c,y-g).normalize(),t[4].setComponents(s-r,d-l,m-h,y-v).normalize(),t[5].setComponents(s+r,d+l,m+h,y+v).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),qn.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(qn)}intersectsSprite(e){return qn.center.set(0,0,0),qn.radius=.7071067811865476,qn.applyMatrix4(e.matrixWorld),this.intersectsSphere(qn)}intersectsSphere(e){const t=this.planes,n=e.center,a=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<a)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const a=t[n];if(jn.x=a.normal.x>0?e.max.x:e.min.x,jn.y=a.normal.y>0?e.max.y:e.min.y,jn.z=a.normal.z>0?e.max.z:e.min.z,a.distanceToPoint(jn)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Kn(){let e=null,t=!1,n=null,a=null;function i(t,r){n(t,r),a=e.requestAnimationFrame(i)}return{start:function(){!0!==t&&null!==n&&(a=e.requestAnimationFrame(i),t=!0)},stop:function(){e.cancelAnimationFrame(a),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function Yn(e,t){const n=t.isWebGL2,a=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),a.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const n=a.get(t);n&&(e.deleteBuffer(n.buffer),a.delete(t))},update:function(t,i){if(t.isGLBufferAttribute){const e=a.get(t);return void((!e||e.version<t.version)&&a.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const r=a.get(t);void 0===r?a.set(t,function(t,a){const i=t.array,r=t.usage,s=e.createBuffer();let o;if(e.bindBuffer(a,s),e.bufferData(a,i,r),t.onUploadCallback(),i instanceof Float32Array)o=5126;else if(i instanceof Uint16Array)if(t.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");o=5131}else o=5123;else if(i instanceof Int16Array)o=5122;else if(i instanceof Uint32Array)o=5125;else if(i instanceof Int32Array)o=5124;else if(i instanceof Int8Array)o=5120;else if(i instanceof Uint8Array)o=5121;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);o=5121}return{buffer:s,type:o,bytesPerElement:i.BYTES_PER_ELEMENT,version:t.version}}(t,i)):r.version<t.version&&(function(t,a,i){const r=a.array,s=a.updateRange;e.bindBuffer(i,t),-1===s.count?e.bufferSubData(i,0,r):(n?e.bufferSubData(i,s.offset*r.BYTES_PER_ELEMENT,r,s.offset,s.count):e.bufferSubData(i,s.offset*r.BYTES_PER_ELEMENT,r.subarray(s.offset,s.offset+s.count)),s.count=-1)}(r.buffer,t,i),r.version=t.version)}}}class Zn extends un{constructor(e=1,t=1,n=1,a=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:a};const i=e/2,r=t/2,s=Math.floor(n),o=Math.floor(a),p=s+1,l=o+1,d=e/s,u=t/o,c=[],h=[],m=[],f=[];for(let e=0;e<l;e++){const t=e*u-r;for(let n=0;n<p;n++){const a=n*d-i;h.push(a,-t,0),m.push(0,0,1),f.push(n/s),f.push(1-e/o)}}for(let e=0;e<o;e++)for(let t=0;t<s;t++){const n=t+p*e,a=t+p*(e+1),i=t+1+p*(e+1),r=t+1+p*e;c.push(n,a,r),c.push(a,i,r)}this.setIndex(c),this.setAttribute("position",new nn(h,3)),this.setAttribute("normal",new nn(m,3)),this.setAttribute("uv",new nn(f,2))}static fromJSON(e){return new Zn(e.width,e.height,e.widthSegments,e.heightSegments)}}const Qn={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec;\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\t\treflectVec = reflect( - viewDir, normal );\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\t#else\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\t\t\t#endif\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tlightMapIrradiance *= PI;\n\t#endif\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ]\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform vec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tfloat texelIndex = float( vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset );\n\t\t\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\n\t\t\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n\t\t\treturn texture( morphTargetsTexture, morphUV );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},Jn={common:{diffuse:{value:new _e(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new he},uv2Transform:{value:new he},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ce(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new _e(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new _e(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new he}},sprite:{diffuse:{value:new _e(16777215)},opacity:{value:1},center:{value:new ce(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new he}}},ea={basic:{uniforms:Dn([Jn.common,Jn.specularmap,Jn.envmap,Jn.aomap,Jn.lightmap,Jn.fog]),vertexShader:Qn.meshbasic_vert,fragmentShader:Qn.meshbasic_frag},lambert:{uniforms:Dn([Jn.common,Jn.specularmap,Jn.envmap,Jn.aomap,Jn.lightmap,Jn.emissivemap,Jn.fog,Jn.lights,{emissive:{value:new _e(0)}}]),vertexShader:Qn.meshlambert_vert,fragmentShader:Qn.meshlambert_frag},phong:{uniforms:Dn([Jn.common,Jn.specularmap,Jn.envmap,Jn.aomap,Jn.lightmap,Jn.emissivemap,Jn.bumpmap,Jn.normalmap,Jn.displacementmap,Jn.fog,Jn.lights,{emissive:{value:new _e(0)},specular:{value:new _e(1118481)},shininess:{value:30}}]),vertexShader:Qn.meshphong_vert,fragmentShader:Qn.meshphong_frag},standard:{uniforms:Dn([Jn.common,Jn.envmap,Jn.aomap,Jn.lightmap,Jn.emissivemap,Jn.bumpmap,Jn.normalmap,Jn.displacementmap,Jn.roughnessmap,Jn.metalnessmap,Jn.fog,Jn.lights,{emissive:{value:new _e(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Qn.meshphysical_vert,fragmentShader:Qn.meshphysical_frag},toon:{uniforms:Dn([Jn.common,Jn.aomap,Jn.lightmap,Jn.emissivemap,Jn.bumpmap,Jn.normalmap,Jn.displacementmap,Jn.gradientmap,Jn.fog,Jn.lights,{emissive:{value:new _e(0)}}]),vertexShader:Qn.meshtoon_vert,fragmentShader:Qn.meshtoon_frag},matcap:{uniforms:Dn([Jn.common,Jn.bumpmap,Jn.normalmap,Jn.displacementmap,Jn.fog,{matcap:{value:null}}]),vertexShader:Qn.meshmatcap_vert,fragmentShader:Qn.meshmatcap_frag},points:{uniforms:Dn([Jn.points,Jn.fog]),vertexShader:Qn.points_vert,fragmentShader:Qn.points_frag},dashed:{uniforms:Dn([Jn.common,Jn.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Qn.linedashed_vert,fragmentShader:Qn.linedashed_frag},depth:{uniforms:Dn([Jn.common,Jn.displacementmap]),vertexShader:Qn.depth_vert,fragmentShader:Qn.depth_frag},normal:{uniforms:Dn([Jn.common,Jn.bumpmap,Jn.normalmap,Jn.displacementmap,{opacity:{value:1}}]),vertexShader:Qn.meshnormal_vert,fragmentShader:Qn.meshnormal_frag},sprite:{uniforms:Dn([Jn.sprite,Jn.fog]),vertexShader:Qn.sprite_vert,fragmentShader:Qn.sprite_frag},background:{uniforms:{uvTransform:{value:new he},t2D:{value:null}},vertexShader:Qn.background_vert,fragmentShader:Qn.background_frag},cube:{uniforms:Dn([Jn.envmap,{opacity:{value:1}}]),vertexShader:Qn.cube_vert,fragmentShader:Qn.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Qn.equirect_vert,fragmentShader:Qn.equirect_frag},distanceRGBA:{uniforms:Dn([Jn.common,Jn.displacementmap,{referencePosition:{value:new Pe},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Qn.distanceRGBA_vert,fragmentShader:Qn.distanceRGBA_frag},shadow:{uniforms:Dn([Jn.lights,Jn.fog,{color:{value:new _e(0)},opacity:{value:1}}]),vertexShader:Qn.shadow_vert,fragmentShader:Qn.shadow_frag}};function ta(e,t,n,a,i,r){const s=new _e(0);let o,p,l=!0===i?0:1,d=null,u=0,c=null;function h(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,r)}return{getClearColor:function(){return s},setClearColor:function(e,t=1){s.set(e),l=t,h(s,l)},getClearAlpha:function(){return l},setClearAlpha:function(e){l=e,h(s,l)},render:function(n,i){let r=!1,m=!0===i.isScene?i.background:null;m&&m.isTexture&&(m=t.get(m));const f=e.xr,g=f.getSession&&f.getSession();g&&"additive"===g.environmentBlendMode&&(m=null),null===m?h(s,l):m&&m.isColor&&(h(m,1),r=!0),(e.autoClear||r)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),m&&(m.isCubeTexture||m.mapping===T)?(void 0===p&&(p=new An(new Rn(1,1,1),new Ln({name:"BackgroundCubeMaterial",uniforms:kn(ea.cube.uniforms),vertexShader:ea.cube.vertexShader,fragmentShader:ea.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),a.update(p)),p.material.uniforms.envMap.value=m,p.material.uniforms.flipEnvMap.value=m.isCubeTexture&&!1===m.isRenderTargetTexture?-1:1,d===m&&u===m.version&&c===e.toneMapping||(p.material.needsUpdate=!0,d=m,u=m.version,c=e.toneMapping),n.unshift(p,p.geometry,p.material,0,0,null)):m&&m.isTexture&&(void 0===o&&(o=new An(new Zn(2,2),new Ln({name:"BackgroundMaterial",uniforms:kn(ea.background.uniforms),vertexShader:ea.background.vertexShader,fragmentShader:ea.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),a.update(o)),o.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),o.material.uniforms.uvTransform.value.copy(m.matrix),d===m&&u===m.version&&c===e.toneMapping||(o.material.needsUpdate=!0,d=m,u=m.version,c=e.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null))}}}function na(e,t,n,a){const i=e.getParameter(34921),r=a.isWebGL2?null:t.get("OES_vertex_array_object"),s=a.isWebGL2||null!==r,o={},p=c(null);let l=p;function d(t){return a.isWebGL2?e.bindVertexArray(t):r.bindVertexArrayOES(t)}function u(t){return a.isWebGL2?e.deleteVertexArray(t):r.deleteVertexArrayOES(t)}function c(e){const t=[],n=[],a=[];for(let e=0;e<i;e++)t[e]=0,n[e]=0,a[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:a,object:e,attributes:{},index:null}}function h(){const e=l.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function m(e){f(e,0)}function f(n,i){const r=l.newAttributes,s=l.enabledAttributes,o=l.attributeDivisors;r[n]=1,0===s[n]&&(e.enableVertexAttribArray(n),s[n]=1),o[n]!==i&&((a.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[a.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),o[n]=i)}function g(){const t=l.newAttributes,n=l.enabledAttributes;for(let a=0,i=n.length;a<i;a++)n[a]!==t[a]&&(e.disableVertexAttribArray(a),n[a]=0)}function v(t,n,i,r,s,o){!0!==a.isWebGL2||5124!==i&&5125!==i?e.vertexAttribPointer(t,n,i,r,s,o):e.vertexAttribIPointer(t,n,i,s,o)}function y(){x(),l!==p&&(l=p,d(l.object))}function x(){p.geometry=null,p.program=null,p.wireframe=!1}return{setup:function(i,p,u,y,x){let b=!1;if(s){const t=function(t,n,i){const s=!0===i.wireframe;let p=o[t.id];void 0===p&&(p={},o[t.id]=p);let l=p[n.id];void 0===l&&(l={},p[n.id]=l);let d=l[s];return void 0===d&&(d=c(a.isWebGL2?e.createVertexArray():r.createVertexArrayOES()),l[s]=d),d}(y,u,p);l!==t&&(l=t,d(l.object)),b=function(e,t){const n=l.attributes,a=e.attributes;let i=0;for(const e in a){const t=n[e],r=a[e];if(void 0===t)return!0;if(t.attribute!==r)return!0;if(t.data!==r.data)return!0;i++}return l.attributesNum!==i||l.index!==t}(y,x),b&&function(e,t){const n={},a=e.attributes;let i=0;for(const e in a){const t=a[e],r={};r.attribute=t,t.data&&(r.data=t.data),n[e]=r,i++}l.attributes=n,l.attributesNum=i,l.index=t}(y,x)}else{const e=!0===p.wireframe;l.geometry===y.id&&l.program===u.id&&l.wireframe===e||(l.geometry=y.id,l.program=u.id,l.wireframe=e,b=!0)}!0===i.isInstancedMesh&&(b=!0),null!==x&&n.update(x,34963),b&&(function(i,r,s,o){if(!1===a.isWebGL2&&(i.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;h();const p=o.attributes,l=s.getAttributes(),d=r.defaultAttributeValues;for(const t in l){const a=l[t];if(a.location>=0){let r=p[t];if(void 0===r&&("instanceMatrix"===t&&i.instanceMatrix&&(r=i.instanceMatrix),"instanceColor"===t&&i.instanceColor&&(r=i.instanceColor)),void 0!==r){const t=r.normalized,s=r.itemSize,p=n.get(r);if(void 0===p)continue;const l=p.buffer,d=p.type,u=p.bytesPerElement;if(r.isInterleavedBufferAttribute){const n=r.data,p=n.stride,c=r.offset;if(n.isInstancedInterleavedBuffer){for(let e=0;e<a.locationSize;e++)f(a.location+e,n.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let e=0;e<a.locationSize;e++)m(a.location+e);e.bindBuffer(34962,l);for(let e=0;e<a.locationSize;e++)v(a.location+e,s/a.locationSize,d,t,p*u,(c+s/a.locationSize*e)*u)}else{if(r.isInstancedBufferAttribute){for(let e=0;e<a.locationSize;e++)f(a.location+e,r.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=r.meshPerAttribute*r.count)}else for(let e=0;e<a.locationSize;e++)m(a.location+e);e.bindBuffer(34962,l);for(let e=0;e<a.locationSize;e++)v(a.location+e,s/a.locationSize,d,t,s*u,s/a.locationSize*e*u)}}else if(void 0!==d){const n=d[t];if(void 0!==n)switch(n.length){case 2:e.vertexAttrib2fv(a.location,n);break;case 3:e.vertexAttrib3fv(a.location,n);break;case 4:e.vertexAttrib4fv(a.location,n);break;default:e.vertexAttrib1fv(a.location,n)}}}}g()}(i,p,u,y),null!==x&&e.bindBuffer(34963,n.get(x).buffer))},reset:y,resetDefaultState:x,dispose:function(){y();for(const e in o){const t=o[e];for(const e in t){const n=t[e];for(const e in n)u(n[e].object),delete n[e];delete t[e]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0===o[e.id])return;const t=o[e.id];for(const e in t){const n=t[e];for(const e in n)u(n[e].object),delete n[e];delete t[e]}delete o[e.id]},releaseStatesOfProgram:function(e){for(const t in o){const n=o[t];if(void 0===n[e.id])continue;const a=n[e.id];for(const e in a)u(a[e].object),delete a[e];delete n[e.id]}},initAttributes:h,enableAttribute:m,disableUnusedAttributes:g}}function aa(e,t,n,a){const i=a.isWebGL2;let r;this.setMode=function(e){r=e},this.render=function(t,a){e.drawArrays(r,t,a),n.update(a,r,1)},this.renderInstances=function(a,s,o){if(0===o)return;let p,l;if(i)p=e,l="drawArraysInstanced";else if(p=t.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===p)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");p[l](r,a,s,o),n.update(s,r,o)}}function ia(e,t,n){let a;function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const r="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let s=void 0!==n.precision?n.precision:"highp";const o=i(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);const p=r||t.has("WEBGL_draw_buffers"),l=!0===n.logarithmicDepthBuffer,d=e.getParameter(34930),u=e.getParameter(35660),c=e.getParameter(3379),h=e.getParameter(34076),m=e.getParameter(34921),f=e.getParameter(36347),g=e.getParameter(36348),v=e.getParameter(36349),y=u>0,x=r||t.has("OES_texture_float");return{isWebGL2:r,drawBuffers:p,getMaxAnisotropy:function(){if(void 0!==a)return a;if(!0===t.has("EXT_texture_filter_anisotropic")){const n=t.get("EXT_texture_filter_anisotropic");a=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else a=0;return a},getMaxPrecision:i,precision:s,logarithmicDepthBuffer:l,maxTextures:d,maxVertexTextures:u,maxTextureSize:c,maxCubemapSize:h,maxAttributes:m,maxVertexUniforms:f,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:y,floatFragmentTextures:x,floatVertexTextures:y&&x,maxSamples:r?e.getParameter(36183):0}}function ra(e){const t=this;let n=null,a=0,i=!1,r=!1;const s=new Hn,o=new he,p={value:null,needsUpdate:!1};function l(){p.value!==n&&(p.value=n,p.needsUpdate=a>0),t.numPlanes=a,t.numIntersection=0}function d(e,n,a,i){const r=null!==e?e.length:0;let l=null;if(0!==r){if(l=p.value,!0!==i||null===l){const t=a+4*r,i=n.matrixWorldInverse;o.getNormalMatrix(i),(null===l||l.length<t)&&(l=new Float32Array(t));for(let t=0,n=a;t!==r;++t,n+=4)s.copy(e[t]).applyMatrix4(i,o),s.normal.toArray(l,n),l[n+3]=s.constant}p.value=l,p.needsUpdate=!0}return t.numPlanes=r,t.numIntersection=0,l}this.uniform=p,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,r){const s=0!==e.length||t||0!==a||i;return i=t,n=d(e,r,0),a=e.length,s},this.beginShadows=function(){r=!0,d(null)},this.endShadows=function(){r=!1,l()},this.setState=function(t,s,o){const u=t.clippingPlanes,c=t.clipIntersection,h=t.clipShadows,m=e.get(t);if(!i||null===u||0===u.length||r&&!h)r?d(null):l();else{const e=r?0:a,t=4*e;let i=m.clippingState||null;p.value=i,i=d(u,s,t,o);for(let e=0;e!==t;++e)i[e]=n[e];m.clippingState=i,this.numIntersection=c?this.numPlanes:0,this.numPlanes+=e}}}function sa(e){let t=new WeakMap;function n(e,t){return 303===t?e.mapping=_:304===t&&(e.mapping=S),e}function a(e){const n=e.target;n.removeEventListener("dispose",a);const i=t.get(n);void 0!==i&&(t.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture&&!1===i.isRenderTargetTexture){const r=i.mapping;if(303===r||304===r){if(t.has(i))return n(t.get(i).texture,i.mapping);{const r=i.image;if(r&&r.height>0){const s=new zn(r.height/2);return s.fromEquirectangularTexture(e,i),t.set(i,s),i.addEventListener("dispose",a),n(s.texture,i.mapping)}return null}}}return i},dispose:function(){t=new WeakMap}}}ea.physical={uniforms:Dn([ea.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ce(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new _e(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ce},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new _e(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new _e(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Qn.meshphysical_vert,fragmentShader:Qn.meshphysical_frag};class oa extends On{constructor(e=-1,t=1,n=1,a=-1,i=.1,r=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=a,this.near=i,this.far=r,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,a,i,r){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=a,this.view.width=i,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,a=(this.top+this.bottom)/2;let i=n-e,r=n+e,s=a+t,o=a-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=e*this.view.offsetX,r=i+e*this.view.width,s-=t*this.view.offsetY,o=s-t*this.view.height}this.projectionMatrix.makeOrthographic(i,r,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}oa.prototype.isOrthographicCamera=!0;const pa=[.125,.215,.35,.446,.526,.582],la=new oa,da=new _e;let ua=null;const ca=(1+Math.sqrt(5))/2,ha=1/ca,ma=[new Pe(1,1,1),new Pe(-1,1,1),new Pe(1,1,-1),new Pe(-1,1,-1),new Pe(0,ca,ha),new Pe(0,ca,-ha),new Pe(ha,0,ca),new Pe(-ha,0,ca),new Pe(ca,ha,0),new Pe(-ca,ha,0)];class fa{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,a=100){ua=this._renderer.getRenderTarget(),this._setSize(256);const i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,n,a,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=xa(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=ya(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(ua),e.scissorTest=!1,va(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===_||e.mapping===S?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),ua=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize-32,n={magFilter:A,minFilter:A,generateMipmaps:!1,type:L,format:B,encoding:Y,depthBuffer:!1},a=ga(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=ga(e,t,n);const{_lodMax:a}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){const t=[],n=[],a=[];let i=e;const r=e-4+1+pa.length;for(let s=0;s<r;s++){const r=Math.pow(2,i);n.push(r);let o=1/r;s>e-4?o=pa[s-e+4-1]:0===s&&(o=0),a.push(o);const p=1/(r-1),l=-p/2,d=1+p/2,u=[l,l,d,l,d,d,l,l,d,d,l,d],c=6,h=6,m=3,f=2,g=1,v=new Float32Array(m*h*c),y=new Float32Array(f*h*c),x=new Float32Array(g*h*c);for(let e=0;e<c;e++){const t=e%3*2/3-1,n=e>2?0:-1,a=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];v.set(a,m*h*e),y.set(u,f*h*e);const i=[e,e,e,e,e,e];x.set(i,g*h*e)}const b=new un;b.setAttribute("position",new Jt(v,m)),b.setAttribute("uv",new Jt(y,f)),b.setAttribute("faceIndex",new Jt(x,g)),t.push(b),i>4&&i--}return{lodPlanes:t,sizeLods:n,sigmas:a}}(a)),this._blurMaterial=function(e,t,n){const a=new Float32Array(20),i=new Pe(0,1,0);return new Ln({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:a},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}(a,e,t)}return a}_compileMaterial(e){const t=new An(this._lodPlanes[0],e);this._renderer.compile(t,la)}_sceneToCubeUV(e,t,n,a){const i=new Bn(90,1,t,n),r=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,p=o.autoClear,l=o.toneMapping;o.getClearColor(da),o.toneMapping=0,o.autoClear=!1;const d=new Yt({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),u=new An(new Rn,d);let c=!1;const h=e.background;h?h.isColor&&(d.color.copy(h),e.background=null,c=!0):(d.color.copy(da),c=!0);for(let t=0;t<6;t++){const n=t%3;0===n?(i.up.set(0,r[t],0),i.lookAt(s[t],0,0)):1===n?(i.up.set(0,0,r[t]),i.lookAt(0,s[t],0)):(i.up.set(0,r[t],0),i.lookAt(0,0,s[t]));const p=this._cubeSize;va(a,n*p,t>2?p:0,p,p),o.setRenderTarget(a),c&&o.render(u,i),o.render(e,i)}u.geometry.dispose(),u.material.dispose(),o.toneMapping=l,o.autoClear=p,e.background=h}_textureToCubeUV(e,t){const n=this._renderer,a=e.mapping===_||e.mapping===S;a?(null===this._cubemapMaterial&&(this._cubemapMaterial=xa()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=ya());const i=a?this._cubemapMaterial:this._equirectMaterial,r=new An(this._lodPlanes[0],i);i.uniforms.envMap.value=e;const s=this._cubeSize;va(t,0,0,3*s,2*s),n.setRenderTarget(t),n.render(r,la)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){const n=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),a=ma[(t-1)%ma.length];this._blur(e,t-1,t,n,a)}t.autoClear=n}_blur(e,t,n,a,i){const r=this._pingPongRenderTarget;this._halfBlur(e,r,t,n,a,"latitudinal",i),this._halfBlur(r,e,n,n,a,"longitudinal",i)}_halfBlur(e,t,n,a,i,r,s){const o=this._renderer,p=this._blurMaterial;"latitudinal"!==r&&"longitudinal"!==r&&console.error("blur direction must be either latitudinal or longitudinal!");const l=new An(this._lodPlanes[a],p),d=p.uniforms,u=this._sizeLods[n]-1,c=isFinite(i)?Math.PI/(2*u):2*Math.PI/39,h=i/c,m=isFinite(i)?1+Math.floor(3*h):20;m>20&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let e=0;e<20;++e){const t=e/h,n=Math.exp(-t*t/2);f.push(n),0===e?g+=n:e<m&&(g+=2*n)}for(let e=0;e<f.length;e++)f[e]=f[e]/g;d.envMap.value=e.texture,d.samples.value=m,d.weights.value=f,d.latitudinal.value="latitudinal"===r,s&&(d.poleAxis.value=s);const{_lodMax:v}=this;d.dTheta.value=c,d.mipInt.value=v-n;const y=this._sizeLods[a];va(t,3*y*(a>v-4?a-v+4:0),4*(this._cubeSize-y),3*y,2*y),o.setRenderTarget(t),o.render(l,la)}}function ga(e,t,n){const a=new Ie(e,t,n);return a.texture.mapping=T,a.texture.name="PMREM.cubeUv",a.scissorTest=!0,a}function va(e,t,n,a,i){e.viewport.set(t,n,a,i),e.scissor.set(t,n,a,i)}function ya(){return new Ln({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function xa(){return new Ln({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function ba(e){let t=new WeakMap,n=null;function a(e){const n=e.target;n.removeEventListener("dispose",a);const i=t.get(n);void 0!==i&&(t.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture){const r=i.mapping,s=303===r||304===r,o=r===_||r===S;if(s||o){if(i.isRenderTargetTexture&&!0===i.needsPMREMUpdate){i.needsPMREMUpdate=!1;let a=t.get(i);return null===n&&(n=new fa(e)),a=s?n.fromEquirectangular(i,a):n.fromCubemap(i,a),t.set(i,a),a.texture}if(t.has(i))return t.get(i).texture;{const r=i.image;if(s&&r&&r.height>0||o&&r&&function(e){let t=0;for(let n=0;n<6;n++)void 0!==e[n]&&t++;return 6===t}(r)){null===n&&(n=new fa(e));const r=s?n.fromEquirectangular(i):n.fromCubemap(i);return t.set(i,r),i.addEventListener("dispose",a),r.texture}return null}}}return i},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function wa(e){const t={};function n(n){if(void 0!==t[n])return t[n];let a;switch(n){case"WEBGL_depth_texture":a=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":a=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":a=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":a=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:a=e.getExtension(n)}return t[n]=a,a}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(e){const t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function _a(e,t,n,a){const i={},r=new WeakMap;function s(e){const o=e.target;null!==o.index&&t.remove(o.index);for(const e in o.attributes)t.remove(o.attributes[e]);o.removeEventListener("dispose",s),delete i[o.id];const p=r.get(o);p&&(t.remove(p),r.delete(o)),a.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(e){const n=[],a=e.index,i=e.attributes.position;let s=0;if(null!==a){const e=a.array;s=a.version;for(let t=0,a=e.length;t<a;t+=3){const a=e[t+0],i=e[t+1],r=e[t+2];n.push(a,i,i,r,r,a)}}else{const e=i.array;s=i.version;for(let t=0,a=e.length/3-1;t<a;t+=3){const e=t+0,a=t+1,i=t+2;n.push(e,a,a,i,i,e)}}const o=new(me(n)?tn:en)(n,1);o.version=s;const p=r.get(e);p&&t.remove(p),r.set(e,o)}return{get:function(e,t){return!0===i[t.id]||(t.addEventListener("dispose",s),i[t.id]=!0,n.memory.geometries++),t},update:function(e){const n=e.attributes;for(const e in n)t.update(n[e],34962);const a=e.morphAttributes;for(const e in a){const n=a[e];for(let e=0,a=n.length;e<a;e++)t.update(n[e],34962)}},getWireframeAttribute:function(e){const t=r.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&o(e)}else o(e);return r.get(e)}}}function Sa(e,t,n,a){const i=a.isWebGL2;let r,s,o;this.setMode=function(e){r=e},this.setIndex=function(e){s=e.type,o=e.bytesPerElement},this.render=function(t,a){e.drawElements(r,a,s,t*o),n.update(a,r,1)},this.renderInstances=function(a,p,l){if(0===l)return;let d,u;if(i)d=e,u="drawElementsInstanced";else if(d=t.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===d)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");d[u](r,p,s,a*o,l),n.update(p,r,l)}}function Ta(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,a){switch(t.calls++,n){case 4:t.triangles+=a*(e/3);break;case 1:t.lines+=a*(e/2);break;case 3:t.lines+=a*(e-1);break;case 2:t.lines+=a*e;break;case 0:t.points+=a*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function Ea(e,t){return e[0]-t[0]}function Ma(e,t){return Math.abs(t[1])-Math.abs(e[1])}function Na(e,t){let n=1;const a=t.isInterleavedBufferAttribute?t.data.array:t.array;a instanceof Int8Array?n=127:a instanceof Int16Array?n=32767:a instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",a),e.divideScalar(n)}function Ca(e,t,n){const a={},i=new Float32Array(8),r=new WeakMap,s=new Ae,o=[];for(let e=0;e<8;e++)o[e]=[e,0];return{update:function(p,l,d,u){const c=p.morphTargetInfluences;if(!0===t.isWebGL2){const a=l.morphAttributes.position||l.morphAttributes.normal||l.morphAttributes.color,i=void 0!==a?a.length:0;let o=r.get(l);if(void 0===o||o.count!==i){void 0!==o&&o.texture.dispose();const e=void 0!==l.morphAttributes.position,n=void 0!==l.morphAttributes.normal,a=void 0!==l.morphAttributes.color,p=l.morphAttributes.position||[],d=l.morphAttributes.normal||[],u=l.morphAttributes.color||[];let c=0;!0===e&&(c=1),!0===n&&(c=2),!0===a&&(c=3);let h=l.attributes.position.count*c,m=1;h>t.maxTextureSize&&(m=Math.ceil(h/t.maxTextureSize),h=t.maxTextureSize);const f=new Float32Array(h*m*4*i),g=new Re(f,h,m,i);g.format=B,g.type=P,g.needsUpdate=!0;const v=4*c;for(let t=0;t<i;t++){const i=p[t],r=d[t],o=u[t],l=h*m*4*t;for(let t=0;t<i.count;t++){const p=t*v;!0===e&&(s.fromBufferAttribute(i,t),!0===i.normalized&&Na(s,i),f[l+p+0]=s.x,f[l+p+1]=s.y,f[l+p+2]=s.z,f[l+p+3]=0),!0===n&&(s.fromBufferAttribute(r,t),!0===r.normalized&&Na(s,r),f[l+p+4]=s.x,f[l+p+5]=s.y,f[l+p+6]=s.z,f[l+p+7]=0),!0===a&&(s.fromBufferAttribute(o,t),!0===o.normalized&&Na(s,r),f[l+p+8]=s.x,f[l+p+9]=s.y,f[l+p+10]=s.z,f[l+p+11]=4===o.itemSize?s.w:1)}}function y(){g.dispose(),r.delete(l),l.removeEventListener("dispose",y)}o={count:i,texture:g,size:new ce(h,m)},r.set(l,o),l.addEventListener("dispose",y)}let p=0;for(let e=0;e<c.length;e++)p+=c[e];const d=l.morphTargetsRelative?1:1-p;u.getUniforms().setValue(e,"morphTargetBaseInfluence",d),u.getUniforms().setValue(e,"morphTargetInfluences",c),u.getUniforms().setValue(e,"morphTargetsTexture",o.texture,n),u.getUniforms().setValue(e,"morphTargetsTextureSize",o.size)}else{const t=void 0===c?0:c.length;let n=a[l.id];if(void 0===n||n.length!==t){n=[];for(let e=0;e<t;e++)n[e]=[e,0];a[l.id]=n}for(let e=0;e<t;e++){const t=n[e];t[0]=e,t[1]=c[e]}n.sort(Ma);for(let e=0;e<8;e++)e<t&&n[e][1]?(o[e][0]=n[e][0],o[e][1]=n[e][1]):(o[e][0]=Number.MAX_SAFE_INTEGER,o[e][1]=0);o.sort(Ea);const r=l.morphAttributes.position,s=l.morphAttributes.normal;let p=0;for(let e=0;e<8;e++){const t=o[e],n=t[0],a=t[1];n!==Number.MAX_SAFE_INTEGER&&a?(r&&l.getAttribute("morphTarget"+e)!==r[n]&&l.setAttribute("morphTarget"+e,r[n]),s&&l.getAttribute("morphNormal"+e)!==s[n]&&l.setAttribute("morphNormal"+e,s[n]),i[e]=a,p+=a):(r&&!0===l.hasAttribute("morphTarget"+e)&&l.deleteAttribute("morphTarget"+e),s&&!0===l.hasAttribute("morphNormal"+e)&&l.deleteAttribute("morphNormal"+e),i[e]=0)}const d=l.morphTargetsRelative?1:1-p;u.getUniforms().setValue(e,"morphTargetBaseInfluence",d),u.getUniforms().setValue(e,"morphTargetInfluences",i)}}}}function Aa(e,t,n,a){let i=new WeakMap;function r(e){const t=e.target;t.removeEventListener("dispose",r),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(e){const s=a.render.frame,o=e.geometry,p=t.get(e,o);return i.get(p)!==s&&(t.update(p),i.set(p,s)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",r)&&e.addEventListener("dispose",r),n.update(e.instanceMatrix,34962),null!==e.instanceColor&&n.update(e.instanceColor,34962)),p},dispose:function(){i=new WeakMap}}}const Ia=new Ce,Ra=new Re,ka=new ke,Da=new Vn,Pa=[],La=[],Oa=new Float32Array(16),Ba=new Float32Array(9),Fa=new Float32Array(4);function $a(e,t,n){const a=e[0];if(a<=0||a>0)return e;const i=t*n;let r=Pa[i];if(void 0===r&&(r=new Float32Array(i),Pa[i]=r),0!==t){a.toArray(r,0);for(let a=1,i=0;a!==t;++a)i+=n,e[a].toArray(r,i)}return r}function Va(e,t){if(e.length!==t.length)return!1;for(let n=0,a=e.length;n<a;n++)if(e[n]!==t[n])return!1;return!0}function za(e,t){for(let n=0,a=t.length;n<a;n++)e[n]=t[n]}function Ua(e,t){let n=La[t];void 0===n&&(n=new Int32Array(t),La[t]=n);for(let a=0;a!==t;++a)n[a]=e.allocateTextureUnit();return n}function Ga(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function Wa(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Va(n,t))return;e.uniform2fv(this.addr,t),za(n,t)}}function Ha(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Va(n,t))return;e.uniform3fv(this.addr,t),za(n,t)}}function qa(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Va(n,t))return;e.uniform4fv(this.addr,t),za(n,t)}}function ja(e,t){const n=this.cache,a=t.elements;if(void 0===a){if(Va(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),za(n,t)}else{if(Va(n,a))return;Fa.set(a),e.uniformMatrix2fv(this.addr,!1,Fa),za(n,a)}}function Xa(e,t){const n=this.cache,a=t.elements;if(void 0===a){if(Va(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),za(n,t)}else{if(Va(n,a))return;Ba.set(a),e.uniformMatrix3fv(this.addr,!1,Ba),za(n,a)}}function Ka(e,t){const n=this.cache,a=t.elements;if(void 0===a){if(Va(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),za(n,t)}else{if(Va(n,a))return;Oa.set(a),e.uniformMatrix4fv(this.addr,!1,Oa),za(n,a)}}function Ya(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function Za(e,t){const n=this.cache;Va(n,t)||(e.uniform2iv(this.addr,t),za(n,t))}function Qa(e,t){const n=this.cache;Va(n,t)||(e.uniform3iv(this.addr,t),za(n,t))}function Ja(e,t){const n=this.cache;Va(n,t)||(e.uniform4iv(this.addr,t),za(n,t))}function ei(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function ti(e,t){const n=this.cache;Va(n,t)||(e.uniform2uiv(this.addr,t),za(n,t))}function ni(e,t){const n=this.cache;Va(n,t)||(e.uniform3uiv(this.addr,t),za(n,t))}function ai(e,t){const n=this.cache;Va(n,t)||(e.uniform4uiv(this.addr,t),za(n,t))}function ii(e,t,n){const a=this.cache,i=n.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),n.setTexture2D(t||Ia,i)}function ri(e,t,n){const a=this.cache,i=n.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),n.setTexture3D(t||ka,i)}function si(e,t,n){const a=this.cache,i=n.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),n.setTextureCube(t||Da,i)}function oi(e,t,n){const a=this.cache,i=n.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),n.setTexture2DArray(t||Ra,i)}function pi(e,t){e.uniform1fv(this.addr,t)}function li(e,t){const n=$a(t,this.size,2);e.uniform2fv(this.addr,n)}function di(e,t){const n=$a(t,this.size,3);e.uniform3fv(this.addr,n)}function ui(e,t){const n=$a(t,this.size,4);e.uniform4fv(this.addr,n)}function ci(e,t){const n=$a(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function hi(e,t){const n=$a(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function mi(e,t){const n=$a(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function fi(e,t){e.uniform1iv(this.addr,t)}function gi(e,t){e.uniform2iv(this.addr,t)}function vi(e,t){e.uniform3iv(this.addr,t)}function yi(e,t){e.uniform4iv(this.addr,t)}function xi(e,t){e.uniform1uiv(this.addr,t)}function bi(e,t){e.uniform2uiv(this.addr,t)}function wi(e,t){e.uniform3uiv(this.addr,t)}function _i(e,t){e.uniform4uiv(this.addr,t)}function Si(e,t,n){const a=t.length,i=Ua(n,a);e.uniform1iv(this.addr,i);for(let e=0;e!==a;++e)n.setTexture2D(t[e]||Ia,i[e])}function Ti(e,t,n){const a=t.length,i=Ua(n,a);e.uniform1iv(this.addr,i);for(let e=0;e!==a;++e)n.setTexture3D(t[e]||ka,i[e])}function Ei(e,t,n){const a=t.length,i=Ua(n,a);e.uniform1iv(this.addr,i);for(let e=0;e!==a;++e)n.setTextureCube(t[e]||Da,i[e])}function Mi(e,t,n){const a=t.length,i=Ua(n,a);e.uniform1iv(this.addr,i);for(let e=0;e!==a;++e)n.setTexture2DArray(t[e]||Ra,i[e])}function Ni(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return Ga;case 35664:return Wa;case 35665:return Ha;case 35666:return qa;case 35674:return ja;case 35675:return Xa;case 35676:return Ka;case 5124:case 35670:return Ya;case 35667:case 35671:return Za;case 35668:case 35672:return Qa;case 35669:case 35673:return Ja;case 5125:return ei;case 36294:return ti;case 36295:return ni;case 36296:return ai;case 35678:case 36198:case 36298:case 36306:case 35682:return ii;case 35679:case 36299:case 36307:return ri;case 35680:case 36300:case 36308:case 36293:return si;case 36289:case 36303:case 36311:case 36292:return oi}}(t.type)}function Ci(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return pi;case 35664:return li;case 35665:return di;case 35666:return ui;case 35674:return ci;case 35675:return hi;case 35676:return mi;case 5124:case 35670:return fi;case 35667:case 35671:return gi;case 35668:case 35672:return vi;case 35669:case 35673:return yi;case 5125:return xi;case 36294:return bi;case 36295:return wi;case 36296:return _i;case 35678:case 36198:case 36298:case 36306:case 35682:return Si;case 35679:case 36299:case 36307:return Ti;case 35680:case 36300:case 36308:case 36293:return Ei;case 36289:case 36303:case 36311:case 36292:return Mi}}(t.type)}function Ai(e){this.id=e,this.seq=[],this.map={}}Ci.prototype.updateCache=function(e){const t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),za(t,e)},Ai.prototype.setValue=function(e,t,n){const a=this.seq;for(let i=0,r=a.length;i!==r;++i){const r=a[i];r.setValue(e,t[r.id],n)}};const Ii=/(\w+)(\])?(\[|\.)?/g;function Ri(e,t){e.seq.push(t),e.map[t.id]=t}function ki(e,t,n){const a=e.name,i=a.length;for(Ii.lastIndex=0;;){const r=Ii.exec(a),s=Ii.lastIndex;let o=r[1];const p="]"===r[2],l=r[3];if(p&&(o|=0),void 0===l||"["===l&&s+2===i){Ri(n,void 0===l?new Ni(o,e,t):new Ci(o,e,t));break}{let e=n.map[o];void 0===e&&(e=new Ai(o),Ri(n,e)),n=e}}}function Di(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let a=0;a<n;++a){const n=e.getActiveUniform(t,a);ki(n,e.getUniformLocation(t,n.name),this)}}function Pi(e,t,n){const a=e.createShader(t);return e.shaderSource(a,n),e.compileShader(a),a}Di.prototype.setValue=function(e,t,n,a){const i=this.map[t];void 0!==i&&i.setValue(e,n,a)},Di.prototype.setOptional=function(e,t,n){const a=t[n];void 0!==a&&this.setValue(e,n,a)},Di.upload=function(e,t,n,a){for(let i=0,r=t.length;i!==r;++i){const r=t[i],s=n[r.id];!1!==s.needsUpdate&&r.setValue(e,s.value,a)}},Di.seqWithValue=function(e,t){const n=[];for(let a=0,i=e.length;a!==i;++a){const i=e[a];i.id in t&&n.push(i)}return n};let Li=0;function Oi(e,t,n){const a=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();return a&&""===i?"":n.toUpperCase()+"\n\n"+i+"\n\n"+function(e){const t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}(e.getShaderSource(t))}function Bi(e,t){const n=function(e){switch(e){case Y:return["Linear","( value )"];case Z:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Fi(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function $i(e){return""!==e}function Vi(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function zi(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Ui=/^[ \t]*#include +<([\w\d./]+)>/gm;function Gi(e){return e.replace(Ui,Wi)}function Wi(e,t){const n=Qn[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return Gi(n)}const Hi=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,qi=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ji(e){return e.replace(qi,Ki).replace(Hi,Xi)}function Xi(e,t,n,a){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Ki(0,t,n,a)}function Ki(e,t,n,a){let i="";for(let e=parseInt(t);e<parseInt(n);e++)i+=a.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}function Yi(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Zi(e,t,n,a){const i=e.getContext(),r=n.defines;let s=n.vertexShader,o=n.fragmentShader;const p=function(e){let t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(n),l=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case _:case S:t="ENVMAP_TYPE_CUBE";break;case T:case 307:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),d=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case S:case 307:t="ENVMAP_MODE_REFRACTION"}return t}(n),u=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),c=function(e){const t=e.envMapCubeUVHeight;if(null===t)return null;const n=Math.log2(t/32+1)+3,a=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:a,maxMip:n}}(n),h=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter($i).join("\n")}(n),m=function(e){const t=[];for(const n in e){const a=e[n];!1!==a&&t.push("#define "+n+" "+a)}return t.join("\n")}(r),f=i.createProgram();let g,v,y=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=[m].filter($i).join("\n"),g.length>0&&(g+="\n"),v=[h,m].filter($i).join("\n"),v.length>0&&(v+="\n")):(g=[Yi(n),"#define SHADER_NAME "+n.shaderName,m,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+d:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+p:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter($i).join("\n"),v=[h,Yi(n),"#define SHADER_NAME "+n.shaderName,m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+d:"",n.envMap?"#define "+u:"",c?"#define CUBEUV_TEXEL_WIDTH "+c.texelWidth:"",c?"#define CUBEUV_TEXEL_HEIGHT "+c.texelHeight:"",c?"#define CUBEUV_MAX_MIP "+c.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+p:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?Qn.tonemapping_pars_fragment:"",0!==n.toneMapping?Fi("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Qn.encodings_pars_fragment,Bi("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter($i).join("\n")),s=Gi(s),s=Vi(s,n),s=zi(s,n),o=Gi(o),o=Vi(o,n),o=zi(o,n),s=ji(s),o=ji(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(y="#version 300 es\n",g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",n.glslVersion===te?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===te?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const x=y+v+o,b=Pi(i,35633,y+g+s),w=Pi(i,35632,x);if(i.attachShader(f,b),i.attachShader(f,w),void 0!==n.index0AttributeName?i.bindAttribLocation(f,0,n.index0AttributeName):!0===n.morphTargets&&i.bindAttribLocation(f,0,"position"),i.linkProgram(f),e.debug.checkShaderErrors){const e=i.getProgramInfoLog(f).trim(),t=i.getShaderInfoLog(b).trim(),n=i.getShaderInfoLog(w).trim();let a=!0,r=!0;if(!1===i.getProgramParameter(f,35714)){a=!1;const t=Oi(i,b,"vertex"),n=Oi(i,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(f,35715)+"\n\nProgram Info Log: "+e+"\n"+t+"\n"+n)}else""!==e?console.warn("THREE.WebGLProgram: Program Info Log:",e):""!==t&&""!==n||(r=!1);r&&(this.diagnostics={runnable:a,programLog:e,vertexShader:{log:t,prefix:g},fragmentShader:{log:n,prefix:v}})}let E,M;return i.deleteShader(b),i.deleteShader(w),this.getUniforms=function(){return void 0===E&&(E=new Di(i,f)),E},this.getAttributes=function(){return void 0===M&&(M=function(e,t){const n={},a=e.getProgramParameter(t,35721);for(let i=0;i<a;i++){const a=e.getActiveAttrib(t,i),r=a.name;let s=1;35674===a.type&&(s=2),35675===a.type&&(s=3),35676===a.type&&(s=4),n[r]={type:a.type,location:e.getAttribLocation(t,r),locationSize:s}}return n}(i,f)),M},this.destroy=function(){a.releaseStatesOfProgram(this),i.deleteProgram(f),this.program=void 0},this.name=n.shaderName,this.id=Li++,this.cacheKey=t,this.usedTimes=1,this.program=f,this.vertexShader=b,this.fragmentShader=w,this}let Qi=0;class Ji{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,a=this._getShaderStage(t),i=this._getShaderStage(n),r=this._getShaderCacheForMaterial(e);return!1===r.has(a)&&(r.add(a),a.usedTimes++),!1===r.has(i)&&(r.add(i),i.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const e of t)e.usedTimes--,0===e.usedTimes&&this.shaderCache.delete(e);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return!1===t.has(e)&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(!1===t.has(e)){const n=new er;t.set(e,n)}return t.get(e)}}class er{constructor(){this.id=Qi++,this.usedTimes=0}}function tr(e,t,n,a,i,r,s){const o=new _t,p=new Ji,l=[],d=i.isWebGL2,u=i.logarithmicDepthBuffer,c=i.floatVertexTextures,h=i.maxVertexUniforms,m=i.vertexTextures;let f=i.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(r,o,l,v,y){const x=v.fog,b=y.geometry,w=r.isMeshStandardMaterial?v.environment:null,_=(r.isMeshStandardMaterial?n:t).get(r.envMap||w),S=!_||_.mapping!==T&&307!==_.mapping?null:_.image.height,E=g[r.type],M=y.isSkinnedMesh?function(e){const t=e.skeleton.bones;if(c)return 1024;{const e=h,n=Math.floor((e-20)/4),a=Math.min(n,t.length);return a<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+a+"."),0):a}}(y):0;null!==r.precision&&(f=i.getMaxPrecision(r.precision),f!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",f,"instead."));const N=b.morphAttributes.position||b.morphAttributes.normal||b.morphAttributes.color,C=void 0!==N?N.length:0;let A,I,R,k,D=0;if(void 0!==b.morphAttributes.position&&(D=1),void 0!==b.morphAttributes.normal&&(D=2),void 0!==b.morphAttributes.color&&(D=3),E){const e=ea[E];A=e.vertexShader,I=e.fragmentShader}else A=r.vertexShader,I=r.fragmentShader,p.update(r),R=p.getVertexShaderID(r),k=p.getFragmentShaderID(r);const P=e.getRenderTarget(),L=r.alphaTest>0,O=r.clearcoat>0;return{isWebGL2:d,shaderID:E,shaderName:r.type,vertexShader:A,fragmentShader:I,defines:r.defines,customVertexShaderID:R,customFragmentShaderID:k,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:f,instancing:!0===y.isInstancedMesh,instancingColor:!0===y.isInstancedMesh&&null!==y.instanceColor,supportsVertexTextures:m,outputEncoding:null===P?e.outputEncoding:!0===P.isXRRenderTarget?P.texture.encoding:Y,map:!!r.map,matcap:!!r.matcap,envMap:!!_,envMapMode:_&&_.mapping,envMapCubeUVHeight:S,lightMap:!!r.lightMap,aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,objectSpaceNormalMap:1===r.normalMapType,tangentSpaceNormalMap:0===r.normalMapType,decodeVideoTexture:!!r.map&&!0===r.map.isVideoTexture&&r.map.encoding===Z,clearcoat:O,clearcoatMap:O&&!!r.clearcoatMap,clearcoatRoughnessMap:O&&!!r.clearcoatRoughnessMap,clearcoatNormalMap:O&&!!r.clearcoatNormalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,specularIntensityMap:!!r.specularIntensityMap,specularColorMap:!!r.specularColorMap,opaque:!1===r.transparent&&1===r.blending,alphaMap:!!r.alphaMap,alphaTest:L,gradientMap:!!r.gradientMap,sheen:r.sheen>0,sheenColorMap:!!r.sheenColorMap,sheenRoughnessMap:!!r.sheenRoughnessMap,transmission:r.transmission>0,transmissionMap:!!r.transmissionMap,thicknessMap:!!r.thicknessMap,combine:r.combine,vertexTangents:!!r.normalMap&&!!b.attributes.tangent,vertexColors:r.vertexColors,vertexAlphas:!0===r.vertexColors&&!!b.attributes.color&&4===b.attributes.color.itemSize,vertexUvs:!!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatMap||r.clearcoatRoughnessMap||r.clearcoatNormalMap||r.displacementMap||r.transmissionMap||r.thicknessMap||r.specularIntensityMap||r.specularColorMap||r.sheenColorMap||r.sheenRoughnessMap),uvsVertexOnly:!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatNormalMap||r.transmission>0||r.transmissionMap||r.thicknessMap||r.specularIntensityMap||r.specularColorMap||r.sheen>0||r.sheenColorMap||r.sheenRoughnessMap||!r.displacementMap),fog:!!x,useFog:r.fog,fogExp2:x&&x.isFogExp2,flatShading:!!r.flatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===y.isSkinnedMesh&&M>0,maxBones:M,useVertexTexture:c,morphTargets:void 0!==b.morphAttributes.position,morphNormals:void 0!==b.morphAttributes.normal,morphColors:void 0!==b.morphAttributes.color,morphTargetsCount:C,morphTextureStride:D,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:r.dithering,shadowMapEnabled:e.shadowMap.enabled&&l.length>0,shadowMapType:e.shadowMap.type,toneMapping:r.toneMapped?e.toneMapping:0,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,doubleSided:2===r.side,flipSided:1===r.side,depthPacking:void 0!==r.depthPacking&&r.depthPacking,index0AttributeName:r.index0AttributeName,extensionDerivatives:r.extensions&&r.extensions.derivatives,extensionFragDepth:r.extensions&&r.extensions.fragDepth,extensionDrawBuffers:r.extensions&&r.extensions.drawBuffers,extensionShaderTextureLOD:r.extensions&&r.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||a.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||a.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||a.has("EXT_shader_texture_lod"),customProgramCacheKey:r.customProgramCacheKey()}},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.customVertexShaderID),n.push(t.customFragmentShaderID)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(function(e,t){e.push(t.precision),e.push(t.outputEncoding),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.combine),e.push(t.vertexUvs),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.maxBones),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection)}(n,t),function(e,t){o.disableAll(),t.isWebGL2&&o.enable(0),t.supportsVertexTextures&&o.enable(1),t.instancing&&o.enable(2),t.instancingColor&&o.enable(3),t.map&&o.enable(4),t.matcap&&o.enable(5),t.envMap&&o.enable(6),t.lightMap&&o.enable(7),t.aoMap&&o.enable(8),t.emissiveMap&&o.enable(9),t.bumpMap&&o.enable(10),t.normalMap&&o.enable(11),t.objectSpaceNormalMap&&o.enable(12),t.tangentSpaceNormalMap&&o.enable(13),t.clearcoat&&o.enable(14),t.clearcoatMap&&o.enable(15),t.clearcoatRoughnessMap&&o.enable(16),t.clearcoatNormalMap&&o.enable(17),t.displacementMap&&o.enable(18),t.specularMap&&o.enable(19),t.roughnessMap&&o.enable(20),t.metalnessMap&&o.enable(21),t.gradientMap&&o.enable(22),t.alphaMap&&o.enable(23),t.alphaTest&&o.enable(24),t.vertexColors&&o.enable(25),t.vertexAlphas&&o.enable(26),t.vertexUvs&&o.enable(27),t.vertexTangents&&o.enable(28),t.uvsVertexOnly&&o.enable(29),t.fog&&o.enable(30),e.push(o.mask),o.disableAll(),t.useFog&&o.enable(0),t.flatShading&&o.enable(1),t.logarithmicDepthBuffer&&o.enable(2),t.skinning&&o.enable(3),t.useVertexTexture&&o.enable(4),t.morphTargets&&o.enable(5),t.morphNormals&&o.enable(6),t.morphColors&&o.enable(7),t.premultipliedAlpha&&o.enable(8),t.shadowMapEnabled&&o.enable(9),t.physicallyCorrectLights&&o.enable(10),t.doubleSided&&o.enable(11),t.flipSided&&o.enable(12),t.depthPacking&&o.enable(13),t.dithering&&o.enable(14),t.specularIntensityMap&&o.enable(15),t.specularColorMap&&o.enable(16),t.transmission&&o.enable(17),t.transmissionMap&&o.enable(18),t.thicknessMap&&o.enable(19),t.sheen&&o.enable(20),t.sheenColorMap&&o.enable(21),t.sheenRoughnessMap&&o.enable(22),t.decodeVideoTexture&&o.enable(23),t.opaque&&o.enable(24),e.push(o.mask)}(n,t),n.push(e.outputEncoding)),n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=g[e.type];let n;if(t){const e=ea[t];n=Pn.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let a;for(let e=0,t=l.length;e<t;e++){const t=l[e];if(t.cacheKey===n){a=t,++a.usedTimes;break}}return void 0===a&&(a=new Zi(e,n,t,r),l.push(a)),a},releaseProgram:function(e){if(0==--e.usedTimes){const t=l.indexOf(e);l[t]=l[l.length-1],l.pop(),e.destroy()}},releaseShaderCache:function(e){p.remove(e)},programs:l,dispose:function(){p.dispose()}}}function nr(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,a){e.get(t)[n]=a},dispose:function(){e=new WeakMap}}}function ar(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function ir(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function rr(){const e=[];let t=0;const n=[],a=[],i=[];function r(n,a,i,r,s,o){let p=e[t];return void 0===p?(p={id:n.id,object:n,geometry:a,material:i,groupOrder:r,renderOrder:n.renderOrder,z:s,group:o},e[t]=p):(p.id=n.id,p.object=n,p.geometry=a,p.material=i,p.groupOrder=r,p.renderOrder=n.renderOrder,p.z=s,p.group=o),t++,p}return{opaque:n,transmissive:a,transparent:i,init:function(){t=0,n.length=0,a.length=0,i.length=0},push:function(e,t,s,o,p,l){const d=r(e,t,s,o,p,l);s.transmission>0?a.push(d):!0===s.transparent?i.push(d):n.push(d)},unshift:function(e,t,s,o,p,l){const d=r(e,t,s,o,p,l);s.transmission>0?a.unshift(d):!0===s.transparent?i.unshift(d):n.unshift(d)},finish:function(){for(let n=t,a=e.length;n<a;n++){const t=e[n];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){n.length>1&&n.sort(e||ar),a.length>1&&a.sort(t||ir),i.length>1&&i.sort(t||ir)}}}function sr(){let e=new WeakMap;return{get:function(t,n){let a;return!1===e.has(t)?(a=new rr,e.set(t,[a])):n>=e.get(t).length?(a=new rr,e.get(t).push(a)):a=e.get(t)[n],a},dispose:function(){e=new WeakMap}}}function or(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new Pe,color:new _e};break;case"SpotLight":n={position:new Pe,direction:new Pe,color:new _e,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Pe,color:new _e,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Pe,skyColor:new _e,groundColor:new _e};break;case"RectAreaLight":n={color:new _e,position:new Pe,halfWidth:new Pe,halfHeight:new Pe}}return e[t.id]=n,n}}}let pr=0;function lr(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function dr(e,t){const n=new or,a=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ce};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ce,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)i.probe.push(new Pe);const r=new Pe,s=new ut,o=new ut;return{setup:function(r,s){let o=0,p=0,l=0;for(let e=0;e<9;e++)i.probe[e].set(0,0,0);let d=0,u=0,c=0,h=0,m=0,f=0,g=0,v=0;r.sort(lr);const y=!0!==s?Math.PI:1;for(let e=0,t=r.length;e<t;e++){const t=r[e],s=t.color,x=t.intensity,b=t.distance,w=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)o+=s.r*x*y,p+=s.g*x*y,l+=s.b*x*y;else if(t.isLightProbe)for(let e=0;e<9;e++)i.probe[e].addScaledVector(t.sh.coefficients[e],x);else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*y),t.castShadow){const e=t.shadow,n=a.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,i.directionalShadow[d]=n,i.directionalShadowMap[d]=w,i.directionalShadowMatrix[d]=t.shadow.matrix,f++}i.directional[d]=e,d++}else if(t.isSpotLight){const e=n.get(t);if(e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(s).multiplyScalar(x*y),e.distance=b,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,t.castShadow){const e=t.shadow,n=a.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,i.spotShadow[c]=n,i.spotShadowMap[c]=w,i.spotShadowMatrix[c]=t.shadow.matrix,v++}i.spot[c]=e,c++}else if(t.isRectAreaLight){const e=n.get(t);e.color.copy(s).multiplyScalar(x),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),i.rectArea[h]=e,h++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*y),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,n=a.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,i.pointShadow[u]=n,i.pointShadowMap[u]=w,i.pointShadowMatrix[u]=t.shadow.matrix,g++}i.point[u]=e,u++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(x*y),e.groundColor.copy(t.groundColor).multiplyScalar(x*y),i.hemi[m]=e,m++}}h>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(i.rectAreaLTC1=Jn.LTC_FLOAT_1,i.rectAreaLTC2=Jn.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=Jn.LTC_HALF_1,i.rectAreaLTC2=Jn.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=o,i.ambient[1]=p,i.ambient[2]=l;const x=i.hash;x.directionalLength===d&&x.pointLength===u&&x.spotLength===c&&x.rectAreaLength===h&&x.hemiLength===m&&x.numDirectionalShadows===f&&x.numPointShadows===g&&x.numSpotShadows===v||(i.directional.length=d,i.spot.length=c,i.rectArea.length=h,i.point.length=u,i.hemi.length=m,i.directionalShadow.length=f,i.directionalShadowMap.length=f,i.pointShadow.length=g,i.pointShadowMap.length=g,i.spotShadow.length=v,i.spotShadowMap.length=v,i.directionalShadowMatrix.length=f,i.pointShadowMatrix.length=g,i.spotShadowMatrix.length=v,x.directionalLength=d,x.pointLength=u,x.spotLength=c,x.rectAreaLength=h,x.hemiLength=m,x.numDirectionalShadows=f,x.numPointShadows=g,x.numSpotShadows=v,i.version=pr++)},setupView:function(e,t){let n=0,a=0,p=0,l=0,d=0;const u=t.matrixWorldInverse;for(let t=0,c=e.length;t<c;t++){const c=e[t];if(c.isDirectionalLight){const e=i.directional[n];e.direction.setFromMatrixPosition(c.matrixWorld),r.setFromMatrixPosition(c.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(u),n++}else if(c.isSpotLight){const e=i.spot[p];e.position.setFromMatrixPosition(c.matrixWorld),e.position.applyMatrix4(u),e.direction.setFromMatrixPosition(c.matrixWorld),r.setFromMatrixPosition(c.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(u),p++}else if(c.isRectAreaLight){const e=i.rectArea[l];e.position.setFromMatrixPosition(c.matrixWorld),e.position.applyMatrix4(u),o.identity(),s.copy(c.matrixWorld),s.premultiply(u),o.extractRotation(s),e.halfWidth.set(.5*c.width,0,0),e.halfHeight.set(0,.5*c.height,0),e.halfWidth.applyMatrix4(o),e.halfHeight.applyMatrix4(o),l++}else if(c.isPointLight){const e=i.point[a];e.position.setFromMatrixPosition(c.matrixWorld),e.position.applyMatrix4(u),a++}else if(c.isHemisphereLight){const e=i.hemi[d];e.direction.setFromMatrixPosition(c.matrixWorld),e.direction.transformDirection(u),e.direction.normalize(),d++}}},state:i}}function ur(e,t){const n=new dr(e,t),a=[],i=[];return{init:function(){a.length=0,i.length=0},state:{lightsArray:a,shadowsArray:i,lights:n},setupLights:function(e){n.setup(a,e)},setupLightsView:function(e){n.setupView(a,e)},pushLight:function(e){a.push(e)},pushShadow:function(e){i.push(e)}}}function cr(e,t){let n=new WeakMap;return{get:function(a,i=0){let r;return!1===n.has(a)?(r=new ur(e,t),n.set(a,[r])):i>=n.get(a).length?(r=new ur(e,t),n.get(a).push(r)):r=n.get(a)[i],r},dispose:function(){n=new WeakMap}}}class hr extends Kt{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}hr.prototype.isMeshDepthMaterial=!0;class mr extends Kt{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new Pe,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function fr(e,t,n){let a=new Xn;const i=new ce,r=new ce,s=new Ae,o=new hr({depthPacking:3201}),p=new mr,l={},d=n.maxTextureSize,u={0:1,1:0,2:2},c=new Ln({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ce},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),h=c.clone();h.defines.HORIZONTAL_PASS=1;const m=new un;m.setAttribute("position",new Jt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new An(m,c),g=this;function v(n,a){const i=t.update(f);c.defines.VSM_SAMPLES!==n.blurSamples&&(c.defines.VSM_SAMPLES=n.blurSamples,h.defines.VSM_SAMPLES=n.blurSamples,c.needsUpdate=!0,h.needsUpdate=!0),c.uniforms.shadow_pass.value=n.map.texture,c.uniforms.resolution.value=n.mapSize,c.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(a,null,i,c,f,null),h.uniforms.shadow_pass.value=n.mapPass.texture,h.uniforms.resolution.value=n.mapSize,h.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(a,null,i,h,f,null)}function y(t,n,a,i,r,s){let d=null;const c=!0===a.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(d=void 0!==c?c:!0===a.isPointLight?p:o,e.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0){const e=d.uuid,t=n.uuid;let a=l[e];void 0===a&&(a={},l[e]=a);let i=a[t];void 0===i&&(i=d.clone(),a[t]=i),d=i}return d.visible=n.visible,d.wireframe=n.wireframe,d.side=3===s?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:u[n.side],d.alphaMap=n.alphaMap,d.alphaTest=n.alphaTest,d.clipShadows=n.clipShadows,d.clippingPlanes=n.clippingPlanes,d.clipIntersection=n.clipIntersection,d.displacementMap=n.displacementMap,d.displacementScale=n.displacementScale,d.displacementBias=n.displacementBias,d.wireframeLinewidth=n.wireframeLinewidth,d.linewidth=n.linewidth,!0===a.isPointLight&&!0===d.isMeshDistanceMaterial&&(d.referencePosition.setFromMatrixPosition(a.matrixWorld),d.nearDistance=i,d.farDistance=r),d}function x(n,i,r,s,o){if(!1===n.visible)return;if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===o)&&(!n.frustumCulled||a.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,n.matrixWorld);const a=t.update(n),i=n.material;if(Array.isArray(i)){const t=a.groups;for(let p=0,l=t.length;p<l;p++){const l=t[p],d=i[l.materialIndex];if(d&&d.visible){const t=y(n,d,s,r.near,r.far,o);e.renderBufferDirect(r,null,a,t,n,l)}}}else if(i.visible){const t=y(n,i,s,r.near,r.far,o);e.renderBufferDirect(r,null,a,t,n,null)}}const p=n.children;for(let e=0,t=p.length;e<t;e++)x(p[e],i,r,s,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(t,n,o){if(!1===g.enabled)return;if(!1===g.autoUpdate&&!1===g.needsUpdate)return;if(0===t.length)return;const p=e.getRenderTarget(),l=e.getActiveCubeFace(),u=e.getActiveMipmapLevel(),c=e.state;c.setBlending(0),c.buffers.color.setClear(1,1,1,1),c.buffers.depth.setTest(!0),c.setScissorTest(!1);for(let p=0,l=t.length;p<l;p++){const l=t[p],u=l.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",l,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;i.copy(u.mapSize);const h=u.getFrameExtents();if(i.multiply(h),r.copy(u.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(r.x=Math.floor(d/h.x),i.x=r.x*h.x,u.mapSize.x=r.x),i.y>d&&(r.y=Math.floor(d/h.y),i.y=r.y*h.y,u.mapSize.y=r.y)),null===u.map&&!u.isPointLightShadow&&3===this.type){const e={minFilter:A,magFilter:A,format:B};u.map=new Ie(i.x,i.y,e),u.map.texture.name=l.name+".shadowMap",u.mapPass=new Ie(i.x,i.y,e),u.camera.updateProjectionMatrix()}if(null===u.map){const e={minFilter:C,magFilter:C,format:B};u.map=new Ie(i.x,i.y,e),u.map.texture.name=l.name+".shadowMap",u.camera.updateProjectionMatrix()}e.setRenderTarget(u.map),e.clear();const m=u.getViewportCount();for(let e=0;e<m;e++){const t=u.getViewport(e);s.set(r.x*t.x,r.y*t.y,r.x*t.z,r.y*t.w),c.viewport(s),u.updateMatrices(l,e),a=u.getFrustum(),x(n,o,u.camera,l,this.type)}u.isPointLightShadow||3!==this.type||v(u,o),u.needsUpdate=!1}g.needsUpdate=!1,e.setRenderTarget(p,l,u)}}function gr(e,t,n){const a=n.isWebGL2,i=new function(){let t=!1;const n=new Ae;let a=null;const i=new Ae(0,0,0,0);return{setMask:function(n){a===n||t||(e.colorMask(n,n,n,n),a=n)},setLocked:function(e){t=e},setClear:function(t,a,r,s,o){!0===o&&(t*=s,a*=s,r*=s),n.set(t,a,r,s),!1===i.equals(n)&&(e.clearColor(t,a,r,s),i.copy(n))},reset:function(){t=!1,a=null,i.set(-1,0,0,0)}}},r=new function(){let t=!1,n=null,a=null,i=null;return{setTest:function(e){e?$(2929):V(2929)},setMask:function(a){n===a||t||(e.depthMask(a),n=a)},setFunc:function(t){if(a!==t){if(t)switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:default:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517)}else e.depthFunc(515);a=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,n=null,a=null,i=null}}},s=new function(){let t=!1,n=null,a=null,i=null,r=null,s=null,o=null,p=null,l=null;return{setTest:function(e){t||(e?$(2960):V(2960))},setMask:function(a){n===a||t||(e.stencilMask(a),n=a)},setFunc:function(t,n,s){a===t&&i===n&&r===s||(e.stencilFunc(t,n,s),a=t,i=n,r=s)},setOp:function(t,n,a){s===t&&o===n&&p===a||(e.stencilOp(t,n,a),s=t,o=n,p=a)},setLocked:function(e){t=e},setClear:function(t){l!==t&&(e.clearStencil(t),l=t)},reset:function(){t=!1,n=null,a=null,i=null,r=null,s=null,o=null,p=null,l=null}}};let o={},p={},l=new WeakMap,d=[],u=null,c=!1,h=null,m=null,f=null,g=null,v=null,y=null,x=null,b=!1,_=null,S=null,T=null,E=null,M=null;const N=e.getParameter(35661);let C=!1,A=0;const I=e.getParameter(7938);-1!==I.indexOf("WebGL")?(A=parseFloat(/^WebGL (\d)/.exec(I)[1]),C=A>=1):-1!==I.indexOf("OpenGL ES")&&(A=parseFloat(/^OpenGL ES (\d)/.exec(I)[1]),C=A>=2);let R=null,k={};const D=e.getParameter(3088),P=e.getParameter(2978),L=(new Ae).fromArray(D),O=(new Ae).fromArray(P);function B(t,n,a){const i=new Uint8Array(4),r=e.createTexture();e.bindTexture(t,r),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<a;t++)e.texImage2D(n+t,0,6408,1,1,0,6408,5121,i);return r}const F={};function $(t){!0!==o[t]&&(e.enable(t),o[t]=!0)}function V(t){!1!==o[t]&&(e.disable(t),o[t]=!1)}F[3553]=B(3553,3553,1),F[34067]=B(34067,34069,6),i.setClear(0,0,0,1),r.setClear(1),s.setClear(0),$(2929),r.setFunc(3),W(!1),H(1),$(2884),G(0);const z={[w]:32774,101:32778,102:32779};if(a)z[103]=32775,z[104]=32776;else{const e=t.get("EXT_blend_minmax");null!==e&&(z[103]=e.MIN_EXT,z[104]=e.MAX_EXT)}const U={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function G(t,n,a,i,r,s,o,p){if(0!==t){if(!1===c&&($(3042),c=!0),5===t)r=r||n,s=s||a,o=o||i,n===m&&r===v||(e.blendEquationSeparate(z[n],z[r]),m=n,v=r),a===f&&i===g&&s===y&&o===x||(e.blendFuncSeparate(U[a],U[i],U[s],U[o]),f=a,g=i,y=s,x=o),h=t,b=null;else if(t!==h||p!==b){if(m===w&&v===w||(e.blendEquation(32774),m=w,v=w),p)switch(t){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,769,0,1);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFuncSeparate(0,769,0,1);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}f=null,g=null,y=null,x=null,h=t,b=p}}else!0===c&&(V(3042),c=!1)}function W(t){_!==t&&(t?e.frontFace(2304):e.frontFace(2305),_=t)}function H(t){0!==t?($(2884),t!==S&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):V(2884),S=t}function q(t,n,a){t?($(32823),E===n&&M===a||(e.polygonOffset(n,a),E=n,M=a)):V(32823)}function j(t){void 0===t&&(t=33984+N-1),R!==t&&(e.activeTexture(t),R=t)}return{buffers:{color:i,depth:r,stencil:s},enable:$,disable:V,bindFramebuffer:function(t,n){return p[t]!==n&&(e.bindFramebuffer(t,n),p[t]=n,a&&(36009===t&&(p[36160]=n),36160===t&&(p[36009]=n)),!0)},drawBuffers:function(a,i){let r=d,s=!1;if(a)if(r=l.get(i),void 0===r&&(r=[],l.set(i,r)),a.isWebGLMultipleRenderTargets){const e=a.texture;if(r.length!==e.length||36064!==r[0]){for(let t=0,n=e.length;t<n;t++)r[t]=36064+t;r.length=e.length,s=!0}}else 36064!==r[0]&&(r[0]=36064,s=!0);else 1029!==r[0]&&(r[0]=1029,s=!0);s&&(n.isWebGL2?e.drawBuffers(r):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(r))},useProgram:function(t){return u!==t&&(e.useProgram(t),u=t,!0)},setBlending:G,setMaterial:function(e,t){2===e.side?V(2884):$(2884);let n=1===e.side;t&&(n=!n),W(n),1===e.blending&&!1===e.transparent?G(0):G(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),r.setFunc(e.depthFunc),r.setTest(e.depthTest),r.setMask(e.depthWrite),i.setMask(e.colorWrite);const a=e.stencilWrite;s.setTest(a),a&&(s.setMask(e.stencilWriteMask),s.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),s.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),q(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?$(32926):V(32926)},setFlipSided:W,setCullFace:H,setLineWidth:function(t){t!==T&&(C&&e.lineWidth(t),T=t)},setPolygonOffset:q,setScissorTest:function(e){e?$(3089):V(3089)},activeTexture:j,bindTexture:function(t,n){null===R&&j();let a=k[R];void 0===a&&(a={type:void 0,texture:void 0},k[R]=a),a.type===t&&a.texture===n||(e.bindTexture(t,n||F[t]),a.type=t,a.texture=n)},unbindTexture:function(){const t=k[R];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===L.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),L.copy(t))},viewport:function(t){!1===O.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),O.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===a&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),o={},R=null,k={},p={},l=new WeakMap,d=[],u=null,c=!1,h=null,m=null,f=null,g=null,v=null,y=null,x=null,b=!1,_=null,S=null,T=null,E=null,M=null,L.set(0,0,e.canvas.width,e.canvas.height),O.set(0,0,e.canvas.width,e.canvas.height),i.reset(),r.reset(),s.reset()}}}function vr(e,t,n,a,i,r,s){const o=i.isWebGL2,p=i.maxTextures,l=i.maxCubemapSize,d=i.maxTextureSize,u=i.maxSamples,c=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,h=new WeakMap;let m;const f=new WeakMap;let g=!1;try{g="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function v(e,t){return g?new OffscreenCanvas(e,t):fe("canvas")}function y(e,t,n,a){let i=1;if((e.width>a||e.height>a)&&(i=a/Math.max(e.width,e.height)),i<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const a=t?ue:Math.floor,r=a(i*e.width),s=a(i*e.height);void 0===m&&(m=v(r,s));const o=n?v(r,s):m;return o.width=r,o.height=s,o.getContext("2d").drawImage(e,0,0,r,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+r+"x"+s+")."),o}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function x(e){return de(e.width)&&de(e.height)}function b(e,t){return e.generateMipmaps&&t&&e.minFilter!==C&&e.minFilter!==A}function w(t){e.generateMipmap(t)}function _(n,a,i,r,s=!1){if(!1===o)return a;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let p=a;return 6403===a&&(5126===i&&(p=33326),5131===i&&(p=33325),5121===i&&(p=33321)),33319===a&&(5126===i&&(p=33328),5131===i&&(p=33327),5121===i&&(p=33323)),6408===a&&(5126===i&&(p=34836),5131===i&&(p=34842),5121===i&&(p=r===Z&&!1===s?35907:32856),32819===i&&(p=32854),32820===i&&(p=32855)),33325!==p&&33326!==p&&33327!==p&&33328!==p&&34842!==p&&34836!==p||t.get("EXT_color_buffer_float"),p}function S(e,t,n){return!0===b(e,n)||e.isFramebufferTexture&&e.minFilter!==C&&e.minFilter!==A?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function T(e){return e===C||1004===e||1005===e?9728:9729}function V(e){const t=e.target;t.removeEventListener("dispose",V),function(e){const t=a.get(e);if(void 0===t.__webglInit)return;const n=e.source,i=f.get(n);if(i){const a=i[t.__cacheKey];a.usedTimes--,0===a.usedTimes&&U(e),0===Object.keys(i).length&&f.delete(n)}a.remove(e)}(t),t.isVideoTexture&&h.delete(t)}function z(t){const n=t.target;n.removeEventListener("dispose",z),function(t){const n=t.texture,i=a.get(t),r=a.get(n);if(void 0!==r.__webglTexture&&(e.deleteTexture(r.__webglTexture),s.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(i.__webglFramebuffer[t]),i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer[t]);else e.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&e.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer&&e.deleteRenderbuffer(i.__webglColorRenderbuffer),i.__webglDepthRenderbuffer&&e.deleteRenderbuffer(i.__webglDepthRenderbuffer);if(t.isWebGLMultipleRenderTargets)for(let t=0,i=n.length;t<i;t++){const i=a.get(n[t]);i.__webglTexture&&(e.deleteTexture(i.__webglTexture),s.memory.textures--),a.remove(n[t])}a.remove(n),a.remove(t)}(n)}function U(t){const n=a.get(t);e.deleteTexture(n.__webglTexture);const i=t.source;delete f.get(i)[n.__cacheKey],s.memory.textures--}let G=0;function W(e,t){const i=a.get(e);if(e.isVideoTexture&&function(e){const t=s.render.frame;h.get(e)!==t&&(h.set(e,t),e.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&i.__version!==e.version){const n=e.image;if(null===n)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==n.complete)return void K(i,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+t),n.bindTexture(3553,i.__webglTexture)}const H={[E]:10497,[M]:33071,[N]:33648},q={[C]:9728,1004:9984,1005:9986,[A]:9729,1007:9985,[I]:9987};function j(n,r,s){if(s?(e.texParameteri(n,10242,H[r.wrapS]),e.texParameteri(n,10243,H[r.wrapT]),32879!==n&&35866!==n||e.texParameteri(n,32882,H[r.wrapR]),e.texParameteri(n,10240,q[r.magFilter]),e.texParameteri(n,10241,q[r.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),32879!==n&&35866!==n||e.texParameteri(n,32882,33071),r.wrapS===M&&r.wrapT===M||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,T(r.magFilter)),e.texParameteri(n,10241,T(r.minFilter)),r.minFilter!==C&&r.minFilter!==A&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){const s=t.get("EXT_texture_filter_anisotropic");if(r.type===P&&!1===t.has("OES_texture_float_linear"))return;if(!1===o&&r.type===L&&!1===t.has("OES_texture_half_float_linear"))return;(r.anisotropy>1||a.get(r).__currentAnisotropy)&&(e.texParameterf(n,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(r.anisotropy,i.getMaxAnisotropy())),a.get(r).__currentAnisotropy=r.anisotropy)}}function X(t,n){let a=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",V));const i=n.source;let r=f.get(i);void 0===r&&(r={},f.set(i,r));const o=function(e){const t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.encoding),t.join()}(n);if(o!==t.__cacheKey){void 0===r[o]&&(r[o]={texture:e.createTexture(),usedTimes:0},s.memory.textures++,a=!0),r[o].usedTimes++;const i=r[t.__cacheKey];void 0!==i&&(r[t.__cacheKey].usedTimes--,0===i.usedTimes&&U(n)),t.__cacheKey=o,t.__webglTexture=r[o].texture}return a}function K(t,a,i){let s=3553;a.isDataArrayTexture&&(s=35866),a.isData3DTexture&&(s=32879);const p=X(t,a),l=a.source;if(n.activeTexture(33984+i),n.bindTexture(s,t.__webglTexture),l.version!==l.__currentVersion||!0===p){e.pixelStorei(37440,a.flipY),e.pixelStorei(37441,a.premultiplyAlpha),e.pixelStorei(3317,a.unpackAlignment),e.pixelStorei(37443,0);const i=function(e){return!o&&(e.wrapS!==M||e.wrapT!==M||e.minFilter!==C&&e.minFilter!==A)}(a)&&!1===x(a.image);let p=y(a.image,i,!1,d);p=ie(a,p);const u=x(p)||o,c=r.convert(a.format,a.encoding);let h,m=r.convert(a.type),f=_(a.internalFormat,c,m,a.encoding,a.isVideoTexture);j(s,a,u);const g=a.mipmaps,v=o&&!0!==a.isVideoTexture,T=void 0===t.__version,E=S(a,p,u);if(a.isDepthTexture)f=6402,o?f=a.type===P?36012:a.type===D?33190:a.type===O?35056:33189:a.type===P&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),a.format===F&&6402===f&&a.type!==k&&a.type!==D&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),a.type=k,m=r.convert(a.type)),a.format===$&&6402===f&&(f=34041,a.type!==O&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),a.type=O,m=r.convert(a.type))),v&&T?n.texStorage2D(3553,1,f,p.width,p.height):n.texImage2D(3553,0,f,p.width,p.height,0,c,m,null);else if(a.isDataTexture)if(g.length>0&&u){v&&T&&n.texStorage2D(3553,E,f,g[0].width,g[0].height);for(let e=0,t=g.length;e<t;e++)h=g[e],v?n.texSubImage2D(3553,e,0,0,h.width,h.height,c,m,h.data):n.texImage2D(3553,e,f,h.width,h.height,0,c,m,h.data);a.generateMipmaps=!1}else v?(T&&n.texStorage2D(3553,E,f,p.width,p.height),n.texSubImage2D(3553,0,0,0,p.width,p.height,c,m,p.data)):n.texImage2D(3553,0,f,p.width,p.height,0,c,m,p.data);else if(a.isCompressedTexture){v&&T&&n.texStorage2D(3553,E,f,g[0].width,g[0].height);for(let e=0,t=g.length;e<t;e++)h=g[e],a.format!==B?null!==c?v?n.compressedTexSubImage2D(3553,e,0,0,h.width,h.height,c,h.data):n.compressedTexImage2D(3553,e,f,h.width,h.height,0,h.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):v?n.texSubImage2D(3553,e,0,0,h.width,h.height,c,m,h.data):n.texImage2D(3553,e,f,h.width,h.height,0,c,m,h.data)}else if(a.isDataArrayTexture)v?(T&&n.texStorage3D(35866,E,f,p.width,p.height,p.depth),n.texSubImage3D(35866,0,0,0,0,p.width,p.height,p.depth,c,m,p.data)):n.texImage3D(35866,0,f,p.width,p.height,p.depth,0,c,m,p.data);else if(a.isData3DTexture)v?(T&&n.texStorage3D(32879,E,f,p.width,p.height,p.depth),n.texSubImage3D(32879,0,0,0,0,p.width,p.height,p.depth,c,m,p.data)):n.texImage3D(32879,0,f,p.width,p.height,p.depth,0,c,m,p.data);else if(a.isFramebufferTexture)v&&T?n.texStorage2D(3553,E,f,p.width,p.height):n.texImage2D(3553,0,f,p.width,p.height,0,c,m,null);else if(g.length>0&&u){v&&T&&n.texStorage2D(3553,E,f,g[0].width,g[0].height);for(let e=0,t=g.length;e<t;e++)h=g[e],v?n.texSubImage2D(3553,e,0,0,c,m,h):n.texImage2D(3553,e,f,c,m,h);a.generateMipmaps=!1}else v?(T&&n.texStorage2D(3553,E,f,p.width,p.height),n.texSubImage2D(3553,0,0,0,c,m,p)):n.texImage2D(3553,0,f,c,m,p);b(a,u)&&w(s),l.__currentVersion=l.version,a.onUpdate&&a.onUpdate(a)}t.__version=a.version}function Q(t,i,s,o,p){const l=r.convert(s.format,s.encoding),d=r.convert(s.type),u=_(s.internalFormat,l,d,s.encoding);a.get(i).__hasExternalTextures||(32879===p||35866===p?n.texImage3D(p,0,u,i.width,i.height,i.depth,0,l,d,null):n.texImage2D(p,0,u,i.width,i.height,0,l,d,null)),n.bindFramebuffer(36160,t),ae(i)?c.framebufferTexture2DMultisampleEXT(36160,o,p,a.get(s).__webglTexture,0,te(i)):e.framebufferTexture2D(36160,o,p,a.get(s).__webglTexture,0),n.bindFramebuffer(36160,null)}function J(t,n,a){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){let i=33189;if(a||ae(n)){const t=n.depthTexture;t&&t.isDepthTexture&&(t.type===P?i=36012:t.type===D&&(i=33190));const a=te(n);ae(n)?c.renderbufferStorageMultisampleEXT(36161,a,i,n.width,n.height):e.renderbufferStorageMultisample(36161,a,i,n.width,n.height)}else e.renderbufferStorage(36161,i,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){const i=te(n);a&&!1===ae(n)?e.renderbufferStorageMultisample(36161,i,35056,n.width,n.height):ae(n)?c.renderbufferStorageMultisampleEXT(36161,i,35056,n.width,n.height):e.renderbufferStorage(36161,34041,n.width,n.height),e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=!0===n.isWebGLMultipleRenderTargets?n.texture[0]:n.texture,i=r.convert(t.format,t.encoding),s=r.convert(t.type),o=_(t.internalFormat,i,s,t.encoding),p=te(n);a&&!1===ae(n)?e.renderbufferStorageMultisample(36161,p,o,n.width,n.height):ae(n)?c.renderbufferStorageMultisampleEXT(36161,p,o,n.width,n.height):e.renderbufferStorage(36161,o,n.width,n.height)}e.bindRenderbuffer(36161,null)}function ee(t){const i=a.get(t),r=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!i.__autoAllocateDepthBuffer){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,i){if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,t),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");a.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),W(i.depthTexture,0);const r=a.get(i.depthTexture).__webglTexture,s=te(i);if(i.depthTexture.format===F)ae(i)?c.framebufferTexture2DMultisampleEXT(36160,36096,3553,r,0,s):e.framebufferTexture2D(36160,36096,3553,r,0);else{if(i.depthTexture.format!==$)throw new Error("Unknown depthTexture format");ae(i)?c.framebufferTexture2DMultisampleEXT(36160,33306,3553,r,0,s):e.framebufferTexture2D(36160,33306,3553,r,0)}}(i.__webglFramebuffer,t)}else if(r){i.__webglDepthbuffer=[];for(let a=0;a<6;a++)n.bindFramebuffer(36160,i.__webglFramebuffer[a]),i.__webglDepthbuffer[a]=e.createRenderbuffer(),J(i.__webglDepthbuffer[a],t,!1)}else n.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=e.createRenderbuffer(),J(i.__webglDepthbuffer,t,!1);n.bindFramebuffer(36160,null)}function te(e){return Math.min(u,e.samples)}function ae(e){const n=a.get(e);return o&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function ie(e,n){const a=e.encoding,i=e.format,r=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===ne||a!==Y&&(a===Z?!1===o?!0===t.has("EXT_sRGB")&&i===B?(e.format=ne,e.minFilter=A,e.generateMipmaps=!1):n=Te.sRGBToLinear(n):i===B&&r===R||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",a)),n}this.allocateTextureUnit=function(){const e=G;return e>=p&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+p),G+=1,e},this.resetTextureUnits=function(){G=0},this.setTexture2D=W,this.setTexture2DArray=function(e,t){const i=a.get(e);e.version>0&&i.__version!==e.version?K(i,e,t):(n.activeTexture(33984+t),n.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(e,t){const i=a.get(e);e.version>0&&i.__version!==e.version?K(i,e,t):(n.activeTexture(33984+t),n.bindTexture(32879,i.__webglTexture))},this.setTextureCube=function(t,i){const s=a.get(t);t.version>0&&s.__version!==t.version?function(t,a,i){if(6!==a.image.length)return;const s=X(t,a),p=a.source;if(n.activeTexture(33984+i),n.bindTexture(34067,t.__webglTexture),p.version!==p.__currentVersion||!0===s){e.pixelStorei(37440,a.flipY),e.pixelStorei(37441,a.premultiplyAlpha),e.pixelStorei(3317,a.unpackAlignment),e.pixelStorei(37443,0);const i=a.isCompressedTexture||a.image[0].isCompressedTexture,s=a.image[0]&&a.image[0].isDataTexture,d=[];for(let e=0;e<6;e++)d[e]=i||s?s?a.image[e].image:a.image[e]:y(a.image[e],!1,!0,l),d[e]=ie(a,d[e]);const u=d[0],c=x(u)||o,h=r.convert(a.format,a.encoding),m=r.convert(a.type),f=_(a.internalFormat,h,m,a.encoding),g=o&&!0!==a.isVideoTexture,v=void 0===t.__version;let T,E=S(a,u,c);if(j(34067,a,c),i){g&&v&&n.texStorage2D(34067,E,f,u.width,u.height);for(let e=0;e<6;e++){T=d[e].mipmaps;for(let t=0;t<T.length;t++){const i=T[t];a.format!==B?null!==h?g?n.compressedTexSubImage2D(34069+e,t,0,0,i.width,i.height,h,i.data):n.compressedTexImage2D(34069+e,t,f,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):g?n.texSubImage2D(34069+e,t,0,0,i.width,i.height,h,m,i.data):n.texImage2D(34069+e,t,f,i.width,i.height,0,h,m,i.data)}}}else{T=a.mipmaps,g&&v&&(T.length>0&&E++,n.texStorage2D(34067,E,f,d[0].width,d[0].height));for(let e=0;e<6;e++)if(s){g?n.texSubImage2D(34069+e,0,0,0,d[e].width,d[e].height,h,m,d[e].data):n.texImage2D(34069+e,0,f,d[e].width,d[e].height,0,h,m,d[e].data);for(let t=0;t<T.length;t++){const a=T[t].image[e].image;g?n.texSubImage2D(34069+e,t+1,0,0,a.width,a.height,h,m,a.data):n.texImage2D(34069+e,t+1,f,a.width,a.height,0,h,m,a.data)}}else{g?n.texSubImage2D(34069+e,0,0,0,h,m,d[e]):n.texImage2D(34069+e,0,f,h,m,d[e]);for(let t=0;t<T.length;t++){const a=T[t];g?n.texSubImage2D(34069+e,t+1,0,0,h,m,a.image[e]):n.texImage2D(34069+e,t+1,f,h,m,a.image[e])}}}b(a,c)&&w(34067),p.__currentVersion=p.version,a.onUpdate&&a.onUpdate(a)}t.__version=a.version}(s,t,i):(n.activeTexture(33984+i),n.bindTexture(34067,s.__webglTexture))},this.rebindTextures=function(e,t,n){const i=a.get(e);void 0!==t&&Q(i.__webglFramebuffer,e,e.texture,36064,3553),void 0!==n&&ee(e)},this.setupRenderTarget=function(t){const p=t.texture,l=a.get(t),d=a.get(p);t.addEventListener("dispose",z),!0!==t.isWebGLMultipleRenderTargets&&(void 0===d.__webglTexture&&(d.__webglTexture=e.createTexture()),d.__version=p.version,s.memory.textures++);const u=!0===t.isWebGLCubeRenderTarget,c=!0===t.isWebGLMultipleRenderTargets,h=x(t)||o;if(u){l.__webglFramebuffer=[];for(let t=0;t<6;t++)l.__webglFramebuffer[t]=e.createFramebuffer()}else if(l.__webglFramebuffer=e.createFramebuffer(),c)if(i.drawBuffers){const n=t.texture;for(let t=0,i=n.length;t<i;t++){const i=a.get(n[t]);void 0===i.__webglTexture&&(i.__webglTexture=e.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(o&&t.samples>0&&!1===ae(t)){l.__webglMultisampledFramebuffer=e.createFramebuffer(),l.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,l.__webglColorRenderbuffer);const a=r.convert(p.format,p.encoding),i=r.convert(p.type),s=_(p.internalFormat,a,i,p.encoding),o=te(t);e.renderbufferStorageMultisample(36161,o,s,t.width,t.height),n.bindFramebuffer(36160,l.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,l.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(l.__webglDepthRenderbuffer=e.createRenderbuffer(),J(l.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(36160,null)}if(u){n.bindTexture(34067,d.__webglTexture),j(34067,p,h);for(let e=0;e<6;e++)Q(l.__webglFramebuffer[e],t,p,36064,34069+e);b(p,h)&&w(34067),n.unbindTexture()}else if(c){const e=t.texture;for(let i=0,r=e.length;i<r;i++){const r=e[i],s=a.get(r);n.bindTexture(3553,s.__webglTexture),j(3553,r,h),Q(l.__webglFramebuffer,t,r,36064+i,3553),b(r,h)&&w(3553)}n.unbindTexture()}else{let e=3553;(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(o?e=t.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(e,d.__webglTexture),j(e,p,h),Q(l.__webglFramebuffer,t,p,36064,e),b(p,h)&&w(e),n.unbindTexture()}t.depthBuffer&&ee(t)},this.updateRenderTargetMipmap=function(e){const t=x(e)||o,i=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let r=0,s=i.length;r<s;r++){const s=i[r];if(b(s,t)){const t=e.isWebGLCubeRenderTarget?34067:3553,i=a.get(s).__webglTexture;n.bindTexture(t,i),w(t),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(o&&t.samples>0&&!1===ae(t)){const i=t.width,r=t.height;let s=16384;const o=[36064],p=t.stencilBuffer?33306:36096;t.depthBuffer&&o.push(p);const l=a.get(t),d=void 0!==l.__ignoreDepthValues&&l.__ignoreDepthValues;!1===d&&(t.depthBuffer&&(s|=256),t.stencilBuffer&&(s|=1024)),n.bindFramebuffer(36008,l.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,l.__webglFramebuffer),!0===d&&(e.invalidateFramebuffer(36008,[p]),e.invalidateFramebuffer(36009,[p])),e.blitFramebuffer(0,0,i,r,0,0,i,r,s,9728),e.invalidateFramebuffer(36008,o),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,l.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=ee,this.setupFrameBufferTexture=Q,this.useMultisampledRTT=ae}function yr(e,t,n){const a=n.isWebGL2;return{convert:function(e,n=null){let i;if(e===R)return 5121;if(1017===e)return 32819;if(1018===e)return 32820;if(1010===e)return 5120;if(1011===e)return 5122;if(e===k)return 5123;if(1013===e)return 5124;if(e===D)return 5125;if(e===P)return 5126;if(e===L)return a?5131:(i=t.get("OES_texture_half_float"),null!==i?i.HALF_FLOAT_OES:null);if(1021===e)return 6406;if(e===B)return 6408;if(1024===e)return 6409;if(1025===e)return 6410;if(e===F)return 6402;if(e===$)return 34041;if(1028===e)return 6403;if(1022===e)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(e===ne)return i=t.get("EXT_sRGB"),null!==i?i.SRGB_ALPHA_EXT:null;if(1029===e)return 36244;if(1030===e)return 33319;if(1031===e)return 33320;if(1033===e)return 36249;if(e===V||e===z||e===U||e===G)if(n===Z){if(i=t.get("WEBGL_compressed_texture_s3tc_srgb"),null===i)return null;if(e===V)return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===z)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===U)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===G)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(i=t.get("WEBGL_compressed_texture_s3tc"),null===i)return null;if(e===V)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===z)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===U)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===G)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===e||35841===e||35842===e||35843===e){if(i=t.get("WEBGL_compressed_texture_pvrtc"),null===i)return null;if(35840===e)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===e)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===e)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===e)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===e)return i=t.get("WEBGL_compressed_texture_etc1"),null!==i?i.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===e||37496===e){if(i=t.get("WEBGL_compressed_texture_etc"),null===i)return null;if(37492===e)return n===Z?i.COMPRESSED_SRGB8_ETC2:i.COMPRESSED_RGB8_ETC2;if(37496===e)return n===Z?i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC}if(37808===e||37809===e||37810===e||37811===e||37812===e||37813===e||37814===e||37815===e||37816===e||37817===e||37818===e||37819===e||37820===e||37821===e){if(i=t.get("WEBGL_compressed_texture_astc"),null===i)return null;if(37808===e)return n===Z?i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:i.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===e)return n===Z?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:i.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===e)return n===Z?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:i.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===e)return n===Z?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:i.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===e)return n===Z?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:i.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===e)return n===Z?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:i.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===e)return n===Z?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:i.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===e)return n===Z?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:i.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===e)return n===Z?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:i.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===e)return n===Z?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:i.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===e)return n===Z?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:i.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===e)return n===Z?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:i.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===e)return n===Z?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:i.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===e)return n===Z?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:i.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===e){if(i=t.get("EXT_texture_compression_bptc"),null===i)return null;if(36492===e)return n===Z?i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:i.COMPRESSED_RGBA_BPTC_UNORM_EXT}return e===O?a?34042:(i=t.get("WEBGL_depth_texture"),null!==i?i.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}mr.prototype.isMeshDistanceMaterial=!0;class xr extends Bn{constructor(e=[]){super(),this.cameras=e}}xr.prototype.isArrayCamera=!0;class br extends Ot{constructor(){super(),this.type="Group"}}br.prototype.isGroup=!0;const wr={type:"move"};class _r{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new br,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new br,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Pe,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Pe),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new br,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Pe,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Pe),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let a=null,i=null,r=null;const s=this._targetRay,o=this._grip,p=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==s&&(a=t.getPose(e.targetRaySpace,n),null!==a&&(s.matrix.fromArray(a.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),a.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(a.linearVelocity)):s.hasLinearVelocity=!1,a.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(a.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(wr))),p&&e.hand){r=!0;for(const a of e.hand.values()){const e=t.getJointPose(a,n);if(void 0===p.joints[a.jointName]){const e=new br;e.matrixAutoUpdate=!1,e.visible=!1,p.joints[a.jointName]=e,p.add(e)}const i=p.joints[a.jointName];null!==e&&(i.matrix.fromArray(e.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.jointRadius=e.radius),i.visible=null!==e}const a=p.joints["index-finger-tip"],i=p.joints["thumb-tip"],s=a.position.distanceTo(i.position),o=.02,l=.005;p.inputState.pinching&&s>o+l?(p.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!p.inputState.pinching&&s<=o-l&&(p.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&(i=t.getPose(e.gripSpace,n),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1));return null!==s&&(s.visible=null!==a),null!==o&&(o.visible=null!==i),null!==p&&(p.visible=null!==r),this}}class Sr extends Ce{constructor(e,t,n,a,i,r,s,o,p,l){if((l=void 0!==l?l:F)!==F&&l!==$)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&l===F&&(n=k),void 0===n&&l===$&&(n=O),super(null,a,i,r,s,o,l,n,p),this.image={width:e,height:t},this.magFilter=void 0!==s?s:C,this.minFilter=void 0!==o?o:C,this.flipY=!1,this.generateMipmaps=!1}}Sr.prototype.isDepthTexture=!0;class Tr extends ae{constructor(e,t){super();const n=this;let a=null,i=1,r=null,s="local-floor",o=null,p=null,l=null,d=null,u=null;const c=t.getContextAttributes();let h=null,m=null;const f=[],g=new Map,v=new Bn;v.layers.enable(1),v.viewport=new Ae;const y=new Bn;y.layers.enable(2),y.viewport=new Ae;const x=[v,y],b=new xr;b.layers.enable(1),b.layers.enable(2);let w=null,_=null;function S(e){const t=g.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function T(){g.forEach((function(e,t){e.disconnect(t)})),g.clear(),w=null,_=null,e.setRenderTarget(h),d=null,l=null,p=null,a=null,m=null,I.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function E(e){const t=a.inputSources;for(let e=0;e<f.length;e++)g.set(t[e],f[e]);for(let t=0;t<e.removed.length;t++){const n=e.removed[t],a=g.get(n);a&&(a.dispatchEvent({type:"disconnected",data:n}),g.delete(n))}for(let t=0;t<e.added.length;t++){const n=e.added[t],a=g.get(n);a&&a.dispatchEvent({type:"connected",data:n})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=f[e];return void 0===t&&(t=new _r,f[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=f[e];return void 0===t&&(t=new _r,f[e]=t),t.getGripSpace()},this.getHand=function(e){let t=f[e];return void 0===t&&(t=new _r,f[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){i=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){s=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return r},this.getBaseLayer=function(){return null!==l?l:d},this.getBinding=function(){return p},this.getFrame=function(){return u},this.getSession=function(){return a},this.setSession=async function(o){if(a=o,null!==a){if(h=e.getRenderTarget(),a.addEventListener("select",S),a.addEventListener("selectstart",S),a.addEventListener("selectend",S),a.addEventListener("squeeze",S),a.addEventListener("squeezestart",S),a.addEventListener("squeezeend",S),a.addEventListener("end",T),a.addEventListener("inputsourceschange",E),!0!==c.xrCompatible&&await t.makeXRCompatible(),void 0===a.renderState.layers||!1===e.capabilities.isWebGL2){const n={antialias:void 0!==a.renderState.layers||c.antialias,alpha:c.alpha,depth:c.depth,stencil:c.stencil,framebufferScaleFactor:i};d=new XRWebGLLayer(a,t,n),a.updateRenderState({baseLayer:d}),m=new Ie(d.framebufferWidth,d.framebufferHeight,{format:B,type:R,encoding:e.outputEncoding})}else{let n=null,r=null,s=null;c.depth&&(s=c.stencil?35056:33190,n=c.stencil?$:F,r=c.stencil?O:k);const o={colorFormat:e.outputEncoding===Z?35907:32856,depthFormat:s,scaleFactor:i};p=new XRWebGLBinding(a,t),l=p.createProjectionLayer(o),a.updateRenderState({layers:[l]}),m=new Ie(l.textureWidth,l.textureHeight,{format:B,type:R,depthTexture:new Sr(l.textureWidth,l.textureHeight,r,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:c.stencil,encoding:e.outputEncoding,samples:c.antialias?4:0}),e.properties.get(m).__ignoreDepthValues=l.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),r=await a.requestReferenceSpace(s),I.setContext(a),I.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const M=new Pe,N=new Pe;function C(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===a)return;b.near=y.near=v.near=e.near,b.far=y.far=v.far=e.far,w===b.near&&_===b.far||(a.updateRenderState({depthNear:b.near,depthFar:b.far}),w=b.near,_=b.far);const t=e.parent,n=b.cameras;C(b,t);for(let e=0;e<n.length;e++)C(n[e],t);b.matrixWorld.decompose(b.position,b.quaternion,b.scale),e.position.copy(b.position),e.quaternion.copy(b.quaternion),e.scale.copy(b.scale),e.matrix.copy(b.matrix),e.matrixWorld.copy(b.matrixWorld);const i=e.children;for(let e=0,t=i.length;e<t;e++)i[e].updateMatrixWorld(!0);2===n.length?function(e,t,n){M.setFromMatrixPosition(t.matrixWorld),N.setFromMatrixPosition(n.matrixWorld);const a=M.distanceTo(N),i=t.projectionMatrix.elements,r=n.projectionMatrix.elements,s=i[14]/(i[10]-1),o=i[14]/(i[10]+1),p=(i[9]+1)/i[5],l=(i[9]-1)/i[5],d=(i[8]-1)/i[0],u=(r[8]+1)/r[0],c=s*d,h=s*u,m=a/(-d+u),f=m*-d;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(f),e.translateZ(m),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const g=s+m,v=o+m,y=c-f,x=h+(a-f),b=p*o/v*g,w=l*o/v*g;e.projectionMatrix.makePerspective(y,x,b,w,g,v)}(b,v,y):b.projectionMatrix.copy(v.projectionMatrix)},this.getCamera=function(){return b},this.getFoveation=function(){return null!==l?l.fixedFoveation:null!==d?d.fixedFoveation:void 0},this.setFoveation=function(e){null!==l&&(l.fixedFoveation=e),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=e)};let A=null;const I=new Kn;I.setAnimationLoop((function(t,n){if(o=n.getViewerPose(r),u=n,null!==o){const t=o.views;null!==d&&(e.setRenderTargetFramebuffer(m,d.framebuffer),e.setRenderTarget(m));let n=!1;t.length!==b.cameras.length&&(b.cameras.length=0,n=!0);for(let a=0;a<t.length;a++){const i=t[a];let r=null;if(null!==d)r=d.getViewport(i);else{const t=p.getViewSubImage(l,i);r=t.viewport,0===a&&(e.setRenderTargetTextures(m,t.colorTexture,l.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(m))}const s=x[a];s.matrix.fromArray(i.transform.matrix),s.projectionMatrix.fromArray(i.projectionMatrix),s.viewport.set(r.x,r.y,r.width,r.height),0===a&&b.matrix.copy(s.matrix),!0===n&&b.cameras.push(s)}}const i=a.inputSources;for(let e=0;e<f.length;e++){const t=f[e],a=i[e];t.update(a,n,r)}A&&A(t,n),u=null})),this.setAnimationLoop=function(e){A=e},this.dispose=function(){}}}function Er(e){function t(t,n){t.opacity.value=n.opacity,n.color&&t.diffuse.value.copy(n.color),n.emissive&&t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(t.map.value=n.map),n.alphaMap&&(t.alphaMap.value=n.alphaMap),n.specularMap&&(t.specularMap.value=n.specularMap),n.alphaTest>0&&(t.alphaTest.value=n.alphaTest);const a=e.get(n).envMap;let i,r;a&&(t.envMap.value=a,t.flipEnvMap.value=a.isCubeTexture&&!1===a.isRenderTargetTexture?-1:1,t.reflectivity.value=n.reflectivity,t.ior.value=n.ior,t.refractionRatio.value=n.refractionRatio),n.lightMap&&(t.lightMap.value=n.lightMap,t.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(t.aoMap.value=n.aoMap,t.aoMapIntensity.value=n.aoMapIntensity),n.map?i=n.map:n.specularMap?i=n.specularMap:n.displacementMap?i=n.displacementMap:n.normalMap?i=n.normalMap:n.bumpMap?i=n.bumpMap:n.roughnessMap?i=n.roughnessMap:n.metalnessMap?i=n.metalnessMap:n.alphaMap?i=n.alphaMap:n.emissiveMap?i=n.emissiveMap:n.clearcoatMap?i=n.clearcoatMap:n.clearcoatNormalMap?i=n.clearcoatNormalMap:n.clearcoatRoughnessMap?i=n.clearcoatRoughnessMap:n.specularIntensityMap?i=n.specularIntensityMap:n.specularColorMap?i=n.specularColorMap:n.transmissionMap?i=n.transmissionMap:n.thicknessMap?i=n.thicknessMap:n.sheenColorMap?i=n.sheenColorMap:n.sheenRoughnessMap&&(i=n.sheenRoughnessMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix)),n.aoMap?r=n.aoMap:n.lightMap&&(r=n.lightMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uv2Transform.value.copy(r.matrix))}function n(t,n){t.roughness.value=n.roughness,t.metalness.value=n.metalness,n.roughnessMap&&(t.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(t.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(t.emissiveMap.value=n.emissiveMap),n.bumpMap&&(t.bumpMap.value=n.bumpMap,t.bumpScale.value=n.bumpScale,1===n.side&&(t.bumpScale.value*=-1)),n.normalMap&&(t.normalMap.value=n.normalMap,t.normalScale.value.copy(n.normalScale),1===n.side&&t.normalScale.value.negate()),n.displacementMap&&(t.displacementMap.value=n.displacementMap,t.displacementScale.value=n.displacementScale,t.displacementBias.value=n.displacementBias),e.get(n).envMap&&(t.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,a,i,r,s){a.isMeshBasicMaterial?t(e,a):a.isMeshLambertMaterial?(t(e,a),function(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(e,a)):a.isMeshToonMaterial?(t(e,a),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,a)):a.isMeshPhongMaterial?(t(e,a),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,a)):a.isMeshStandardMaterial?(t(e,a),a.isMeshPhysicalMaterial?function(e,t,a){n(e,t),e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap)),t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,1===t.side&&e.clearcoatNormalScale.value.negate())),t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=a.texture,e.transmissionSamplerSize.value.set(a.width,a.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor)),e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap),t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap)}(e,a,s):n(e,a)):a.isMeshMatcapMaterial?(t(e,a),function(e,t){t.matcap&&(e.matcap.value=t.matcap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,a)):a.isMeshDepthMaterial?(t(e,a),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,a)):a.isMeshDistanceMaterial?(t(e,a),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,a)):a.isMeshNormalMaterial?(t(e,a),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,a)):a.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,a),a.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,a)):a.isPointsMaterial?function(e,t,n,a){let i;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*a,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest),t.map?i=t.map:t.alphaMap&&(i=t.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}(e,a,i,r):a.isSpriteMaterial?function(e,t){let n;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest),t.map?n=t.map:t.alphaMap&&(n=t.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,a):a.isShadowMaterial?(e.color.value.copy(a.color),e.opacity.value=a.opacity):a.isShaderMaterial&&(a.uniformsNeedUpdate=!1)}}}function Mr(e={}){const t=void 0!==e.canvas?e.canvas:function(){const e=fe("canvas");return e.style.display="block",e}(),n=void 0!==e.context?e.context:null,a=void 0===e.depth||e.depth,i=void 0===e.stencil||e.stencil,r=void 0!==e.antialias&&e.antialias,s=void 0===e.premultipliedAlpha||e.premultipliedAlpha,o=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,p=void 0!==e.powerPreference?e.powerPreference:"default",l=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let d;d=void 0!==e.context?n.getContextAttributes().alpha:void 0!==e.alpha&&e.alpha;let u=null,c=null;const h=[],m=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Y,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const f=this;let g=!1,v=0,y=0,x=null,b=-1,w=null;const _=new Ae,S=new Ae;let T=null,E=t.width,M=t.height,N=1,C=null,A=null;const k=new Ae(0,0,E,M),D=new Ae(0,0,E,M);let O=!1;const F=new Xn;let $=!1,V=!1,z=null;const U=new ut,G=new ce,W=new Pe,H={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function q(){return null===x?N:1}let j,X,K,Z,Q,J,ee,te,ne,ae,ie,re,se,oe,pe,le,de,he,me,ge,ve,ye,xe,be=n;function we(e,n){for(let a=0;a<e.length;a++){const i=e[a],r=t.getContext(i,n);if(null!==r)return r}return null}try{const e={alpha:!0,depth:a,stencil:i,antialias:r,premultipliedAlpha:s,preserveDrawingBuffer:o,powerPreference:p,failIfMajorPerformanceCaveat:l};if("setAttribute"in t&&t.setAttribute("data-engine","three.js r138"),t.addEventListener("webglcontextlost",Te,!1),t.addEventListener("webglcontextrestored",Ee,!1),null===be){const t=["webgl2","webgl","experimental-webgl"];if(!0===f.isWebGL1Renderer&&t.shift(),be=we(t,e),null===be)throw we(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===be.getShaderPrecisionFormat&&(be.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function _e(){j=new wa(be),X=new ia(be,j,e),j.init(X),ye=new yr(be,j,X),K=new gr(be,j,X),Z=new Ta(be),Q=new nr,J=new vr(be,j,K,Q,X,ye,Z),ee=new sa(f),te=new ba(f),ne=new Yn(be,X),xe=new na(be,j,ne,X),ae=new _a(be,ne,Z,xe),ie=new Aa(be,ae,ne,Z),me=new Ca(be,X,J),le=new ra(Q),re=new tr(f,ee,te,j,X,xe,le),se=new Er(Q),oe=new sr,pe=new cr(j,X),he=new ta(f,ee,K,ie,d,s),de=new fr(f,ie,X),ge=new aa(be,j,Z,X),ve=new Sa(be,j,Z,X),Z.programs=re.programs,f.capabilities=X,f.extensions=j,f.properties=Q,f.renderLists=oe,f.shadowMap=de,f.state=K,f.info=Z}_e();const Se=new Tr(f,be);function Te(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function Ee(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const e=Z.autoReset,t=de.enabled,n=de.autoUpdate,a=de.needsUpdate,i=de.type;_e(),Z.autoReset=e,de.enabled=t,de.autoUpdate=n,de.needsUpdate=a,de.type=i}function Me(e){const t=e.target;t.removeEventListener("dispose",Me),function(e){(function(e){const t=Q.get(e).programs;void 0!==t&&(t.forEach((function(e){re.releaseProgram(e)})),e.isShaderMaterial&&re.releaseShaderCache(e))})(e),Q.remove(e)}(t)}this.xr=Se,this.getContext=function(){return be},this.getContextAttributes=function(){return be.getContextAttributes()},this.forceContextLoss=function(){const e=j.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=j.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return N},this.setPixelRatio=function(e){void 0!==e&&(N=e,this.setSize(E,M,!1))},this.getSize=function(e){return e.set(E,M)},this.setSize=function(e,n,a){Se.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(E=e,M=n,t.width=Math.floor(e*N),t.height=Math.floor(n*N),!1!==a&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return e.set(E*N,M*N).floor()},this.setDrawingBufferSize=function(e,n,a){E=e,M=n,N=a,t.width=Math.floor(e*a),t.height=Math.floor(n*a),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return e.copy(_)},this.getViewport=function(e){return e.copy(k)},this.setViewport=function(e,t,n,a){e.isVector4?k.set(e.x,e.y,e.z,e.w):k.set(e,t,n,a),K.viewport(_.copy(k).multiplyScalar(N).floor())},this.getScissor=function(e){return e.copy(D)},this.setScissor=function(e,t,n,a){e.isVector4?D.set(e.x,e.y,e.z,e.w):D.set(e,t,n,a),K.scissor(S.copy(D).multiplyScalar(N).floor())},this.getScissorTest=function(){return O},this.setScissorTest=function(e){K.setScissorTest(O=e)},this.setOpaqueSort=function(e){C=e},this.setTransparentSort=function(e){A=e},this.getClearColor=function(e){return e.copy(he.getClearColor())},this.setClearColor=function(){he.setClearColor.apply(he,arguments)},this.getClearAlpha=function(){return he.getClearAlpha()},this.setClearAlpha=function(){he.setClearAlpha.apply(he,arguments)},this.clear=function(e=!0,t=!0,n=!0){let a=0;e&&(a|=16384),t&&(a|=256),n&&(a|=1024),be.clear(a)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Te,!1),t.removeEventListener("webglcontextrestored",Ee,!1),oe.dispose(),pe.dispose(),Q.dispose(),ee.dispose(),te.dispose(),ie.dispose(),xe.dispose(),re.dispose(),Se.dispose(),Se.removeEventListener("sessionstart",Ce),Se.removeEventListener("sessionend",Re),z&&(z.dispose(),z=null),ke.stop()},this.renderBufferDirect=function(e,t,n,a,i,r){null===t&&(t=H);const s=i.isMesh&&i.matrixWorld.determinant()<0,o=function(e,t,n,a,i){!0!==t.isScene&&(t=H),J.resetTextureUnits();const r=t.fog,s=a.isMeshStandardMaterial?t.environment:null,o=null===x?f.outputEncoding:!0===x.isXRRenderTarget?x.texture.encoding:Y,p=(a.isMeshStandardMaterial?te:ee).get(a.envMap||s),l=!0===a.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,d=!!a.normalMap&&!!n.attributes.tangent,u=!!n.morphAttributes.position,h=!!n.morphAttributes.normal,m=!!n.morphAttributes.color,g=a.toneMapped?f.toneMapping:0,v=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,y=void 0!==v?v.length:0,_=Q.get(a),S=c.state.lights;if(!0===$&&(!0===V||e!==w)){const t=e===w&&a.id===b;le.setState(a,e,t)}let T=!1;a.version===_.__version?_.needsLights&&_.lightsStateVersion!==S.state.version||_.outputEncoding!==o||i.isInstancedMesh&&!1===_.instancing?T=!0:i.isInstancedMesh||!0!==_.instancing?i.isSkinnedMesh&&!1===_.skinning?T=!0:i.isSkinnedMesh||!0!==_.skinning?_.envMap!==p||a.fog&&_.fog!==r?T=!0:void 0===_.numClippingPlanes||_.numClippingPlanes===le.numPlanes&&_.numIntersection===le.numIntersection?(_.vertexAlphas!==l||_.vertexTangents!==d||_.morphTargets!==u||_.morphNormals!==h||_.morphColors!==m||_.toneMapping!==g||!0===X.isWebGL2&&_.morphTargetsCount!==y)&&(T=!0):T=!0:T=!0:T=!0:(T=!0,_.__version=a.version);let E=_.currentProgram;!0===T&&(E=Fe(a,t,i));let C=!1,A=!1,I=!1;const R=E.getUniforms(),k=_.uniforms;if(K.useProgram(E.program)&&(C=!0,A=!0,I=!0),a.id!==b&&(b=a.id,A=!0),C||w!==e){if(R.setValue(be,"projectionMatrix",e.projectionMatrix),X.logarithmicDepthBuffer&&R.setValue(be,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),w!==e&&(w=e,A=!0,I=!0),a.isShaderMaterial||a.isMeshPhongMaterial||a.isMeshToonMaterial||a.isMeshStandardMaterial||a.envMap){const t=R.map.cameraPosition;void 0!==t&&t.setValue(be,W.setFromMatrixPosition(e.matrixWorld))}(a.isMeshPhongMaterial||a.isMeshToonMaterial||a.isMeshLambertMaterial||a.isMeshBasicMaterial||a.isMeshStandardMaterial||a.isShaderMaterial)&&R.setValue(be,"isOrthographic",!0===e.isOrthographicCamera),(a.isMeshPhongMaterial||a.isMeshToonMaterial||a.isMeshLambertMaterial||a.isMeshBasicMaterial||a.isMeshStandardMaterial||a.isShaderMaterial||a.isShadowMaterial||i.isSkinnedMesh)&&R.setValue(be,"viewMatrix",e.matrixWorldInverse)}if(i.isSkinnedMesh){R.setOptional(be,i,"bindMatrix"),R.setOptional(be,i,"bindMatrixInverse");const e=i.skeleton;e&&(X.floatVertexTextures?(null===e.boneTexture&&e.computeBoneTexture(),R.setValue(be,"boneTexture",e.boneTexture,J),R.setValue(be,"boneTextureSize",e.boneTextureSize)):R.setOptional(be,e,"boneMatrices"))}const D=n.morphAttributes;var P,L;return(void 0!==D.position||void 0!==D.normal||void 0!==D.color&&!0===X.isWebGL2)&&me.update(i,n,a,E),(A||_.receiveShadow!==i.receiveShadow)&&(_.receiveShadow=i.receiveShadow,R.setValue(be,"receiveShadow",i.receiveShadow)),A&&(R.setValue(be,"toneMappingExposure",f.toneMappingExposure),_.needsLights&&(L=I,(P=k).ambientLightColor.needsUpdate=L,P.lightProbe.needsUpdate=L,P.directionalLights.needsUpdate=L,P.directionalLightShadows.needsUpdate=L,P.pointLights.needsUpdate=L,P.pointLightShadows.needsUpdate=L,P.spotLights.needsUpdate=L,P.spotLightShadows.needsUpdate=L,P.rectAreaLights.needsUpdate=L,P.hemisphereLights.needsUpdate=L),r&&a.fog&&se.refreshFogUniforms(k,r),se.refreshMaterialUniforms(k,a,N,M,z),Di.upload(be,_.uniformsList,k,J)),a.isShaderMaterial&&!0===a.uniformsNeedUpdate&&(Di.upload(be,_.uniformsList,k,J),a.uniformsNeedUpdate=!1),a.isSpriteMaterial&&R.setValue(be,"center",i.center),R.setValue(be,"modelViewMatrix",i.modelViewMatrix),R.setValue(be,"normalMatrix",i.normalMatrix),R.setValue(be,"modelMatrix",i.matrixWorld),E}(e,t,n,a,i);K.setMaterial(a,s);let p=n.index;const l=n.attributes.position;if(null===p){if(void 0===l||0===l.count)return}else if(0===p.count)return;let d,u=1;!0===a.wireframe&&(p=ae.getWireframeAttribute(n),u=2),xe.setup(i,a,o,n,p);let h=ge;null!==p&&(d=ne.get(p),h=ve,h.setIndex(d));const m=null!==p?p.count:l.count,g=n.drawRange.start*u,v=n.drawRange.count*u,y=null!==r?r.start*u:0,_=null!==r?r.count*u:1/0,S=Math.max(g,y),T=Math.min(m,g+v,y+_)-1,E=Math.max(0,T-S+1);if(0!==E){if(i.isMesh)!0===a.wireframe?(K.setLineWidth(a.wireframeLinewidth*q()),h.setMode(1)):h.setMode(4);else if(i.isLine){let e=a.linewidth;void 0===e&&(e=1),K.setLineWidth(e*q()),i.isLineSegments?h.setMode(1):i.isLineLoop?h.setMode(2):h.setMode(3)}else i.isPoints?h.setMode(0):i.isSprite&&h.setMode(4);if(i.isInstancedMesh)h.renderInstances(S,E,i.count);else if(n.isInstancedBufferGeometry){const e=Math.min(n.instanceCount,n._maxInstanceCount);h.renderInstances(S,E,e)}else h.render(S,E)}},this.compile=function(e,t){c=pe.get(e),c.init(),m.push(c),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(c.pushLight(e),e.castShadow&&c.pushShadow(e))})),c.setupLights(f.physicallyCorrectLights),e.traverse((function(t){const n=t.material;if(n)if(Array.isArray(n))for(let a=0;a<n.length;a++)Fe(n[a],e,t);else Fe(n,e,t)})),m.pop(),c=null};let Ne=null;function Ce(){ke.stop()}function Re(){ke.start()}const ke=new Kn;function De(e,t,n,a){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)c.pushLight(e),e.castShadow&&c.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||F.intersectsSprite(e)){a&&W.setFromMatrixPosition(e.matrixWorld).applyMatrix4(U);const t=ie.update(e),i=e.material;i.visible&&u.push(e,t,i,n,W.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==Z.render.frame&&(e.skeleton.update(),e.skeleton.frame=Z.render.frame),!e.frustumCulled||F.intersectsObject(e))){a&&W.setFromMatrixPosition(e.matrixWorld).applyMatrix4(U);const t=ie.update(e),i=e.material;if(Array.isArray(i)){const a=t.groups;for(let r=0,s=a.length;r<s;r++){const s=a[r],o=i[s.materialIndex];o&&o.visible&&u.push(e,t,o,n,W.z,s)}}else i.visible&&u.push(e,t,i,n,W.z,null)}const i=e.children;for(let e=0,r=i.length;e<r;e++)De(i[e],t,n,a)}function Le(e,t,n,a){const i=e.opaque,s=e.transmissive,o=e.transparent;c.setupLightsView(n),s.length>0&&function(e,t,n){const a=X.isWebGL2;null===z&&(z=new Ie(1,1,{generateMipmaps:!0,type:null!==ye.convert(L)?L:R,minFilter:I,samples:a&&!0===r?4:0})),f.getDrawingBufferSize(G),a?z.setSize(G.x,G.y):z.setSize(ue(G.x),ue(G.y));const i=f.getRenderTarget();f.setRenderTarget(z),f.clear();const s=f.toneMapping;f.toneMapping=0,Oe(e,t,n),f.toneMapping=s,J.updateMultisampleRenderTarget(z),J.updateRenderTargetMipmap(z),f.setRenderTarget(i)}(i,t,n),a&&K.viewport(_.copy(a)),i.length>0&&Oe(i,t,n),s.length>0&&Oe(s,t,n),o.length>0&&Oe(o,t,n),K.buffers.depth.setTest(!0),K.buffers.depth.setMask(!0),K.buffers.color.setMask(!0),K.setPolygonOffset(!1)}function Oe(e,t,n){const a=!0===t.isScene?t.overrideMaterial:null;for(let i=0,r=e.length;i<r;i++){const r=e[i],s=r.object,o=r.geometry,p=null===a?r.material:a,l=r.group;s.layers.test(n.layers)&&Be(s,t,n,o,p,l)}}function Be(e,t,n,a,i,r){e.onBeforeRender(f,t,n,a,i,r),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),i.onBeforeRender(f,t,n,a,e,r),!0===i.transparent&&2===i.side?(i.side=1,i.needsUpdate=!0,f.renderBufferDirect(n,t,a,i,e,r),i.side=0,i.needsUpdate=!0,f.renderBufferDirect(n,t,a,i,e,r),i.side=2):f.renderBufferDirect(n,t,a,i,e,r),e.onAfterRender(f,t,n,a,i,r)}function Fe(e,t,n){!0!==t.isScene&&(t=H);const a=Q.get(e),i=c.state.lights,r=c.state.shadowsArray,s=i.state.version,o=re.getParameters(e,i.state,r,t,n),p=re.getProgramCacheKey(o);let l=a.programs;a.environment=e.isMeshStandardMaterial?t.environment:null,a.fog=t.fog,a.envMap=(e.isMeshStandardMaterial?te:ee).get(e.envMap||a.environment),void 0===l&&(e.addEventListener("dispose",Me),l=new Map,a.programs=l);let d=l.get(p);if(void 0!==d){if(a.currentProgram===d&&a.lightsStateVersion===s)return $e(e,o),d}else o.uniforms=re.getUniforms(e),e.onBuild(n,o,f),e.onBeforeCompile(o,f),d=re.acquireProgram(o,p),l.set(p,d),a.uniforms=o.uniforms;const u=a.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(u.clippingPlanes=le.uniform),$e(e,o),a.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),a.lightsStateVersion=s,a.needsLights&&(u.ambientLightColor.value=i.state.ambient,u.lightProbe.value=i.state.probe,u.directionalLights.value=i.state.directional,u.directionalLightShadows.value=i.state.directionalShadow,u.spotLights.value=i.state.spot,u.spotLightShadows.value=i.state.spotShadow,u.rectAreaLights.value=i.state.rectArea,u.ltc_1.value=i.state.rectAreaLTC1,u.ltc_2.value=i.state.rectAreaLTC2,u.pointLights.value=i.state.point,u.pointLightShadows.value=i.state.pointShadow,u.hemisphereLights.value=i.state.hemi,u.directionalShadowMap.value=i.state.directionalShadowMap,u.directionalShadowMatrix.value=i.state.directionalShadowMatrix,u.spotShadowMap.value=i.state.spotShadowMap,u.spotShadowMatrix.value=i.state.spotShadowMatrix,u.pointShadowMap.value=i.state.pointShadowMap,u.pointShadowMatrix.value=i.state.pointShadowMatrix);const h=d.getUniforms(),m=Di.seqWithValue(h.seq,u);return a.currentProgram=d,a.uniformsList=m,d}function $e(e,t){const n=Q.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}ke.setAnimationLoop((function(e){Ne&&Ne(e)})),"undefined"!=typeof window&&ke.setContext(window),this.setAnimationLoop=function(e){Ne=e,Se.setAnimationLoop(e),null===e?ke.stop():ke.start()},Se.addEventListener("sessionstart",Ce),Se.addEventListener("sessionend",Re),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===g)return;!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===Se.enabled&&!0===Se.isPresenting&&(!0===Se.cameraAutoUpdate&&Se.updateCamera(t),t=Se.getCamera()),!0===e.isScene&&e.onBeforeRender(f,e,t,x),c=pe.get(e,m.length),c.init(),m.push(c),U.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),F.setFromProjectionMatrix(U),V=this.localClippingEnabled,$=le.init(this.clippingPlanes,V,t),u=oe.get(e,h.length),u.init(),h.push(u),De(e,t,0,f.sortObjects),u.finish(),!0===f.sortObjects&&u.sort(C,A),!0===$&&le.beginShadows();const n=c.state.shadowsArray;if(de.render(n,e,t),!0===$&&le.endShadows(),!0===this.info.autoReset&&this.info.reset(),he.render(u,e),c.setupLights(f.physicallyCorrectLights),t.isArrayCamera){const n=t.cameras;for(let t=0,a=n.length;t<a;t++){const a=n[t];Le(u,e,a,a.viewport)}}else Le(u,e,t);null!==x&&(J.updateMultisampleRenderTarget(x),J.updateRenderTargetMipmap(x)),!0===e.isScene&&e.onAfterRender(f,e,t),xe.resetDefaultState(),b=-1,w=null,m.pop(),c=m.length>0?m[m.length-1]:null,h.pop(),u=h.length>0?h[h.length-1]:null},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return x},this.setRenderTargetTextures=function(e,t,n){Q.get(e.texture).__webglTexture=t,Q.get(e.depthTexture).__webglTexture=n;const a=Q.get(e);a.__hasExternalTextures=!0,a.__hasExternalTextures&&(a.__autoAllocateDepthBuffer=void 0===n,a.__autoAllocateDepthBuffer||!0===j.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),a.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){const n=Q.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,n=0){x=e,v=t,y=n;let a=!0;if(e){const t=Q.get(e);void 0!==t.__useDefaultFramebuffer?(K.bindFramebuffer(36160,null),a=!1):void 0===t.__webglFramebuffer?J.setupRenderTarget(e):t.__hasExternalTextures&&J.rebindTextures(e,Q.get(e.texture).__webglTexture,Q.get(e.depthTexture).__webglTexture)}let i=null,r=!1,s=!1;if(e){const n=e.texture;(n.isData3DTexture||n.isDataArrayTexture)&&(s=!0);const a=Q.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(i=a[t],r=!0):i=X.isWebGL2&&e.samples>0&&!1===J.useMultisampledRTT(e)?Q.get(e).__webglMultisampledFramebuffer:a,_.copy(e.viewport),S.copy(e.scissor),T=e.scissorTest}else _.copy(k).multiplyScalar(N).floor(),S.copy(D).multiplyScalar(N).floor(),T=O;if(K.bindFramebuffer(36160,i)&&X.drawBuffers&&a&&K.drawBuffers(e,i),K.viewport(_),K.scissor(S),K.setScissorTest(T),r){const a=Q.get(e.texture);be.framebufferTexture2D(36160,36064,34069+t,a.__webglTexture,n)}else if(s){const a=Q.get(e.texture),i=t||0;be.framebufferTextureLayer(36160,36064,a.__webglTexture,n||0,i)}b=-1},this.readRenderTargetPixels=function(e,t,n,a,i,r,s){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=Q.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){K.bindFramebuffer(36160,o);try{const s=e.texture,o=s.format,p=s.type;if(o!==B&&ye.convert(o)!==be.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const l=p===L&&(j.has("EXT_color_buffer_half_float")||X.isWebGL2&&j.has("EXT_color_buffer_float"));if(!(p===R||ye.convert(p)===be.getParameter(35738)||p===P&&(X.isWebGL2||j.has("OES_texture_float")||j.has("WEBGL_color_buffer_float"))||l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===be.checkFramebufferStatus(36160)?t>=0&&t<=e.width-a&&n>=0&&n<=e.height-i&&be.readPixels(t,n,a,i,ye.convert(o),ye.convert(p),r):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const e=null!==x?Q.get(x).__webglFramebuffer:null;K.bindFramebuffer(36160,e)}}},this.copyFramebufferToTexture=function(e,t,n=0){if(!0!==t.isFramebufferTexture)return void console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");const a=Math.pow(2,-n),i=Math.floor(t.image.width*a),r=Math.floor(t.image.height*a);J.setTexture2D(t,0),be.copyTexSubImage2D(3553,n,0,0,e.x,e.y,i,r),K.unbindTexture()},this.copyTextureToTexture=function(e,t,n,a=0){const i=t.image.width,r=t.image.height,s=ye.convert(n.format),o=ye.convert(n.type);J.setTexture2D(n,0),be.pixelStorei(37440,n.flipY),be.pixelStorei(37441,n.premultiplyAlpha),be.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?be.texSubImage2D(3553,a,e.x,e.y,i,r,s,o,t.image.data):t.isCompressedTexture?be.compressedTexSubImage2D(3553,a,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):be.texSubImage2D(3553,a,e.x,e.y,s,o,t.image),0===a&&n.generateMipmaps&&be.generateMipmap(3553),K.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,a,i=0){if(f.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const r=e.max.x-e.min.x+1,s=e.max.y-e.min.y+1,o=e.max.z-e.min.z+1,p=ye.convert(a.format),l=ye.convert(a.type);let d;if(a.isData3DTexture)J.setTexture3D(a,0),d=32879;else{if(!a.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");J.setTexture2DArray(a,0),d=35866}be.pixelStorei(37440,a.flipY),be.pixelStorei(37441,a.premultiplyAlpha),be.pixelStorei(3317,a.unpackAlignment);const u=be.getParameter(3314),c=be.getParameter(32878),h=be.getParameter(3316),m=be.getParameter(3315),g=be.getParameter(32877),v=n.isCompressedTexture?n.mipmaps[0]:n.image;be.pixelStorei(3314,v.width),be.pixelStorei(32878,v.height),be.pixelStorei(3316,e.min.x),be.pixelStorei(3315,e.min.y),be.pixelStorei(32877,e.min.z),n.isDataTexture||n.isData3DTexture?be.texSubImage3D(d,i,t.x,t.y,t.z,r,s,o,p,l,v.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),be.compressedTexSubImage3D(d,i,t.x,t.y,t.z,r,s,o,p,v.data)):be.texSubImage3D(d,i,t.x,t.y,t.z,r,s,o,p,l,v),be.pixelStorei(3314,u),be.pixelStorei(32878,c),be.pixelStorei(3316,h),be.pixelStorei(3315,m),be.pixelStorei(32877,g),0===i&&a.generateMipmaps&&be.generateMipmap(d),K.unbindTexture()},this.initTexture=function(e){J.setTexture2D(e,0),K.unbindTexture()},this.resetState=function(){v=0,y=0,x=null,K.reset(),xe.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Mr.prototype.isWebGLRenderer=!0,class extends Mr{}.prototype.isWebGL1Renderer=!0;class Nr{constructor(e,t=25e-5){this.name="",this.color=new _e(e),this.density=t}clone(){return new Nr(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Nr.prototype.isFogExp2=!0;class Cr{constructor(e,t=1,n=1e3){this.name="",this.color=new _e(e),this.near=t,this.far=n}clone(){return new Cr(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Cr.prototype.isFog=!0;class Ar extends Ot{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}Ar.prototype.isScene=!0;class Ir{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=J,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=oe()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let a=0,i=this.stride;a<i;a++)this.array[e+a]=t.array[n+a];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=oe()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=oe()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Ir.prototype.isInterleavedBuffer=!0;const Rr=new Pe;class kr{constructor(e,t,n,a=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===a}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Rr.x=this.getX(t),Rr.y=this.getY(t),Rr.z=this.getZ(t),Rr.applyMatrix4(e),this.setXYZ(t,Rr.x,Rr.y,Rr.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Rr.x=this.getX(t),Rr.y=this.getY(t),Rr.z=this.getZ(t),Rr.applyNormalMatrix(e),this.setXYZ(t,Rr.x,Rr.y,Rr.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Rr.x=this.getX(t),Rr.y=this.getY(t),Rr.z=this.getZ(t),Rr.transformDirection(e),this.setXYZ(t,Rr.x,Rr.y,Rr.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,a){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=a,this}setXYZW(e,t,n,a,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=a,this.data.array[e+3]=i,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return new Jt(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new kr(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}kr.prototype.isInterleavedBufferAttribute=!0;class Dr extends Kt{constructor(e){super(),this.type="SpriteMaterial",this.color=new _e(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}let Pr;Dr.prototype.isSpriteMaterial=!0;const Lr=new Pe,Or=new Pe,Br=new Pe,Fr=new ce,$r=new ce,Vr=new ut,zr=new Pe,Ur=new Pe,Gr=new Pe,Wr=new ce,Hr=new ce,qr=new ce;function jr(e,t,n,a,i,r){Fr.subVectors(e,n).addScalar(.5).multiply(a),void 0!==i?($r.x=r*Fr.x-i*Fr.y,$r.y=i*Fr.x+r*Fr.y):$r.copy(Fr),e.copy(t),e.x+=$r.x,e.y+=$r.y,e.applyMatrix4(Vr)}(class extends Ot{constructor(e){if(super(),this.type="Sprite",void 0===Pr){Pr=new un;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new Ir(e,5);Pr.setIndex([0,1,2,0,2,3]),Pr.setAttribute("position",new kr(t,3,0,!1)),Pr.setAttribute("uv",new kr(t,2,3,!1))}this.geometry=Pr,this.material=void 0!==e?e:new Dr,this.center=new ce(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Or.setFromMatrixScale(this.matrixWorld),Vr.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Br.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Or.multiplyScalar(-Br.z);const n=this.material.rotation;let a,i;0!==n&&(i=Math.cos(n),a=Math.sin(n));const r=this.center;jr(zr.set(-.5,-.5,0),Br,r,Or,a,i),jr(Ur.set(.5,-.5,0),Br,r,Or,a,i),jr(Gr.set(.5,.5,0),Br,r,Or,a,i),Wr.set(0,0),Hr.set(1,0),qr.set(1,1);let s=e.ray.intersectTriangle(zr,Ur,Gr,!1,Lr);if(null===s&&(jr(Ur.set(-.5,.5,0),Br,r,Or,a,i),Hr.set(0,1),s=e.ray.intersectTriangle(zr,Gr,Ur,!1,Lr),null===s))return;const o=e.ray.origin.distanceTo(Lr);o<e.near||o>e.far||t.push({distance:o,point:Lr.clone(),uv:jt.getUV(Lr,zr,Ur,Gr,Wr,Hr,qr,new ce),face:null,object:this})}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}).prototype.isSprite=!0;const Xr=new Pe,Kr=new Ae,Yr=new Ae,Zr=new Pe,Qr=new ut;class Jr extends An{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ut,this.bindMatrixInverse=new ut}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ae,t=this.geometry.attributes.skinWeight;for(let n=0,a=t.count;n<a;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);const a=1/e.manhattanLength();a!==1/0?e.multiplyScalar(a):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,a=this.geometry;Kr.fromBufferAttribute(a.attributes.skinIndex,e),Yr.fromBufferAttribute(a.attributes.skinWeight,e),Xr.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){const a=Yr.getComponent(e);if(0!==a){const i=Kr.getComponent(e);Qr.multiplyMatrices(n.bones[i].matrixWorld,n.boneInverses[i]),t.addScaledVector(Zr.copy(Xr).applyMatrix4(Qr),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}Jr.prototype.isSkinnedMesh=!0;(class extends Ot{constructor(){super(),this.type="Bone"}}).prototype.isBone=!0;(class extends Ce{constructor(e=null,t=1,n=1,a,i,r,s,o,p=1003,l=1003,d,u){super(null,r,s,o,p,l,a,i,d,u),this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}).prototype.isDataTexture=!0;class es extends Jt{constructor(e,t,n,a=1){"number"==typeof n&&(a=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=a}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}es.prototype.isInstancedBufferAttribute=!0;const ts=new ut,ns=new ut,as=[],is=new An;(class extends An{constructor(e,t,n){super(e,t),this.instanceMatrix=new es(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){const n=this.matrixWorld,a=this.count;if(is.geometry=this.geometry,is.material=this.material,void 0!==is.material)for(let i=0;i<a;i++){this.getMatrixAt(i,ts),ns.multiplyMatrices(n,ts),is.matrixWorld=ns,is.raycast(e,as);for(let e=0,n=as.length;e<n;e++){const n=as[e];n.instanceId=i,n.object=this,t.push(n)}as.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new es(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}).prototype.isInstancedMesh=!0;class rs extends Kt{constructor(e){super(),this.type="LineBasicMaterial",this.color=new _e(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}rs.prototype.isLineBasicMaterial=!0;const ss=new Pe,os=new Pe,ps=new ut,ls=new dt,ds=new nt;class us extends Ot{constructor(e=new un,t=new rs){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[0];for(let e=1,a=t.count;e<a;e++)ss.fromBufferAttribute(t,e-1),os.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=ss.distanceTo(os);e.setAttribute("lineDistance",new nn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,a=this.matrixWorld,i=e.params.Line.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),ds.copy(n.boundingSphere),ds.applyMatrix4(a),ds.radius+=i,!1===e.ray.intersectsSphere(ds))return;ps.copy(a).invert(),ls.copy(e.ray).applyMatrix4(ps);const s=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,p=new Pe,l=new Pe,d=new Pe,u=new Pe,c=this.isLineSegments?2:1;if(n.isBufferGeometry){const a=n.index,i=n.attributes.position;if(null!==a)for(let n=Math.max(0,r.start),s=Math.min(a.count,r.start+r.count)-1;n<s;n+=c){const r=a.getX(n),s=a.getX(n+1);if(p.fromBufferAttribute(i,r),l.fromBufferAttribute(i,s),ls.distanceSqToSegment(p,l,u,d)>o)continue;u.applyMatrix4(this.matrixWorld);const c=e.ray.origin.distanceTo(u);c<e.near||c>e.far||t.push({distance:c,point:d.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,r.start),a=Math.min(i.count,r.start+r.count)-1;n<a;n+=c){if(p.fromBufferAttribute(i,n),l.fromBufferAttribute(i,n+1),ls.distanceSqToSegment(p,l,u,d)>o)continue;u.applyMatrix4(this.matrixWorld);const a=e.ray.origin.distanceTo(u);a<e.near||a>e.far||t.push({distance:a,point:d.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}us.prototype.isLine=!0;const cs=new Pe,hs=new Pe;class ms extends us{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[];for(let e=0,a=t.count;e<a;e+=2)cs.fromBufferAttribute(t,e),hs.fromBufferAttribute(t,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+cs.distanceTo(hs);e.setAttribute("lineDistance",new nn(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}ms.prototype.isLineSegments=!0;(class extends us{constructor(e,t){super(e,t),this.type="LineLoop"}}).prototype.isLineLoop=!0;class fs extends Kt{constructor(e){super(),this.type="PointsMaterial",this.color=new _e(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}fs.prototype.isPointsMaterial=!0;const gs=new ut,vs=new dt,ys=new nt,xs=new Pe;function bs(e,t,n,a,i,r,s){const o=vs.distanceSqToPoint(e);if(o<n){const n=new Pe;vs.closestPointToPoint(e,n),n.applyMatrix4(a);const p=i.ray.origin.distanceTo(n);if(p<i.near||p>i.far)return;r.push({distance:p,distanceToRay:Math.sqrt(o),point:n,index:t,face:null,object:s})}}(class extends Ot{constructor(e=new un,t=new fs){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,a=this.matrixWorld,i=e.params.Points.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),ys.copy(n.boundingSphere),ys.applyMatrix4(a),ys.radius+=i,!1===e.ray.intersectsSphere(ys))return;gs.copy(a).invert(),vs.copy(e.ray).applyMatrix4(gs);const s=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){const i=n.index,s=n.attributes.position;if(null!==i)for(let n=Math.max(0,r.start),p=Math.min(i.count,r.start+r.count);n<p;n++){const r=i.getX(n);xs.fromBufferAttribute(s,r),bs(xs,r,o,a,e,t,this)}else for(let n=Math.max(0,r.start),i=Math.min(s.count,r.start+r.count);n<i;n++)xs.fromBufferAttribute(s,n),bs(xs,n,o,a,e,t,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}).prototype.isPoints=!0,class extends Ce{constructor(e,t,n,a,i,r,s,o,p){super(e,t,n,a,i,r,s,o,p),this.minFilter=void 0!==r?r:A,this.magFilter=void 0!==i?i:A,this.generateMipmaps=!1;const l=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback((function t(){l.needsUpdate=!0,e.requestVideoFrameCallback(t)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}.prototype.isVideoTexture=!0,class extends Ce{constructor(e,t,n){super({width:e,height:t}),this.format=n,this.magFilter=C,this.minFilter=C,this.generateMipmaps=!1,this.needsUpdate=!0}}.prototype.isFramebufferTexture=!0;(class extends Ce{constructor(e,t,n,a,i,r,s,o,p,l,d,u){super(null,r,s,o,p,l,a,i,d,u),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}).prototype.isCompressedTexture=!0,class extends Ce{constructor(e,t,n,a,i,r,s,o,p){super(e,t,n,a,i,r,s,o,p),this.needsUpdate=!0}}.prototype.isCanvasTexture=!0;class ws extends un{constructor(e=1,t=1,n=1,a=8,i=1,r=!1,s=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:a,heightSegments:i,openEnded:r,thetaStart:s,thetaLength:o};const p=this;a=Math.floor(a),i=Math.floor(i);const l=[],d=[],u=[],c=[];let h=0;const m=[],f=n/2;let g=0;function v(n){const i=h,r=new ce,m=new Pe;let v=0;const y=!0===n?e:t,x=!0===n?1:-1;for(let e=1;e<=a;e++)d.push(0,f*x,0),u.push(0,x,0),c.push(.5,.5),h++;const b=h;for(let e=0;e<=a;e++){const t=e/a*o+s,n=Math.cos(t),i=Math.sin(t);m.x=y*i,m.y=f*x,m.z=y*n,d.push(m.x,m.y,m.z),u.push(0,x,0),r.x=.5*n+.5,r.y=.5*i*x+.5,c.push(r.x,r.y),h++}for(let e=0;e<a;e++){const t=i+e,a=b+e;!0===n?l.push(a,a+1,t):l.push(a+1,a,t),v+=3}p.addGroup(g,v,!0===n?1:2),g+=v}!function(){const r=new Pe,v=new Pe;let y=0;const x=(t-e)/n;for(let p=0;p<=i;p++){const l=[],g=p/i,y=g*(t-e)+e;for(let e=0;e<=a;e++){const t=e/a,i=t*o+s,p=Math.sin(i),m=Math.cos(i);v.x=y*p,v.y=-g*n+f,v.z=y*m,d.push(v.x,v.y,v.z),r.set(p,x,m).normalize(),u.push(r.x,r.y,r.z),c.push(t,1-g),l.push(h++)}m.push(l)}for(let e=0;e<a;e++)for(let t=0;t<i;t++){const n=m[t][e],a=m[t+1][e],i=m[t+1][e+1],r=m[t][e+1];l.push(n,a,r),l.push(a,i,r),y+=6}p.addGroup(g,y,0),g+=y}(),!1===r&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(l),this.setAttribute("position",new nn(d,3)),this.setAttribute("normal",new nn(u,3)),this.setAttribute("uv",new nn(c,2))}static fromJSON(e){return new ws(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class _s extends un{constructor(e=[],t=[],n=1,a=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:a};const i=[],r=[];function s(e,t,n,a){const i=a+1,r=[];for(let a=0;a<=i;a++){r[a]=[];const s=e.clone().lerp(n,a/i),o=t.clone().lerp(n,a/i),p=i-a;for(let e=0;e<=p;e++)r[a][e]=0===e&&a===i?s:s.clone().lerp(o,e/p)}for(let e=0;e<i;e++)for(let t=0;t<2*(i-e)-1;t++){const n=Math.floor(t/2);t%2==0?(o(r[e][n+1]),o(r[e+1][n]),o(r[e][n])):(o(r[e][n+1]),o(r[e+1][n+1]),o(r[e+1][n]))}}function o(e){i.push(e.x,e.y,e.z)}function p(t,n){const a=3*t;n.x=e[a+0],n.y=e[a+1],n.z=e[a+2]}function l(e,t,n,a){a<0&&1===e.x&&(r[t]=e.x-1),0===n.x&&0===n.z&&(r[t]=a/2/Math.PI+.5)}function d(e){return Math.atan2(e.z,-e.x)}!function(e){const n=new Pe,a=new Pe,i=new Pe;for(let r=0;r<t.length;r+=3)p(t[r+0],n),p(t[r+1],a),p(t[r+2],i),s(n,a,i,e)}(a),function(e){const t=new Pe;for(let n=0;n<i.length;n+=3)t.x=i[n+0],t.y=i[n+1],t.z=i[n+2],t.normalize().multiplyScalar(e),i[n+0]=t.x,i[n+1]=t.y,i[n+2]=t.z}(n),function(){const e=new Pe;for(let n=0;n<i.length;n+=3){e.x=i[n+0],e.y=i[n+1],e.z=i[n+2];const a=d(e)/2/Math.PI+.5,s=(t=e,Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5);r.push(a,1-s)}var t;(function(){const e=new Pe,t=new Pe,n=new Pe,a=new Pe,s=new ce,o=new ce,p=new ce;for(let u=0,c=0;u<i.length;u+=9,c+=6){e.set(i[u+0],i[u+1],i[u+2]),t.set(i[u+3],i[u+4],i[u+5]),n.set(i[u+6],i[u+7],i[u+8]),s.set(r[c+0],r[c+1]),o.set(r[c+2],r[c+3]),p.set(r[c+4],r[c+5]),a.copy(e).add(t).add(n).divideScalar(3);const h=d(a);l(s,c+0,e,h),l(o,c+2,t,h),l(p,c+4,n,h)}})(),function(){for(let e=0;e<r.length;e+=6){const t=r[e+0],n=r[e+2],a=r[e+4],i=Math.max(t,n,a),s=Math.min(t,n,a);i>.9&&s<.1&&(t<.2&&(r[e+0]+=1),n<.2&&(r[e+2]+=1),a<.2&&(r[e+4]+=1))}}()}(),this.setAttribute("position",new nn(i,3)),this.setAttribute("normal",new nn(i.slice(),3)),this.setAttribute("uv",new nn(r,2)),0===a?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new _s(e.vertices,e.indices,e.radius,e.details)}}new Pe,new Pe,new Pe,new jt;class Ss{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,a=this.getPoint(0),i=0;t.push(0);for(let r=1;r<=e;r++)n=this.getPoint(r/e),i+=n.distanceTo(a),t.push(i),a=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let a=0;const i=n.length;let r;r=t||e*n[i-1];let s,o=0,p=i-1;for(;o<=p;)if(a=Math.floor(o+(p-o)/2),s=n[a]-r,s<0)o=a+1;else{if(!(s>0)){p=a;break}p=a-1}if(a=p,n[a]===r)return a/(i-1);const l=n[a];return(a+(r-l)/(n[a+1]-l))/(i-1)}getTangent(e,t){const n=1e-4;let a=e-n,i=e+n;a<0&&(a=0),i>1&&(i=1);const r=this.getPoint(a),s=this.getPoint(i),o=t||(r.isVector2?new ce:new Pe);return o.copy(s).sub(r).normalize(),o}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new Pe,a=[],i=[],r=[],s=new Pe,o=new ut;for(let t=0;t<=e;t++){const n=t/e;a[t]=this.getTangentAt(n,new Pe)}i[0]=new Pe,r[0]=new Pe;let p=Number.MAX_VALUE;const l=Math.abs(a[0].x),d=Math.abs(a[0].y),u=Math.abs(a[0].z);l<=p&&(p=l,n.set(1,0,0)),d<=p&&(p=d,n.set(0,1,0)),u<=p&&n.set(0,0,1),s.crossVectors(a[0],n).normalize(),i[0].crossVectors(a[0],s),r[0].crossVectors(a[0],i[0]);for(let t=1;t<=e;t++){if(i[t]=i[t-1].clone(),r[t]=r[t-1].clone(),s.crossVectors(a[t-1],a[t]),s.length()>Number.EPSILON){s.normalize();const e=Math.acos(pe(a[t-1].dot(a[t]),-1,1));i[t].applyMatrix4(o.makeRotationAxis(s,e))}r[t].crossVectors(a[t],i[t])}if(!0===t){let t=Math.acos(pe(i[0].dot(i[e]),-1,1));t/=e,a[0].dot(s.crossVectors(i[0],i[e]))>0&&(t=-t);for(let n=1;n<=e;n++)i[n].applyMatrix4(o.makeRotationAxis(a[n],t*n)),r[n].crossVectors(a[n],i[n])}return{tangents:a,normals:i,binormals:r}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Ts extends Ss{constructor(e=0,t=0,n=1,a=1,i=0,r=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=a,this.aStartAngle=i,this.aEndAngle=r,this.aClockwise=s,this.aRotation=o}getPoint(e,t){const n=t||new ce,a=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;const r=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=a;for(;i>a;)i-=a;i<Number.EPSILON&&(i=r?0:a),!0!==this.aClockwise||r||(i===a?i=-a:i-=a);const s=this.aStartAngle+e*i;let o=this.aX+this.xRadius*Math.cos(s),p=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),n=o-this.aX,a=p-this.aY;o=n*e-a*t+this.aX,p=n*t+a*e+this.aY}return n.set(o,p)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}Ts.prototype.isEllipseCurve=!0;class Es extends Ts{constructor(e,t,n,a,i,r){super(e,t,n,n,a,i,r),this.type="ArcCurve"}}function Ms(){let e=0,t=0,n=0,a=0;function i(i,r,s,o){e=i,t=s,n=-3*i+3*r-2*s-o,a=2*i-2*r+s+o}return{initCatmullRom:function(e,t,n,a,r){i(t,n,r*(n-e),r*(a-t))},initNonuniformCatmullRom:function(e,t,n,a,r,s,o){let p=(t-e)/r-(n-e)/(r+s)+(n-t)/s,l=(n-t)/s-(a-t)/(s+o)+(a-n)/o;p*=s,l*=s,i(t,n,p,l)},calc:function(i){const r=i*i;return e+t*i+n*r+a*(r*i)}}}Es.prototype.isArcCurve=!0;const Ns=new Pe,Cs=new Ms,As=new Ms,Is=new Ms;class Rs extends Ss{constructor(e=[],t=!1,n="centripetal",a=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=a}getPoint(e,t=new Pe){const n=t,a=this.points,i=a.length,r=(i-(this.closed?0:1))*e;let s,o,p=Math.floor(r),l=r-p;this.closed?p+=p>0?0:(Math.floor(Math.abs(p)/i)+1)*i:0===l&&p===i-1&&(p=i-2,l=1),this.closed||p>0?s=a[(p-1)%i]:(Ns.subVectors(a[0],a[1]).add(a[0]),s=Ns);const d=a[p%i],u=a[(p+1)%i];if(this.closed||p+2<i?o=a[(p+2)%i]:(Ns.subVectors(a[i-1],a[i-2]).add(a[i-1]),o=Ns),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=Math.pow(s.distanceToSquared(d),e),n=Math.pow(d.distanceToSquared(u),e),a=Math.pow(u.distanceToSquared(o),e);n<1e-4&&(n=1),t<1e-4&&(t=n),a<1e-4&&(a=n),Cs.initNonuniformCatmullRom(s.x,d.x,u.x,o.x,t,n,a),As.initNonuniformCatmullRom(s.y,d.y,u.y,o.y,t,n,a),Is.initNonuniformCatmullRom(s.z,d.z,u.z,o.z,t,n,a)}else"catmullrom"===this.curveType&&(Cs.initCatmullRom(s.x,d.x,u.x,o.x,this.tension),As.initCatmullRom(s.y,d.y,u.y,o.y,this.tension),Is.initCatmullRom(s.z,d.z,u.z,o.z,this.tension));return n.set(Cs.calc(l),As.calc(l),Is.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new Pe).fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function ks(e,t,n,a,i){const r=.5*(a-t),s=.5*(i-n),o=e*e;return(2*n-2*a+r+s)*(e*o)+(-3*n+3*a-2*r-s)*o+r*e+n}function Ds(e,t,n,a){return function(e,t){const n=1-e;return n*n*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,n)+function(e,t){return e*e*t}(e,a)}function Ps(e,t,n,a,i){return function(e,t){const n=1-e;return n*n*n*t}(e,t)+function(e,t){const n=1-e;return 3*n*n*e*t}(e,n)+function(e,t){return 3*(1-e)*e*e*t}(e,a)+function(e,t){return e*e*e*t}(e,i)}Rs.prototype.isCatmullRomCurve3=!0;class Ls extends Ss{constructor(e=new ce,t=new ce,n=new ce,a=new ce){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=a}getPoint(e,t=new ce){const n=t,a=this.v0,i=this.v1,r=this.v2,s=this.v3;return n.set(Ps(e,a.x,i.x,r.x,s.x),Ps(e,a.y,i.y,r.y,s.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Ls.prototype.isCubicBezierCurve=!0;class Os extends Ss{constructor(e=new Pe,t=new Pe,n=new Pe,a=new Pe){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=a}getPoint(e,t=new Pe){const n=t,a=this.v0,i=this.v1,r=this.v2,s=this.v3;return n.set(Ps(e,a.x,i.x,r.x,s.x),Ps(e,a.y,i.y,r.y,s.y),Ps(e,a.z,i.z,r.z,s.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Os.prototype.isCubicBezierCurve3=!0;class Bs extends Ss{constructor(e=new ce,t=new ce){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ce){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new ce;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Bs.prototype.isLineCurve=!0;class Fs extends Ss{constructor(e=new ce,t=new ce,n=new ce){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ce){const n=t,a=this.v0,i=this.v1,r=this.v2;return n.set(Ds(e,a.x,i.x,r.x),Ds(e,a.y,i.y,r.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Fs.prototype.isQuadraticBezierCurve=!0;class $s extends Ss{constructor(e=new Pe,t=new Pe,n=new Pe){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new Pe){const n=t,a=this.v0,i=this.v1,r=this.v2;return n.set(Ds(e,a.x,i.x,r.x),Ds(e,a.y,i.y,r.y),Ds(e,a.z,i.z,r.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}$s.prototype.isQuadraticBezierCurve3=!0;class Vs extends Ss{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new ce){const n=t,a=this.points,i=(a.length-1)*e,r=Math.floor(i),s=i-r,o=a[0===r?r:r-1],p=a[r],l=a[r>a.length-2?a.length-1:r+1],d=a[r>a.length-3?a.length-1:r+2];return n.set(ks(s,o.x,p.x,l.x,d.x),ks(s,o.y,p.y,l.y,d.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new ce).fromArray(n))}return this}}Vs.prototype.isSplineCurve=!0;var zs=Object.freeze({__proto__:null,ArcCurve:Es,CatmullRomCurve3:Rs,CubicBezierCurve:Ls,CubicBezierCurve3:Os,EllipseCurve:Ts,LineCurve:Bs,LineCurve3:class extends Ss{constructor(e=new Pe,t=new Pe){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new Pe){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},QuadraticBezierCurve:Fs,QuadraticBezierCurve3:$s,SplineCurve:Vs});class Us extends Ss{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Bs(t,e))}getPoint(e,t){const n=e*this.getLength(),a=this.getCurveLengths();let i=0;for(;i<a.length;){if(a[i]>=n){const e=a[i]-n,r=this.curves[i],s=r.getLength(),o=0===s?0:1-e/s;return r.getPointAt(o,t)}i++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,a=this.curves.length;n<a;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let a=0,i=this.curves;a<i.length;a++){const r=i[a],s=r.isEllipseCurve?2*e:r.isLineCurve||r.isLineCurve3?1:r.isSplineCurve?e*r.points.length:e,o=r.getPoints(s);for(let e=0;e<o.length;e++){const a=o[e];n&&n.equals(a)||(t.push(a),n=a)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push((new zs[n.type]).fromJSON(n))}return this}}class Gs extends Us{constructor(e){super(),this.type="Path",this.currentPoint=new ce,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Bs(this.currentPoint.clone(),new ce(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,a){const i=new Fs(this.currentPoint.clone(),new ce(e,t),new ce(n,a));return this.curves.push(i),this.currentPoint.set(n,a),this}bezierCurveTo(e,t,n,a,i,r){const s=new Ls(this.currentPoint.clone(),new ce(e,t),new ce(n,a),new ce(i,r));return this.curves.push(s),this.currentPoint.set(i,r),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Vs(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,a,i,r){const s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,n,a,i,r),this}absarc(e,t,n,a,i,r){return this.absellipse(e,t,n,n,a,i,r),this}ellipse(e,t,n,a,i,r,s,o){const p=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(e+p,t+l,n,a,i,r,s,o),this}absellipse(e,t,n,a,i,r,s,o){const p=new Ts(e,t,n,a,i,r,s,o);if(this.curves.length>0){const e=p.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(p);const l=p.getPoint(1);return this.currentPoint.copy(l),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Ws extends Gs{constructor(e){super(e),this.uuid=oe(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,a=this.holes.length;n<a;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push((new Gs).fromJSON(n))}return this}}function Hs(e,t,n,a,i){let r,s;if(i===function(e,t,n,a){let i=0;for(let r=t,s=n-a;r<n;r+=a)i+=(e[s]-e[r])*(e[r+1]+e[s+1]),s=r;return i}(e,t,n,a)>0)for(r=t;r<n;r+=a)s=ho(r,e[r],e[r+1],s);else for(r=n-a;r>=t;r-=a)s=ho(r,e[r],e[r+1],s);return s&&so(s,s.next)&&(mo(s),s=s.next),s}function qs(e,t){if(!e)return e;t||(t=e);let n,a=e;do{if(n=!1,a.steiner||!so(a,a.next)&&0!==ro(a.prev,a,a.next))a=a.next;else{if(mo(a),a=t=a.prev,a===a.next)break;n=!0}}while(n||a!==t);return t}function js(e,t,n,a,i,r,s){if(!e)return;!s&&r&&function(e,t,n,a){let i=e;do{null===i.z&&(i.z=to(i.x,i.y,t,n,a)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,function(e){let t,n,a,i,r,s,o,p,l=1;do{for(n=e,e=null,r=null,s=0;n;){for(s++,a=n,o=0,t=0;t<l&&(o++,a=a.nextZ,a);t++);for(p=l;o>0||p>0&&a;)0!==o&&(0===p||!a||n.z<=a.z)?(i=n,n=n.nextZ,o--):(i=a,a=a.nextZ,p--),r?r.nextZ=i:e=i,i.prevZ=r,r=i;n=a}r.nextZ=null,l*=2}while(s>1)}(i)}(e,a,i,r);let o,p,l=e;for(;e.prev!==e.next;)if(o=e.prev,p=e.next,r?Ks(e,a,i,r):Xs(e))t.push(o.i/n),t.push(e.i/n),t.push(p.i/n),mo(e),e=p.next,l=p.next;else if((e=p)===l){s?1===s?js(e=Ys(qs(e),t,n),t,n,a,i,r,2):2===s&&Zs(e,t,n,a,i,r):js(qs(e),t,n,a,i,r,1);break}}function Xs(e){const t=e.prev,n=e,a=e.next;if(ro(t,n,a)>=0)return!1;let i=e.next.next;for(;i!==e.prev;){if(ao(t.x,t.y,n.x,n.y,a.x,a.y,i.x,i.y)&&ro(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function Ks(e,t,n,a){const i=e.prev,r=e,s=e.next;if(ro(i,r,s)>=0)return!1;const o=i.x<r.x?i.x<s.x?i.x:s.x:r.x<s.x?r.x:s.x,p=i.y<r.y?i.y<s.y?i.y:s.y:r.y<s.y?r.y:s.y,l=i.x>r.x?i.x>s.x?i.x:s.x:r.x>s.x?r.x:s.x,d=i.y>r.y?i.y>s.y?i.y:s.y:r.y>s.y?r.y:s.y,u=to(o,p,t,n,a),c=to(l,d,t,n,a);let h=e.prevZ,m=e.nextZ;for(;h&&h.z>=u&&m&&m.z<=c;){if(h!==e.prev&&h!==e.next&&ao(i.x,i.y,r.x,r.y,s.x,s.y,h.x,h.y)&&ro(h.prev,h,h.next)>=0)return!1;if(h=h.prevZ,m!==e.prev&&m!==e.next&&ao(i.x,i.y,r.x,r.y,s.x,s.y,m.x,m.y)&&ro(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;h&&h.z>=u;){if(h!==e.prev&&h!==e.next&&ao(i.x,i.y,r.x,r.y,s.x,s.y,h.x,h.y)&&ro(h.prev,h,h.next)>=0)return!1;h=h.prevZ}for(;m&&m.z<=c;){if(m!==e.prev&&m!==e.next&&ao(i.x,i.y,r.x,r.y,s.x,s.y,m.x,m.y)&&ro(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function Ys(e,t,n){let a=e;do{const i=a.prev,r=a.next.next;!so(i,r)&&oo(i,a,a.next,r)&&uo(i,r)&&uo(r,i)&&(t.push(i.i/n),t.push(a.i/n),t.push(r.i/n),mo(a),mo(a.next),a=e=r),a=a.next}while(a!==e);return qs(a)}function Zs(e,t,n,a,i,r){let s=e;do{let e=s.next.next;for(;e!==s.prev;){if(s.i!==e.i&&io(s,e)){let o=co(s,e);return s=qs(s,s.next),o=qs(o,o.next),js(s,t,n,a,i,r),void js(o,t,n,a,i,r)}e=e.next}s=s.next}while(s!==e)}function Qs(e,t){return e.x-t.x}function Js(e,t){if(t=function(e,t){let n=t;const a=e.x,i=e.y;let r,s=-1/0;do{if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){const e=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(e<=a&&e>s){if(s=e,e===a){if(i===n.y)return n;if(i===n.next.y)return n.next}r=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!r)return null;if(a===s)return r;const o=r,p=r.x,l=r.y;let d,u=1/0;n=r;do{a>=n.x&&n.x>=p&&a!==n.x&&ao(i<l?a:s,i,p,l,i<l?s:a,i,n.x,n.y)&&(d=Math.abs(i-n.y)/(a-n.x),uo(n,e)&&(d<u||d===u&&(n.x>r.x||n.x===r.x&&eo(r,n)))&&(r=n,u=d)),n=n.next}while(n!==o);return r}(e,t),t){const n=co(t,e);qs(t,t.next),qs(n,n.next)}}function eo(e,t){return ro(e.prev,e,t.prev)<0&&ro(t.next,e,e.next)<0}function to(e,t,n,a,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-a)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function no(e){let t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function ao(e,t,n,a,i,r,s,o){return(i-s)*(t-o)-(e-s)*(r-o)>=0&&(e-s)*(a-o)-(n-s)*(t-o)>=0&&(n-s)*(r-o)-(i-s)*(a-o)>=0}function io(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&oo(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(uo(e,t)&&uo(t,e)&&function(e,t){let n=e,a=!1;const i=(e.x+t.x)/2,r=(e.y+t.y)/2;do{n.y>r!=n.next.y>r&&n.next.y!==n.y&&i<(n.next.x-n.x)*(r-n.y)/(n.next.y-n.y)+n.x&&(a=!a),n=n.next}while(n!==e);return a}(e,t)&&(ro(e.prev,e,t.prev)||ro(e,t.prev,t))||so(e,t)&&ro(e.prev,e,e.next)>0&&ro(t.prev,t,t.next)>0)}function ro(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function so(e,t){return e.x===t.x&&e.y===t.y}function oo(e,t,n,a){const i=lo(ro(e,t,n)),r=lo(ro(e,t,a)),s=lo(ro(n,a,e)),o=lo(ro(n,a,t));return i!==r&&s!==o||!(0!==i||!po(e,n,t))||!(0!==r||!po(e,a,t))||!(0!==s||!po(n,e,a))||!(0!==o||!po(n,t,a))}function po(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function lo(e){return e>0?1:e<0?-1:0}function uo(e,t){return ro(e.prev,e,e.next)<0?ro(e,t,e.next)>=0&&ro(e,e.prev,t)>=0:ro(e,t,e.prev)<0||ro(e,e.next,t)<0}function co(e,t){const n=new fo(e.i,e.x,e.y),a=new fo(t.i,t.x,t.y),i=e.next,r=t.prev;return e.next=t,t.prev=e,n.next=i,i.prev=n,a.next=n,n.prev=a,r.next=a,a.prev=r,a}function ho(e,t,n,a){const i=new fo(e,t,n);return a?(i.next=a.next,i.prev=a,a.next.prev=i,a.next=i):(i.prev=i,i.next=i),i}function mo(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function fo(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class go{static area(e){const t=e.length;let n=0;for(let a=t-1,i=0;i<t;a=i++)n+=e[a].x*e[i].y-e[i].x*e[a].y;return.5*n}static isClockWise(e){return go.area(e)<0}static triangulateShape(e,t){const n=[],a=[],i=[];vo(e),yo(n,e);let r=e.length;t.forEach(vo);for(let e=0;e<t.length;e++)a.push(r),r+=t[e].length,yo(n,t[e]);const s=function(e,t,n=2){const a=t&&t.length,i=a?t[0]*n:e.length;let r=Hs(e,0,i,n,!0);const s=[];if(!r||r.next===r.prev)return s;let o,p,l,d,u,c,h;if(a&&(r=function(e,t,n,a){const i=[];let r,s,o,p,l;for(r=0,s=t.length;r<s;r++)o=t[r]*a,p=r<s-1?t[r+1]*a:e.length,l=Hs(e,o,p,a,!1),l===l.next&&(l.steiner=!0),i.push(no(l));for(i.sort(Qs),r=0;r<i.length;r++)Js(i[r],n),n=qs(n,n.next);return n}(e,t,r,n)),e.length>80*n){o=l=e[0],p=d=e[1];for(let t=n;t<i;t+=n)u=e[t],c=e[t+1],u<o&&(o=u),c<p&&(p=c),u>l&&(l=u),c>d&&(d=c);h=Math.max(l-o,d-p),h=0!==h?1/h:0}return js(r,s,n,o,p,h),s}(n,a);for(let e=0;e<s.length;e+=3)i.push(s.slice(e,e+3));return i}}function vo(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function yo(e,t){for(let n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}class xo extends un{constructor(e=new Ws([new ce(.5,.5),new ce(-.5,.5),new ce(-.5,-.5),new ce(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,a=[],i=[];for(let t=0,n=e.length;t<n;t++)r(e[t]);function r(e){const r=[],s=void 0!==t.curveSegments?t.curveSegments:12,o=void 0!==t.steps?t.steps:1;let p=void 0!==t.depth?t.depth:1,l=void 0===t.bevelEnabled||t.bevelEnabled,d=void 0!==t.bevelThickness?t.bevelThickness:.2,u=void 0!==t.bevelSize?t.bevelSize:d-.1,c=void 0!==t.bevelOffset?t.bevelOffset:0,h=void 0!==t.bevelSegments?t.bevelSegments:3;const m=t.extrudePath,f=void 0!==t.UVGenerator?t.UVGenerator:bo;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),p=t.amount);let g,v,y,x,b,w=!1;m&&(g=m.getSpacedPoints(o),w=!0,l=!1,v=m.computeFrenetFrames(o,!1),y=new Pe,x=new Pe,b=new Pe),l||(h=0,d=0,u=0,c=0);const _=e.extractPoints(s);let S=_.shape;const T=_.holes;if(!go.isClockWise(S)){S=S.reverse();for(let e=0,t=T.length;e<t;e++){const t=T[e];go.isClockWise(t)&&(T[e]=t.reverse())}}const E=go.triangulateShape(S,T),M=S;for(let e=0,t=T.length;e<t;e++){const t=T[e];S=S.concat(t)}function N(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}const C=S.length,A=E.length;function I(e,t,n){let a,i,r;const s=e.x-t.x,o=e.y-t.y,p=n.x-e.x,l=n.y-e.y,d=s*s+o*o,u=s*l-o*p;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(d),c=Math.sqrt(p*p+l*l),h=t.x-o/u,m=t.y+s/u,f=((n.x-l/c-h)*l-(n.y+p/c-m)*p)/(s*l-o*p);a=h+s*f-e.x,i=m+o*f-e.y;const g=a*a+i*i;if(g<=2)return new ce(a,i);r=Math.sqrt(g/2)}else{let e=!1;s>Number.EPSILON?p>Number.EPSILON&&(e=!0):s<-Number.EPSILON?p<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(l)&&(e=!0),e?(a=-o,i=s,r=Math.sqrt(d)):(a=s,i=o,r=Math.sqrt(d/2))}return new ce(a/r,i/r)}const R=[];for(let e=0,t=M.length,n=t-1,a=e+1;e<t;e++,n++,a++)n===t&&(n=0),a===t&&(a=0),R[e]=I(M[e],M[n],M[a]);const k=[];let D,P=R.concat();for(let e=0,t=T.length;e<t;e++){const t=T[e];D=[];for(let e=0,n=t.length,a=n-1,i=e+1;e<n;e++,a++,i++)a===n&&(a=0),i===n&&(i=0),D[e]=I(t[e],t[a],t[i]);k.push(D),P=P.concat(D)}for(let e=0;e<h;e++){const t=e/h,n=d*Math.cos(t*Math.PI/2),a=u*Math.sin(t*Math.PI/2)+c;for(let e=0,t=M.length;e<t;e++){const t=N(M[e],R[e],a);B(t.x,t.y,-n)}for(let e=0,t=T.length;e<t;e++){const t=T[e];D=k[e];for(let e=0,i=t.length;e<i;e++){const i=N(t[e],D[e],a);B(i.x,i.y,-n)}}}const L=u+c;for(let e=0;e<C;e++){const t=l?N(S[e],P[e],L):S[e];w?(x.copy(v.normals[0]).multiplyScalar(t.x),y.copy(v.binormals[0]).multiplyScalar(t.y),b.copy(g[0]).add(x).add(y),B(b.x,b.y,b.z)):B(t.x,t.y,0)}for(let e=1;e<=o;e++)for(let t=0;t<C;t++){const n=l?N(S[t],P[t],L):S[t];w?(x.copy(v.normals[e]).multiplyScalar(n.x),y.copy(v.binormals[e]).multiplyScalar(n.y),b.copy(g[e]).add(x).add(y),B(b.x,b.y,b.z)):B(n.x,n.y,p/o*e)}for(let e=h-1;e>=0;e--){const t=e/h,n=d*Math.cos(t*Math.PI/2),a=u*Math.sin(t*Math.PI/2)+c;for(let e=0,t=M.length;e<t;e++){const t=N(M[e],R[e],a);B(t.x,t.y,p+n)}for(let e=0,t=T.length;e<t;e++){const t=T[e];D=k[e];for(let e=0,i=t.length;e<i;e++){const i=N(t[e],D[e],a);w?B(i.x,i.y+g[o-1].y,g[o-1].x+n):B(i.x,i.y,p+n)}}}function O(e,t){let n=e.length;for(;--n>=0;){const a=n;let i=n-1;i<0&&(i=e.length-1);for(let e=0,n=o+2*h;e<n;e++){const n=C*e,r=C*(e+1);$(t+a+n,t+i+n,t+i+r,t+a+r)}}}function B(e,t,n){r.push(e),r.push(t),r.push(n)}function F(e,t,i){V(e),V(t),V(i);const r=a.length/3,s=f.generateTopUV(n,a,r-3,r-2,r-1);z(s[0]),z(s[1]),z(s[2])}function $(e,t,i,r){V(e),V(t),V(r),V(t),V(i),V(r);const s=a.length/3,o=f.generateSideWallUV(n,a,s-6,s-3,s-2,s-1);z(o[0]),z(o[1]),z(o[3]),z(o[1]),z(o[2]),z(o[3])}function V(e){a.push(r[3*e+0]),a.push(r[3*e+1]),a.push(r[3*e+2])}function z(e){i.push(e.x),i.push(e.y)}!function(){const e=a.length/3;if(l){let e=0,t=C*e;for(let e=0;e<A;e++){const n=E[e];F(n[2]+t,n[1]+t,n[0]+t)}e=o+2*h,t=C*e;for(let e=0;e<A;e++){const n=E[e];F(n[0]+t,n[1]+t,n[2]+t)}}else{for(let e=0;e<A;e++){const t=E[e];F(t[2],t[1],t[0])}for(let e=0;e<A;e++){const t=E[e];F(t[0]+C*o,t[1]+C*o,t[2]+C*o)}}n.addGroup(e,a.length/3-e,0)}(),function(){const e=a.length/3;let t=0;O(M,t),t+=M.length;for(let e=0,n=T.length;e<n;e++){const n=T[e];O(n,t),t+=n.length}n.addGroup(e,a.length/3-e,1)}()}this.setAttribute("position",new nn(a,3)),this.setAttribute("uv",new nn(i,2)),this.computeVertexNormals()}toJSON(){const e=super.toJSON();return function(e,t,n){if(n.shapes=[],Array.isArray(e))for(let t=0,a=e.length;t<a;t++){const a=e[t];n.shapes.push(a.uuid)}else n.shapes.push(e.uuid);return void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){const n=[];for(let a=0,i=e.shapes.length;a<i;a++){const i=t[e.shapes[a]];n.push(i)}const a=e.options.extrudePath;return void 0!==a&&(e.options.extrudePath=(new zs[a.type]).fromJSON(a)),new xo(n,e.options)}}const bo={generateTopUV:function(e,t,n,a,i){const r=t[3*n],s=t[3*n+1],o=t[3*a],p=t[3*a+1],l=t[3*i],d=t[3*i+1];return[new ce(r,s),new ce(o,p),new ce(l,d)]},generateSideWallUV:function(e,t,n,a,i,r){const s=t[3*n],o=t[3*n+1],p=t[3*n+2],l=t[3*a],d=t[3*a+1],u=t[3*a+2],c=t[3*i],h=t[3*i+1],m=t[3*i+2],f=t[3*r],g=t[3*r+1],v=t[3*r+2];return Math.abs(o-d)<Math.abs(s-l)?[new ce(s,1-p),new ce(l,1-u),new ce(c,1-m),new ce(f,1-v)]:[new ce(o,1-p),new ce(d,1-u),new ce(h,1-m),new ce(g,1-v)]}};class wo extends _s{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new wo(e.radius,e.detail)}}class _o extends un{constructor(e=new Ws([new ce(0,.5),new ce(-.5,-.5),new ce(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],a=[],i=[],r=[];let s=0,o=0;if(!1===Array.isArray(e))p(e);else for(let t=0;t<e.length;t++)p(e[t]),this.addGroup(s,o,t),s+=o,o=0;function p(e){const s=a.length/3,p=e.extractPoints(t);let l=p.shape;const d=p.holes;!1===go.isClockWise(l)&&(l=l.reverse());for(let e=0,t=d.length;e<t;e++){const t=d[e];!0===go.isClockWise(t)&&(d[e]=t.reverse())}const u=go.triangulateShape(l,d);for(let e=0,t=d.length;e<t;e++){const t=d[e];l=l.concat(t)}for(let e=0,t=l.length;e<t;e++){const t=l[e];a.push(t.x,t.y,0),i.push(0,0,1),r.push(t.x,t.y)}for(let e=0,t=u.length;e<t;e++){const t=u[e],a=t[0]+s,i=t[1]+s,r=t[2]+s;n.push(a,i,r),o+=3}}this.setIndex(n),this.setAttribute("position",new nn(a,3)),this.setAttribute("normal",new nn(i,3)),this.setAttribute("uv",new nn(r,2))}toJSON(){const e=super.toJSON();return function(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,a=e.length;n<a;n++){const a=e[n];t.shapes.push(a.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}static fromJSON(e,t){const n=[];for(let a=0,i=e.shapes.length;a<i;a++){const i=t[e.shapes[a]];n.push(i)}return new _o(n,e.curveSegments)}}class So extends un{constructor(e=1,t=32,n=16,a=0,i=2*Math.PI,r=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:a,phiLength:i,thetaStart:r,thetaLength:s},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const o=Math.min(r+s,Math.PI);let p=0;const l=[],d=new Pe,u=new Pe,c=[],h=[],m=[],f=[];for(let c=0;c<=n;c++){const g=[],v=c/n;let y=0;0==c&&0==r?y=.5/t:c==n&&o==Math.PI&&(y=-.5/t);for(let n=0;n<=t;n++){const o=n/t;d.x=-e*Math.cos(a+o*i)*Math.sin(r+v*s),d.y=e*Math.cos(r+v*s),d.z=e*Math.sin(a+o*i)*Math.sin(r+v*s),h.push(d.x,d.y,d.z),u.copy(d).normalize(),m.push(u.x,u.y,u.z),f.push(o+y,1-v),g.push(p++)}l.push(g)}for(let e=0;e<n;e++)for(let a=0;a<t;a++){const t=l[e][a+1],i=l[e][a],s=l[e+1][a],p=l[e+1][a+1];(0!==e||r>0)&&c.push(t,i,p),(e!==n-1||o<Math.PI)&&c.push(i,s,p)}this.setIndex(c),this.setAttribute("position",new nn(h,3)),this.setAttribute("normal",new nn(m,3)),this.setAttribute("uv",new nn(f,2))}static fromJSON(e){return new So(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class To extends un{constructor(e=1,t=.4,n=8,a=6,i=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:a,arc:i},n=Math.floor(n),a=Math.floor(a);const r=[],s=[],o=[],p=[],l=new Pe,d=new Pe,u=new Pe;for(let r=0;r<=n;r++)for(let c=0;c<=a;c++){const h=c/a*i,m=r/n*Math.PI*2;d.x=(e+t*Math.cos(m))*Math.cos(h),d.y=(e+t*Math.cos(m))*Math.sin(h),d.z=t*Math.sin(m),s.push(d.x,d.y,d.z),l.x=e*Math.cos(h),l.y=e*Math.sin(h),u.subVectors(d,l).normalize(),o.push(u.x,u.y,u.z),p.push(c/a),p.push(r/n)}for(let e=1;e<=n;e++)for(let t=1;t<=a;t++){const n=(a+1)*e+t-1,i=(a+1)*(e-1)+t-1,s=(a+1)*(e-1)+t,o=(a+1)*e+t;r.push(n,i,o),r.push(i,s,o)}this.setIndex(r),this.setAttribute("position",new nn(s,3)),this.setAttribute("normal",new nn(o,3)),this.setAttribute("uv",new nn(p,2))}static fromJSON(e){return new To(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Eo extends Kt{constructor(e){super(),this.type="ShadowMaterial",this.color=new _e(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}Eo.prototype.isShadowMaterial=!0;class Mo extends Ln{constructor(e){super(e),this.type="RawShaderMaterial"}}Mo.prototype.isRawShaderMaterial=!0;class No extends Kt{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new _e(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}No.prototype.isMeshStandardMaterial=!0;class Co extends No{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ce(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return pe(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.sheenColor=new _e(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new _e(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new _e(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}Co.prototype.isMeshPhysicalMaterial=!0;class Ao extends Kt{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new _e(16777215),this.specular=new _e(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}Ao.prototype.isMeshPhongMaterial=!0;class Io extends Kt{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new _e(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}Io.prototype.isMeshToonMaterial=!0;class Ro extends Kt{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}Ro.prototype.isMeshNormalMaterial=!0;class ko extends Kt{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new _e(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}ko.prototype.isMeshLambertMaterial=!0;class Do extends Kt{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new _e(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}Do.prototype.isMeshMatcapMaterial=!0;class Po extends rs{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}Po.prototype.isLineDashedMaterial=!0;const Lo={ShadowMaterial:Eo,SpriteMaterial:Dr,RawShaderMaterial:Mo,ShaderMaterial:Ln,PointsMaterial:fs,MeshPhysicalMaterial:Co,MeshStandardMaterial:No,MeshPhongMaterial:Ao,MeshToonMaterial:Io,MeshNormalMaterial:Ro,MeshLambertMaterial:ko,MeshDepthMaterial:hr,MeshDistanceMaterial:mr,MeshBasicMaterial:Yt,MeshMatcapMaterial:Do,LineDashedMaterial:Po,LineBasicMaterial:rs,Material:Kt};Kt.fromType=function(e){return new Lo[e]};const Oo={arraySlice:function(e,t,n){return Oo.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){const t=e.length,n=new Array(t);for(let e=0;e!==t;++e)n[e]=e;return n.sort((function(t,n){return e[t]-e[n]})),n},sortedArray:function(e,t,n){const a=e.length,i=new e.constructor(a);for(let r=0,s=0;s!==a;++r){const a=n[r]*t;for(let n=0;n!==t;++n)i[s++]=e[a+n]}return i},flattenJSON:function(e,t,n,a){let i=1,r=e[0];for(;void 0!==r&&void 0===r[a];)r=e[i++];if(void 0===r)return;let s=r[a];if(void 0!==s)if(Array.isArray(s))do{s=r[a],void 0!==s&&(t.push(r.time),n.push.apply(n,s)),r=e[i++]}while(void 0!==r);else if(void 0!==s.toArray)do{s=r[a],void 0!==s&&(t.push(r.time),s.toArray(n,n.length)),r=e[i++]}while(void 0!==r);else do{s=r[a],void 0!==s&&(t.push(r.time),n.push(s)),r=e[i++]}while(void 0!==r)},subclip:function(e,t,n,a,i=30){const r=e.clone();r.name=t;const s=[];for(let e=0;e<r.tracks.length;++e){const t=r.tracks[e],o=t.getValueSize(),p=[],l=[];for(let e=0;e<t.times.length;++e){const r=t.times[e]*i;if(!(r<n||r>=a)){p.push(t.times[e]);for(let n=0;n<o;++n)l.push(t.values[e*o+n])}}0!==p.length&&(t.times=Oo.convertArray(p,t.times.constructor),t.values=Oo.convertArray(l,t.values.constructor),s.push(t))}r.tracks=s;let o=1/0;for(let e=0;e<r.tracks.length;++e)o>r.tracks[e].times[0]&&(o=r.tracks[e].times[0]);for(let e=0;e<r.tracks.length;++e)r.tracks[e].shift(-1*o);return r.resetDuration(),r},makeClipAdditive:function(e,t=0,n=e,a=30){a<=0&&(a=30);const i=n.tracks.length,r=t/a;for(let t=0;t<i;++t){const a=n.tracks[t],i=a.ValueTypeName;if("bool"===i||"string"===i)continue;const s=e.tracks.find((function(e){return e.name===a.name&&e.ValueTypeName===i}));if(void 0===s)continue;let o=0;const p=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=p/3);let l=0;const d=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=d/3);const u=a.times.length-1;let c;if(r<=a.times[0]){const e=o,t=p-o;c=Oo.arraySlice(a.values,e,t)}else if(r>=a.times[u]){const e=u*p+o,t=e+p-o;c=Oo.arraySlice(a.values,e,t)}else{const e=a.createInterpolant(),t=o,n=p-o;e.evaluate(r),c=Oo.arraySlice(e.resultBuffer,t,n)}"quaternion"===i&&(new De).fromArray(c).normalize().conjugate().toArray(c);const h=s.times.length;for(let e=0;e<h;++e){const t=e*d+l;if("quaternion"===i)De.multiplyQuaternionsFlat(s.values,t,c,0,s.values,t);else{const e=d-2*l;for(let n=0;n<e;++n)s.values[t+n]-=c[n]}}}return e.blendMode=2501,e}};class Bo{constructor(e,t,n,a){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==a?a:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,a=t[n],i=t[n-1];e:{t:{let r;n:{a:if(!(e<a)){for(let r=n+2;;){if(void 0===a){if(e<i)break a;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,i)}if(n===r)break;if(i=a,a=t[++n],e<a)break t}r=t.length;break n}if(e>=i)break e;{const s=t[1];e<s&&(n=2,i=s);for(let r=n-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,a);if(n===r)break;if(a=i,i=t[--n-1],e>=i)break t}r=n,n=0}}for(;n<r;){const a=n+r>>>1;e<t[a]?r=a:n=a+1}if(a=t[n],i=t[n-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,a);if(void 0===a)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,i,e)}this._cachedIndex=n,this.intervalChanged_(n,i,a)}return this.interpolate_(n,i,e,a)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,a=this.valueSize,i=e*a;for(let e=0;e!==a;++e)t[e]=n[i+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Bo.prototype.beforeStart_=Bo.prototype.copySampleValue_,Bo.prototype.afterEnd_=Bo.prototype.copySampleValue_;class Fo extends Bo{constructor(e,t,n,a){super(e,t,n,a),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:j,endingEnd:j}}intervalChanged_(e,t,n){const a=this.parameterPositions;let i=e-2,r=e+1,s=a[i],o=a[r];if(void 0===s)switch(this.getSettings_().endingStart){case X:i=e,s=2*t-n;break;case K:i=a.length-2,s=t+a[i]-a[i+1];break;default:i=e,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case X:r=e,o=2*n-t;break;case K:r=1,o=n+a[1]-a[0];break;default:r=e-1,o=t}const p=.5*(n-t),l=this.valueSize;this._weightPrev=p/(t-s),this._weightNext=p/(o-n),this._offsetPrev=i*l,this._offsetNext=r*l}interpolate_(e,t,n,a){const i=this.resultBuffer,r=this.sampleValues,s=this.valueSize,o=e*s,p=o-s,l=this._offsetPrev,d=this._offsetNext,u=this._weightPrev,c=this._weightNext,h=(n-t)/(a-t),m=h*h,f=m*h,g=-u*f+2*u*m-u*h,v=(1+u)*f+(-1.5-2*u)*m+(-.5+u)*h+1,y=(-1-c)*f+(1.5+c)*m+.5*h,x=c*f-c*m;for(let e=0;e!==s;++e)i[e]=g*r[l+e]+v*r[p+e]+y*r[o+e]+x*r[d+e];return i}}class $o extends Bo{constructor(e,t,n,a){super(e,t,n,a)}interpolate_(e,t,n,a){const i=this.resultBuffer,r=this.sampleValues,s=this.valueSize,o=e*s,p=o-s,l=(n-t)/(a-t),d=1-l;for(let e=0;e!==s;++e)i[e]=r[p+e]*d+r[o+e]*l;return i}}class Vo extends Bo{constructor(e,t,n,a){super(e,t,n,a)}interpolate_(e){return this.copySampleValue_(e-1)}}class zo{constructor(e,t,n,a){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Oo.convertArray(t,this.TimeBufferType),this.values=Oo.convertArray(n,this.ValueBufferType),this.setInterpolation(a||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Oo.convertArray(e.times,Array),values:Oo.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(n.interpolation=t)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Vo(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new $o(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Fo(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case W:t=this.InterpolantFactoryMethodDiscrete;break;case H:t=this.InterpolantFactoryMethodLinear;break;case q:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return W;case this.InterpolantFactoryMethodLinear:return H;case this.InterpolantFactoryMethodSmooth:return q}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let n=0,a=t.length;n!==a;++n)t[n]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let n=0,a=t.length;n!==a;++n)t[n]*=e}return this}trim(e,t){const n=this.times,a=n.length;let i=0,r=a-1;for(;i!==a&&n[i]<e;)++i;for(;-1!==r&&n[r]>t;)--r;if(++r,0!==i||r!==a){i>=r&&(r=Math.max(r,1),i=r-1);const e=this.getValueSize();this.times=Oo.arraySlice(n,i,r),this.values=Oo.arraySlice(this.values,i*e,r*e)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,a=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let r=null;for(let t=0;t!==i;t++){const a=n[t];if("number"==typeof a&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,a),e=!1;break}if(null!==r&&r>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,a,r),e=!1;break}r=a}if(void 0!==a&&Oo.isTypedArray(a))for(let t=0,n=a.length;t!==n;++t){const n=a[t];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,n),e=!1;break}}return e}optimize(){const e=Oo.arraySlice(this.times),t=Oo.arraySlice(this.values),n=this.getValueSize(),a=this.getInterpolation()===q,i=e.length-1;let r=1;for(let s=1;s<i;++s){let i=!1;const o=e[s];if(o!==e[s+1]&&(1!==s||o!==e[0]))if(a)i=!0;else{const e=s*n,a=e-n,r=e+n;for(let s=0;s!==n;++s){const n=t[e+s];if(n!==t[a+s]||n!==t[r+s]){i=!0;break}}}if(i){if(s!==r){e[r]=e[s];const a=s*n,i=r*n;for(let e=0;e!==n;++e)t[i+e]=t[a+e]}++r}}if(i>0){e[r]=e[i];for(let e=i*n,a=r*n,s=0;s!==n;++s)t[a+s]=t[e+s];++r}return r!==e.length?(this.times=Oo.arraySlice(e,0,r),this.values=Oo.arraySlice(t,0,r*n)):(this.times=e,this.values=t),this}clone(){const e=Oo.arraySlice(this.times,0),t=Oo.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}zo.prototype.TimeBufferType=Float32Array,zo.prototype.ValueBufferType=Float32Array,zo.prototype.DefaultInterpolation=H;class Uo extends zo{}Uo.prototype.ValueTypeName="bool",Uo.prototype.ValueBufferType=Array,Uo.prototype.DefaultInterpolation=W,Uo.prototype.InterpolantFactoryMethodLinear=void 0,Uo.prototype.InterpolantFactoryMethodSmooth=void 0;class Go extends zo{}Go.prototype.ValueTypeName="color";class Wo extends zo{}Wo.prototype.ValueTypeName="number";class Ho extends Bo{constructor(e,t,n,a){super(e,t,n,a)}interpolate_(e,t,n,a){const i=this.resultBuffer,r=this.sampleValues,s=this.valueSize,o=(n-t)/(a-t);let p=e*s;for(let e=p+s;p!==e;p+=4)De.slerpFlat(i,0,r,p-s,r,p,o);return i}}class qo extends zo{InterpolantFactoryMethodLinear(e){return new Ho(this.times,this.values,this.getValueSize(),e)}}qo.prototype.ValueTypeName="quaternion",qo.prototype.DefaultInterpolation=H,qo.prototype.InterpolantFactoryMethodSmooth=void 0;class jo extends zo{}jo.prototype.ValueTypeName="string",jo.prototype.ValueBufferType=Array,jo.prototype.DefaultInterpolation=W,jo.prototype.InterpolantFactoryMethodLinear=void 0,jo.prototype.InterpolantFactoryMethodSmooth=void 0;class Xo extends zo{}Xo.prototype.ValueTypeName="vector";class Ko{constructor(e,t=-1,n,a=2500){this.name=e,this.tracks=n,this.duration=t,this.blendMode=a,this.uuid=oe(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,a=1/(e.fps||1);for(let e=0,i=n.length;e!==i;++e)t.push(Yo(n[e]).scale(a));const i=new this(e.name,e.duration,t,e.blendMode);return i.uuid=e.uuid,i}static toJSON(e){const t=[],n=e.tracks,a={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,a=n.length;e!==a;++e)t.push(zo.toJSON(n[e]));return a}static CreateFromMorphTargetSequence(e,t,n,a){const i=t.length,r=[];for(let e=0;e<i;e++){let s=[],o=[];s.push((e+i-1)%i,e,(e+1)%i),o.push(0,1,0);const p=Oo.getKeyframeOrder(s);s=Oo.sortedArray(s,1,p),o=Oo.sortedArray(o,1,p),a||0!==s[0]||(s.push(i),o.push(o[0])),r.push(new Wo(".morphTargetInfluences["+t[e].name+"]",s,o).scale(1/n))}return new this(e,-1,r)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const t=e;n=t.geometry&&t.geometry.animations||t.animations}for(let e=0;e<n.length;e++)if(n[e].name===t)return n[e];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const a={},i=/^([\w-]*?)([\d]+)$/;for(let t=0,n=e.length;t<n;t++){const n=e[t],r=n.name.match(i);if(r&&r.length>1){const e=r[1];let t=a[e];t||(a[e]=t=[]),t.push(n)}}const r=[];for(const e in a)r.push(this.CreateFromMorphTargetSequence(e,a[e],t,n));return r}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(e,t,n,a,i){if(0!==n.length){const r=[],s=[];Oo.flattenJSON(n,r,s,a),0!==r.length&&i.push(new e(t,r,s))}},a=[],i=e.name||"default",r=e.fps||30,s=e.blendMode;let o=e.length||-1;const p=e.hierarchy||[];for(let e=0;e<p.length;e++){const i=p[e].keys;if(i&&0!==i.length)if(i[0].morphTargets){const e={};let t;for(t=0;t<i.length;t++)if(i[t].morphTargets)for(let n=0;n<i[t].morphTargets.length;n++)e[i[t].morphTargets[n]]=-1;for(const n in e){const e=[],r=[];for(let a=0;a!==i[t].morphTargets.length;++a){const a=i[t];e.push(a.time),r.push(a.morphTarget===n?1:0)}a.push(new Wo(".morphTargetInfluence["+n+"]",e,r))}o=e.length*r}else{const r=".bones["+t[e].name+"]";n(Xo,r+".position",i,"pos",a),n(qo,r+".quaternion",i,"rot",a),n(Xo,r+".scale",i,"scl",a)}}return 0===a.length?null:new this(i,o,a,s)}resetDuration(){let e=0;for(let t=0,n=this.tracks.length;t!==n;++t){const n=this.tracks[t];e=Math.max(e,n.times[n.times.length-1])}return this.duration=e,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Yo(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Wo;case"vector":case"vector2":case"vector3":case"vector4":return Xo;case"color":return Go;case"quaternion":return qo;case"bool":case"boolean":return Uo;case"string":return jo}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){const t=[],n=[];Oo.flattenJSON(e.keys,t,n,"value"),e.times=t,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}const Zo={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};const Qo=new class{constructor(e,t,n){const a=this;let i,r=!1,s=0,o=0;const p=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,!1===r&&void 0!==a.onStart&&a.onStart(e,s,o),r=!0},this.itemEnd=function(e){s++,void 0!==a.onProgress&&a.onProgress(e,s,o),s===o&&(r=!1,void 0!==a.onLoad&&a.onLoad())},this.itemError=function(e){void 0!==a.onError&&a.onError(e)},this.resolveURL=function(e){return i?i(e):e},this.setURLModifier=function(e){return i=e,this},this.addHandler=function(e,t){return p.push(e,t),this},this.removeHandler=function(e){const t=p.indexOf(e);return-1!==t&&p.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=p.length;t<n;t+=2){const n=p[t],a=p[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return a}return null}}};class Jo{constructor(e){this.manager=void 0!==e?e:Qo,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise((function(a,i){n.load(e,a,t,i)}))}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const ep={};class tp extends Jo{constructor(e){super(e)}load(e,t,n,a){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=Zo.get(e);if(void 0!==i)return this.manager.itemStart(e),setTimeout((()=>{t&&t(i),this.manager.itemEnd(e)}),0),i;if(void 0!==ep[e])return void ep[e].push({onLoad:t,onProgress:n,onError:a});ep[e]=[],ep[e].push({onLoad:t,onProgress:n,onError:a});const r=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),s=this.mimeType,o=this.responseType;fetch(r).then((t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;const n=ep[e],a=t.body.getReader(),i=t.headers.get("Content-Length"),r=i?parseInt(i):0,s=0!==r;let o=0;const p=new ReadableStream({start(e){!function t(){a.read().then((({done:a,value:i})=>{if(a)e.close();else{o+=i.byteLength;const a=new ProgressEvent("progress",{lengthComputable:s,loaded:o,total:r});for(let e=0,t=n.length;e<t;e++){const t=n[e];t.onProgress&&t.onProgress(a)}e.enqueue(i),t()}}))}()}});return new Response(p)}throw Error(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`)})).then((e=>{switch(o){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then((e=>(new DOMParser).parseFromString(e,s)));case"json":return e.json();default:if(void 0===s)return e.text();{const t=/charset="?([^;"\s]*)"?/i.exec(s),n=t&&t[1]?t[1].toLowerCase():void 0,a=new TextDecoder(n);return e.arrayBuffer().then((e=>a.decode(e)))}}})).then((t=>{Zo.add(e,t);const n=ep[e];delete ep[e];for(let e=0,a=n.length;e<a;e++){const a=n[e];a.onLoad&&a.onLoad(t)}})).catch((t=>{const n=ep[e];if(void 0===n)throw this.manager.itemError(e),t;delete ep[e];for(let e=0,a=n.length;e<a;e++){const a=n[e];a.onError&&a.onError(t)}this.manager.itemError(e)})).finally((()=>{this.manager.itemEnd(e)})),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class np extends Jo{constructor(e){super(e)}load(e,t,n,a){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,r=Zo.get(e);if(void 0!==r)return i.manager.itemStart(e),setTimeout((function(){t&&t(r),i.manager.itemEnd(e)}),0),r;const s=fe("img");function o(){l(),Zo.add(e,this),t&&t(this),i.manager.itemEnd(e)}function p(t){l(),a&&a(t),i.manager.itemError(e),i.manager.itemEnd(e)}function l(){s.removeEventListener("load",o,!1),s.removeEventListener("error",p,!1)}return s.addEventListener("load",o,!1),s.addEventListener("error",p,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),i.manager.itemStart(e),s.src=e,s}}class ap extends Jo{constructor(e){super(e)}load(e,t,n,a){const i=new Vn,r=new np(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);let s=0;function o(n){r.load(e[n],(function(e){i.images[n]=e,s++,6===s&&(i.needsUpdate=!0,t&&t(i))}),void 0,a)}for(let t=0;t<e.length;++t)o(t);return i}}class ip extends Jo{constructor(e){super(e)}load(e,t,n,a){const i=new Ce,r=new np(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(e,(function(e){i.image=e,i.needsUpdate=!0,void 0!==t&&t(i)}),n,a),i}}class rp extends Ot{constructor(e,t=1){super(),this.type="Light",this.color=new _e(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}rp.prototype.isLight=!0;(class extends rp{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(Ot.DefaultUp),this.updateMatrix(),this.groundColor=new _e(t)}copy(e){return rp.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}).prototype.isHemisphereLight=!0;const sp=new ut,op=new Pe,pp=new Pe;class lp{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ce(512,512),this.map=null,this.mapPass=null,this.matrix=new ut,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Xn,this._frameExtents=new ce(1,1),this._viewportCount=1,this._viewports=[new Ae(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;op.setFromMatrixPosition(e.matrixWorld),t.position.copy(op),pp.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(pp),t.updateMatrixWorld(),sp.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(sp),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class dp extends lp{constructor(){super(new Bn(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,n=2*se*e.angle*this.focus,a=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;n===t.fov&&a===t.aspect&&i===t.far||(t.fov=n,t.aspect=a,t.far=i,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}dp.prototype.isSpotLightShadow=!0;(class extends rp{constructor(e,t,n=0,a=Math.PI/3,i=0,r=1){super(e,t),this.type="SpotLight",this.position.copy(Ot.DefaultUp),this.updateMatrix(),this.target=new Ot,this.distance=n,this.angle=a,this.penumbra=i,this.decay=r,this.shadow=new dp}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}).prototype.isSpotLight=!0;const up=new ut,cp=new Pe,hp=new Pe;class mp extends lp{constructor(){super(new Bn(90,1,.5,500)),this._frameExtents=new ce(4,2),this._viewportCount=6,this._viewports=[new Ae(2,1,1,1),new Ae(0,1,1,1),new Ae(3,1,1,1),new Ae(1,1,1,1),new Ae(3,0,1,1),new Ae(1,0,1,1)],this._cubeDirections=[new Pe(1,0,0),new Pe(-1,0,0),new Pe(0,0,1),new Pe(0,0,-1),new Pe(0,1,0),new Pe(0,-1,0)],this._cubeUps=[new Pe(0,1,0),new Pe(0,1,0),new Pe(0,1,0),new Pe(0,1,0),new Pe(0,0,1),new Pe(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,a=this.matrix,i=e.distance||n.far;i!==n.far&&(n.far=i,n.updateProjectionMatrix()),cp.setFromMatrixPosition(e.matrixWorld),n.position.copy(cp),hp.copy(n.position),hp.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(hp),n.updateMatrixWorld(),a.makeTranslation(-cp.x,-cp.y,-cp.z),up.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(up)}}mp.prototype.isPointLightShadow=!0;(class extends rp{constructor(e,t,n=0,a=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=a,this.shadow=new mp}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}).prototype.isPointLight=!0;class fp extends lp{constructor(){super(new oa(-5,5,5,-5,.5,500))}}fp.prototype.isDirectionalLightShadow=!0;(class extends rp{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(Ot.DefaultUp),this.updateMatrix(),this.target=new Ot,this.shadow=new fp}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}).prototype.isDirectionalLight=!0;(class extends rp{constructor(e,t){super(e,t),this.type="AmbientLight"}}).prototype.isAmbientLight=!0;(class extends rp{constructor(e,t,n=10,a=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=a}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}).prototype.isRectAreaLight=!0;class gp{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new Pe)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,a=e.y,i=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.282095),t.addScaledVector(r[1],.488603*a),t.addScaledVector(r[2],.488603*i),t.addScaledVector(r[3],.488603*n),t.addScaledVector(r[4],n*a*1.092548),t.addScaledVector(r[5],a*i*1.092548),t.addScaledVector(r[6],.315392*(3*i*i-1)),t.addScaledVector(r[7],n*i*1.092548),t.addScaledVector(r[8],.546274*(n*n-a*a)),t}getIrradianceAt(e,t){const n=e.x,a=e.y,i=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.886227),t.addScaledVector(r[1],1.023328*a),t.addScaledVector(r[2],1.023328*i),t.addScaledVector(r[3],1.023328*n),t.addScaledVector(r[4],.858086*n*a),t.addScaledVector(r[5],.858086*a*i),t.addScaledVector(r[6],.743125*i*i-.247708),t.addScaledVector(r[7],.858086*n*i),t.addScaledVector(r[8],.429043*(n*n-a*a)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let a=0;a<9;a++)n[a].fromArray(e,t+3*a);return this}toArray(e=[],t=0){const n=this.coefficients;for(let a=0;a<9;a++)n[a].toArray(e,t+3*a);return e}static getBasisAt(e,t){const n=e.x,a=e.y,i=e.z;t[0]=.282095,t[1]=.488603*a,t[2]=.488603*i,t[3]=.488603*n,t[4]=1.092548*n*a,t[5]=1.092548*a*i,t[6]=.315392*(3*i*i-1),t[7]=1.092548*n*i,t[8]=.546274*(n*n-a*a)}}gp.prototype.isSphericalHarmonics3=!0;class vp extends rp{constructor(e=new gp,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}vp.prototype.isLightProbe=!0;let yp;(class extends un{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}).prototype.isInstancedBufferGeometry=!0,class extends Jo{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,a){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,r=Zo.get(e);if(void 0!==r)return i.manager.itemStart(e),setTimeout((function(){t&&t(r),i.manager.itemEnd(e)}),0),r;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(e,s).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,Object.assign(i.options,{colorSpaceConversion:"none"}))})).then((function(n){Zo.add(e,n),t&&t(n),i.manager.itemEnd(e)})).catch((function(t){a&&a(t),i.manager.itemError(e),i.manager.itemEnd(e)})),i.manager.itemStart(e)}}.prototype.isImageBitmapLoader=!0;class xp extends Jo{constructor(e){super(e)}load(e,t,n,a){const i=this,r=new tp(this.manager);r.setResponseType("arraybuffer"),r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,(function(n){try{const e=n.slice(0);(void 0===yp&&(yp=new(window.AudioContext||window.webkitAudioContext)),yp).decodeAudioData(e,(function(e){t(e)}))}catch(t){a?a(t):console.error(t),i.manager.itemError(e)}}),n,a)}}(class extends vp{constructor(e,t,n=1){super(void 0,n);const a=(new _e).set(e),i=(new _e).set(t),r=new Pe(a.r,a.g,a.b),s=new Pe(i.r,i.g,i.b),o=Math.sqrt(Math.PI),p=o*Math.sqrt(.75);this.sh.coefficients[0].copy(r).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(r).sub(s).multiplyScalar(p)}}).prototype.isHemisphereLightProbe=!0,class extends vp{constructor(e,t=1){super(void 0,t);const n=(new _e).set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}.prototype.isAmbientLightProbe=!0;class bp{constructor(e,t,n){let a,i,r;switch(this.binding=e,this.valueSize=n,t){case"quaternion":a=this._slerp,i=this._slerpAdditive,r=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":a=this._select,i=this._select,r=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:a=this._lerp,i=this._lerpAdditive,r=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=a,this._mixBufferRegionAdditive=i,this._setIdentity=r,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,a=this.valueSize,i=e*a+a;let r=this.cumulativeWeight;if(0===r){for(let e=0;e!==a;++e)n[i+e]=n[e];r=t}else{r+=t;const e=t/r;this._mixBufferRegion(n,i,0,e,a)}this.cumulativeWeight=r}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,a=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,a,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,a=e*t+t,i=this.cumulativeWeight,r=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,i<1){const e=t*this._origIndex;this._mixBufferRegion(n,a,e,1-i,t)}r>0&&this._mixBufferRegionAdditive(n,a,this._addIndex*t,1,t);for(let e=t,i=t+t;e!==i;++e)if(n[e]!==n[e+t]){s.setValue(n,a);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,a=n*this._origIndex;e.getValue(t,a);for(let e=n,i=a;e!==i;++e)t[e]=t[a+e%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,a,i){if(a>=.5)for(let a=0;a!==i;++a)e[t+a]=e[n+a]}_slerp(e,t,n,a){De.slerpFlat(e,t,e,t,e,n,a)}_slerpAdditive(e,t,n,a,i){const r=this._workIndex*i;De.multiplyQuaternionsFlat(e,r,e,t,e,n),De.slerpFlat(e,t,e,t,e,r,a)}_lerp(e,t,n,a,i){const r=1-a;for(let s=0;s!==i;++s){const i=t+s;e[i]=e[i]*r+e[n+s]*a}}_lerpAdditive(e,t,n,a,i){for(let r=0;r!==i;++r){const i=t+r;e[i]=e[i]+e[n+r]*a}}}const wp=new RegExp("[\\[\\]\\.:\\/]","g"),_p="[^\\[\\]\\.:\\/]",Sp="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",Tp=/((?:WC+[\/:])*)/.source.replace("WC",_p),Ep=/(WCOD+)?/.source.replace("WCOD",Sp),Mp=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",_p),Np=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",_p),Cp=new RegExp("^"+Tp+Ep+Mp+Np+"$"),Ap=["material","materials","bones"];class Ip{constructor(e,t,n){this.path=t,this.parsedPath=n||Ip.parseTrackName(t),this.node=Ip.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Ip.Composite(e,t,n):new Ip(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(wp,"")}static parseTrackName(e){const t=Cp.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},a=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==a&&-1!==a){const e=n.nodeName.substring(a+1);-1!==Ap.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,a),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){const n=function(e){for(let a=0;a<e.length;a++){const i=e[a];if(i.name===t||i.uuid===t)return i;const r=n(i.children);if(r)return r}return null},a=n(e.children);if(a)return a}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let a=0,i=n.length;a!==i;++a)e[t++]=n[a]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let a=0,i=n.length;a!==i;++a)n[a]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let a=0,i=n.length;a!==i;++a)n[a]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let a=0,i=n.length;a!==i;++a)n[a]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,a=t.propertyName;let i=t.propertyIndex;if(e||(e=Ip.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let a=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===a){a=t;break}break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==a){if(void 0===e[a])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[a]}}const r=e[a];if(void 0===r){const n=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+a+" but it wasn't found.",e)}let s=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===a){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[i]&&(i=e.morphTargetDictionary[i])}o=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=i}else void 0!==r.fromArray&&void 0!==r.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(o=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=a;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][s]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ip.Composite=class{constructor(e,t,n){const a=n||Ip.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,a)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,a=this._bindings[n];void 0!==a&&a.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let a=this._targetGroup.nCachedObjects_,i=n.length;a!==i;++a)n[a].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},Ip.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Ip.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Ip.prototype.GetterByBindingType=[Ip.prototype._getValue_direct,Ip.prototype._getValue_array,Ip.prototype._getValue_arrayElement,Ip.prototype._getValue_toArray],Ip.prototype.SetterByBindingTypeAndVersioning=[[Ip.prototype._setValue_direct,Ip.prototype._setValue_direct_setNeedsUpdate,Ip.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ip.prototype._setValue_array,Ip.prototype._setValue_array_setNeedsUpdate,Ip.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ip.prototype._setValue_arrayElement,Ip.prototype._setValue_arrayElement_setNeedsUpdate,Ip.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ip.prototype._setValue_fromArray,Ip.prototype._setValue_fromArray_setNeedsUpdate,Ip.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Rp{constructor(e,t,n=null,a=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=a;const i=t.tracks,r=i.length,s=new Array(r),o={endingStart:j,endingEnd:j};for(let e=0;e!==r;++e){const t=i[e].createInterpolant(null);s[e]=t,t.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const n=this._clip.duration,a=e._clip.duration,i=a/n,r=n/a;e.warp(1,i,t),this.warp(r,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const a=this._mixer,i=a.time,r=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=a._lendControlInterpolant(),this._timeScaleInterpolant=s);const o=s.parameterPositions,p=s.sampleValues;return o[0]=i,o[1]=i+n,p[0]=e/r,p[1]=t/r,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,a){if(!this.enabled)return void this._updateWeight(e);const i=this._startTime;if(null!==i){const a=(e-i)*n;if(a<0||0===n)return;this._startTime=null,t=n*a}t*=this._updateTimeScale(e);const r=this._updateTime(t),s=this._updateWeight(e);if(s>0){const e=this._interpolants,t=this._propertyBindings;if(2501===this.blendMode)for(let n=0,a=e.length;n!==a;++n)e[n].evaluate(r),t[n].accumulateAdditive(s);else for(let n=0,i=e.length;n!==i;++n)e[n].evaluate(r),t[n].accumulate(a,s)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(null!==n){const a=n.evaluate(e)[0];t*=a,e>n.parameterPositions[1]&&(this.stopFading(),0===a&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let a=this.time+e,i=this._loopCount;const r=2202===n;if(0===e)return-1===i?a:r&&1==(1&i)?t-a:a;if(2200===n){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(a>=t)a=t;else{if(!(a<0)){this.time=a;break e}a=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=a,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===i&&(e>=0?(i=0,this._setEndings(!0,0===this.repetitions,r)):this._setEndings(0===this.repetitions,!0,r)),a>=t||a<0){const n=Math.floor(a/t);a-=t*n,i+=Math.abs(n);const s=this.repetitions-i;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,a=e>0?t:0,this.time=a,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===s){const t=e<0;this._setEndings(t,!t,r)}else this._setEndings(!1,!1,r);this._loopCount=i,this.time=a,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=a;if(r&&1==(1&i))return t-a}return a}_setEndings(e,t,n){const a=this._interpolantSettings;n?(a.endingStart=X,a.endingEnd=X):(a.endingStart=e?this.zeroSlopeAtStart?X:j:K,a.endingEnd=t?this.zeroSlopeAtEnd?X:j:K)}_scheduleFading(e,t,n){const a=this._mixer,i=a.time;let r=this._weightInterpolant;null===r&&(r=a._lendControlInterpolant(),this._weightInterpolant=r);const s=r.parameterPositions,o=r.sampleValues;return s[0]=i,o[0]=t,s[1]=i+e,o[1]=n,this}}(class extends ae{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,a=e._clip.tracks,i=a.length,r=e._propertyBindings,s=e._interpolants,o=n.uuid,p=this._bindingsByRootAndName;let l=p[o];void 0===l&&(l={},p[o]=l);for(let e=0;e!==i;++e){const i=a[e],p=i.name;let d=l[p];if(void 0!==d)++d.referenceCount,r[e]=d;else{if(d=r[e],void 0!==d){null===d._cacheIndex&&(++d.referenceCount,this._addInactiveBinding(d,o,p));continue}const a=t&&t._propertyBindings[e].binding.parsedPath;d=new bp(Ip.create(n,p,a),i.ValueTypeName,i.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,o,p),r[e]=d}s[e].resultBuffer=d.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,n=e._clip.uuid,a=this._actionsByClip[n];this._bindAction(e,a&&a.knownActions[0]),this._addInactiveAction(e,n,t)}const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,n){const a=this._actions,i=this._actionsByClip;let r=i[t];if(void 0===r)r={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=r;else{const t=r.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=a.length,a.push(e),r.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],a=e._cacheIndex;n._cacheIndex=a,t[a]=n,t.pop(),e._cacheIndex=null;const i=e._clip.uuid,r=this._actionsByClip,s=r[i],o=s.knownActions,p=o[o.length-1],l=e._byClipCacheIndex;p._byClipCacheIndex=l,o[l]=p,o.pop(),e._byClipCacheIndex=null,delete s.actionByRoot[(e._localRoot||this._root).uuid],0===o.length&&delete r[i],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,a=this._nActiveActions++,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=n,t[n]=i}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,a=--this._nActiveActions,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=n,t[n]=i}_addInactiveBinding(e,t,n){const a=this._bindingsByRootAndName,i=this._bindings;let r=a[t];void 0===r&&(r={},a[t]=r),r[n]=e,e._cacheIndex=i.length,i.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,a=n.rootNode.uuid,i=n.path,r=this._bindingsByRootAndName,s=r[a],o=t[t.length-1],p=e._cacheIndex;o._cacheIndex=p,t[p]=o,t.pop(),delete s[i],0===Object.keys(s).length&&delete r[a]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,a=this._nActiveBindings++,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=n,t[n]=i}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,a=--this._nActiveBindings,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=n,t[n]=i}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return void 0===n&&(n=new $o(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,a=--this._nActiveControlInterpolants,i=t[a];e.__cacheIndex=a,t[a]=e,i.__cacheIndex=n,t[n]=i}clipAction(e,t,n){const a=t||this._root,i=a.uuid;let r="string"==typeof e?Ko.findByName(a,e):e;const s=null!==r?r.uuid:e,o=this._actionsByClip[s];let p=null;if(void 0===n&&(n=null!==r?r.blendMode:2500),void 0!==o){const e=o.actionByRoot[i];if(void 0!==e&&e.blendMode===n)return e;p=o.knownActions[0],null===r&&(r=p._clip)}if(null===r)return null;const l=new Rp(this,r,t,n);return this._bindAction(l,p),this._addInactiveAction(l,s,i),l}existingAction(e,t){const n=t||this._root,a=n.uuid,i="string"==typeof e?Ko.findByName(n,e):e,r=i?i.uuid:e,s=this._actionsByClip[r];return void 0!==s&&s.actionByRoot[a]||null}stopAllAction(){const e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,a=this.time+=e,i=Math.sign(e),r=this._accuIndex^=1;for(let s=0;s!==n;++s)t[s]._update(a,e,i,r);const s=this._bindings,o=this._nActiveBindings;for(let e=0;e!==o;++e)s[e].apply(r);return this}setTime(e){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,a=this._actionsByClip,i=a[n];if(void 0!==i){const e=i.knownActions;for(let n=0,a=e.length;n!==a;++n){const a=e[n];this._deactivateAction(a);const i=a._cacheIndex,r=t[t.length-1];a._cacheIndex=null,a._byClipCacheIndex=null,r._cacheIndex=i,t[i]=r,t.pop(),this._removeInactiveBindingsForAction(a)}delete a[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const e in n){const a=n[e].actionByRoot[t];void 0!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}const a=this._bindingsByRootAndName[t];if(void 0!==a)for(const e in a){const t=a[e];t.restoreOriginalState(),this._removeInactiveBinding(t)}}uncacheAction(e,t){const n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}).prototype._controlInterpolantsResultBuffer=new Float32Array(1);class kp{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new kp(void 0===this.value.clone?this.value:this.value.clone())}}(class extends Ir{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}).prototype.isInstancedInterleavedBuffer=!0;function Dp(e,t){return e.distance-t.distance}function Pp(e,t,n,a){if(e.layers.test(t.layers)&&e.raycast(t,n),!0===a){const a=e.children;for(let e=0,i=a.length;e<i;e++)Pp(a[e],t,n,!0)}}const Lp=new ce;class Op{constructor(e=new ce(1/0,1/0),t=new ce(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Lp.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Lp.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Op.prototype.isBox2=!0;const Bp=new Pe,Fp=new ut,$p=new ut;function Vp(e){const t=[];!0===e.isBone&&t.push(e);for(let n=0;n<e.children.length;n++)t.push.apply(t,Vp(e.children[n]));return t}const zp=new Float32Array(1);new Int32Array(zp.buffer),Ss.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(Ss.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Gs.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},class extends ms{constructor(e=10,t=10,n=4473924,a=8947848){n=new _e(n),a=new _e(a);const i=t/2,r=e/t,s=e/2,o=[],p=[];for(let e=0,l=0,d=-s;e<=t;e++,d+=r){o.push(-s,0,d,s,0,d),o.push(d,0,-s,d,0,s);const t=e===i?n:a;t.toArray(p,l),l+=3,t.toArray(p,l),l+=3,t.toArray(p,l),l+=3,t.toArray(p,l),l+=3}const l=new un;l.setAttribute("position",new nn(o,3)),l.setAttribute("color",new nn(p,3)),super(l,new rs({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends ms{constructor(e){const t=Vp(e),n=new un,a=[],i=[],r=new _e(0,0,1),s=new _e(0,1,0);for(let e=0;e<t.length;e++){const n=t[e];n.parent&&n.parent.isBone&&(a.push(0,0,0),a.push(0,0,0),i.push(r.r,r.g,r.b),i.push(s.r,s.g,s.b))}n.setAttribute("position",new nn(a,3)),n.setAttribute("color",new nn(i,3)),super(n,new rs({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,a=n.getAttribute("position");$p.copy(this.root.matrixWorld).invert();for(let e=0,n=0;e<t.length;e++){const i=t[e];i.parent&&i.parent.isBone&&(Fp.multiplyMatrices($p,i.matrixWorld),Bp.setFromMatrixPosition(Fp),a.setXYZ(n,Bp.x,Bp.y,Bp.z),Fp.multiplyMatrices($p,i.parent.matrixWorld),Bp.setFromMatrixPosition(Fp),a.setXYZ(n+1,Bp.x,Bp.y,Bp.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Jo.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),class{static decodeText(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let n=0,a=e.length;n<a;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(e){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}.extractUrlBase(e)},Jo.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Op.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},Op.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Op.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Op.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},Be.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Be.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Be.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Be.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},Be.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},wt.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")},nt.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Xn.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},he.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},he.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},he.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},he.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},he.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},he.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},ut.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},ut.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},ut.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Pe).setFromMatrixColumn(this,3)},ut.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},ut.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},ut.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ut.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ut.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},ut.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},ut.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ut.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},ut.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},ut.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},ut.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},ut.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},ut.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ut.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},ut.prototype.makeFrustum=function(e,t,n,a,i,r){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,a,n,i,r)},ut.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Hn.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},De.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},De.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},dt.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},dt.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},dt.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},jt.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},jt.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},jt.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},jt.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},jt.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},jt.barycoordFromPoint=function(e,t,n,a,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),jt.getBarycoord(e,t,n,a,i)},jt.normal=function(e,t,n,a){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),jt.getNormal(e,t,n,a)},Ws.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},Ws.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new xo(this,e)},Ws.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new _o(this,e)},ce.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},ce.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},ce.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Pe.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},Pe.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},Pe.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},Pe.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},Pe.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},Pe.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},Pe.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Pe.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Pe.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ae.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Ae.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ot.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},Ot.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Ot.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},Ot.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Ot.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(Ot.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),An.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(An.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Jr.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Bn.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(rp.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(Jt.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===ee},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(ee)}}}),Jt.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?ee:J),this},Jt.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Jt.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},un.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},un.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new Jt(arguments[1],arguments[2])))},un.prototype.addDrawCall=function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},un.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},un.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},un.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},un.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(un.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Ir.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?ee:J),this},Ir.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},xo.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},xo.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},xo.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},Ar.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},kp.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(Kt.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new _e}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(Ln.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Mr.prototype.clearTarget=function(e,t,n,a){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,a)},Mr.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},Mr.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Mr.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Mr.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Mr.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Mr.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Mr.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Mr.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Mr.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Mr.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Mr.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Mr.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Mr.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Mr.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},Mr.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Mr.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Mr.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Mr.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Mr.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Mr.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Mr.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Mr.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Mr.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Mr.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Mr.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?Z:Y}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(fr.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(Ie.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),class extends Ot{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return(new xp).load(e,(function(e){t.setBuffer(e)})),this},$n.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},$n.prototype.clear=function(e,t,n,a){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,a)},Te.crossOrigin=void 0,Te.loadTexture=function(e,t,n,a){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new ip;i.setCrossOrigin(this.crossOrigin);const r=i.load(e,n,void 0,a);return t&&(r.mapping=t),r},Te.loadTextureCube=function(e,t,n,a){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new ap;i.setCrossOrigin(this.crossOrigin);const r=i.load(e,n,void 0,a);return t&&(r.mapping=t),r},Te.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Te.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"138"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="138");var Up=function(){var e=0,t=document.createElement("div");function n(e){return t.appendChild(e.dom),e}function a(n){for(var a=0;a<t.children.length;a++)t.children[a].style.display=a===n?"block":"none";e=n}t.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",t.addEventListener("click",(function(n){n.preventDefault(),a(++e%t.children.length)}),!1);var i=(performance||Date).now(),r=i,s=0,o=n(new Up.Panel("FPS","#0ff","#002")),p=n(new Up.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var l=n(new Up.Panel("MB","#f08","#201"));return a(0),{REVISION:16,dom:t,addPanel:n,showPanel:a,begin:function(){i=(performance||Date).now()},end:function(){s++;var e=(performance||Date).now();if(p.update(e-i,200),e>=r+1e3&&(o.update(1e3*s/(e-r),100),r=e,s=0,l)){var t=performance.memory;l.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){i=this.end()},domElement:t,setMode:a}};Up.Panel=function(e,t,n){var a=1/0,i=0,r=Math.round,s=r(window.devicePixelRatio||1),o=80*s,p=48*s,l=3*s,d=2*s,u=3*s,c=15*s,h=74*s,m=30*s,f=document.createElement("canvas");f.width=o,f.height=p,f.style.cssText="width:80px;height:48px";var g=f.getContext("2d");return g.font="bold "+9*s+"px Helvetica,Arial,sans-serif",g.textBaseline="top",g.fillStyle=n,g.fillRect(0,0,o,p),g.fillStyle=t,g.fillText(e,l,d),g.fillRect(u,c,h,m),g.fillStyle=n,g.globalAlpha=.9,g.fillRect(u,c,h,m),{dom:f,update:function(p,v){a=Math.min(a,p),i=Math.max(i,p),g.fillStyle=n,g.globalAlpha=1,g.fillRect(0,0,o,c),g.fillStyle=t,g.fillText(r(p)+" "+e+" ("+r(a)+"-"+r(i)+")",l,d),g.drawImage(f,u+s,c,h-s,m,u,c,h-s,m),g.fillRect(u+h-s,c,s,m),g.fillStyle=n,g.globalAlpha=.9,g.fillRect(u+h-s,c,s,r((1-p/v)*m))}}};const Gp=Up;var Wp=n(1356);n(8593),Wp.UP,Wp.b$;const Hp=new class{constructor(e,t,n=0,a=1/0){this.ray=new dt(e,t),this.near=n,this.far=a,this.camera=null,this.layers=new _t,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Pp(e,this,n,t),n.sort(Dp),n}intersectObjects(e,t=!0,n=[]){for(let a=0,i=e.length;a<i;a++)Pp(e[a],this,n,t);return n.sort(Dp),n}},qp=new Pe,jp=new Pe,Xp=new De,Kp={X:new Pe(1,0,0),Y:new Pe(0,1,0),Z:new Pe(0,0,1)},Yp={type:"change"},Zp={type:"mouseDown"},Qp={type:"mouseUp",mode:null},Jp={type:"objectChange"};function el(e){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:e.button};{const t=this.domElement.getBoundingClientRect();return{x:(e.clientX-t.left)/t.width*2-1,y:-(e.clientY-t.top)/t.height*2+1,button:e.button}}}function tl(e){if(this.enabled)switch(e.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(e))}}function nl(e){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(e.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(e)),this.pointerDown(this._getPointer(e)))}function al(e){this.enabled&&this.pointerMove(this._getPointer(e))}function il(e){this.enabled&&(this.domElement.releasePointerCapture(e.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(e)))}function rl(e,t,n){const a=t.intersectObject(e,!0);for(let e=0;e<a.length;e++)if(a[e].object.visible||n)return a[e];return!1}(class extends Ot{constructor(e,t){super(),void 0===t&&(console.warn('THREE.TransformControls: The second parameter "domElement" is now mandatory.'),t=document),this.visible=!1,this.domElement=t,this.domElement.style.touchAction="none";const n=new bl;this._gizmo=n,this.add(n);const a=new wl;this._plane=a,this.add(a);const i=this;function r(e,t){let r=t;Object.defineProperty(i,e,{get:function(){return void 0!==r?r:t},set:function(t){r!==t&&(r=t,a[e]=t,n[e]=t,i.dispatchEvent({type:e+"-changed",value:t}),i.dispatchEvent(Yp))}}),i[e]=t,a[e]=t,n[e]=t}r("camera",e),r("object",void 0),r("enabled",!0),r("axis",null),r("mode","translate"),r("translationSnap",null),r("rotationSnap",null),r("scaleSnap",null),r("space","world"),r("size",1),r("dragging",!1),r("showX",!0),r("showY",!0),r("showZ",!0);const s=new Pe,o=new Pe,p=new De,l=new De,d=new Pe,u=new De,c=new Pe,h=new Pe,m=new Pe,f=new Pe;r("worldPosition",s),r("worldPositionStart",o),r("worldQuaternion",p),r("worldQuaternionStart",l),r("cameraPosition",d),r("cameraQuaternion",u),r("pointStart",c),r("pointEnd",h),r("rotationAxis",m),r("rotationAngle",0),r("eye",f),this._offset=new Pe,this._startNorm=new Pe,this._endNorm=new Pe,this._cameraScale=new Pe,this._parentPosition=new Pe,this._parentQuaternion=new De,this._parentQuaternionInv=new De,this._parentScale=new Pe,this._worldScaleStart=new Pe,this._worldQuaternionInv=new De,this._worldScale=new Pe,this._positionStart=new Pe,this._quaternionStart=new De,this._scaleStart=new Pe,this._getPointer=el.bind(this),this._onPointerDown=nl.bind(this),this._onPointerHover=tl.bind(this),this._onPointerMove=al.bind(this),this._onPointerUp=il.bind(this),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp)}updateMatrixWorld(){void 0!==this.object&&(this.object.updateMatrixWorld(),null===this.object.parent?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):this.object.parent.matrixWorld.decompose(this._parentPosition,this._parentQuaternion,this._parentScale),this.object.matrixWorld.decompose(this.worldPosition,this.worldQuaternion,this._worldScale),this._parentQuaternionInv.copy(this._parentQuaternion).invert(),this._worldQuaternionInv.copy(this.worldQuaternion).invert()),this.camera.updateMatrixWorld(),this.camera.matrixWorld.decompose(this.cameraPosition,this.cameraQuaternion,this._cameraScale),this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize(),super.updateMatrixWorld(this)}pointerHover(e){if(void 0===this.object||!0===this.dragging)return;Hp.setFromCamera(e,this.camera);const t=rl(this._gizmo.picker[this.mode],Hp);this.axis=t?t.object.name:null}pointerDown(e){if(void 0!==this.object&&!0!==this.dragging&&0===e.button&&null!==this.axis){Hp.setFromCamera(e,this.camera);const t=rl(this._plane,Hp,!0);t&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(t.point).sub(this.worldPositionStart)),this.dragging=!0,Zp.mode=this.mode,this.dispatchEvent(Zp)}}pointerMove(e){const t=this.axis,n=this.mode,a=this.object;let i=this.space;if("scale"===n?i="local":"E"!==t&&"XYZE"!==t&&"XYZ"!==t||(i="world"),void 0===a||null===t||!1===this.dragging||-1!==e.button)return;Hp.setFromCamera(e,this.camera);const r=rl(this._plane,Hp,!0);if(r){if(this.pointEnd.copy(r.point).sub(this.worldPositionStart),"translate"===n)this._offset.copy(this.pointEnd).sub(this.pointStart),"local"===i&&"XYZ"!==t&&this._offset.applyQuaternion(this._worldQuaternionInv),-1===t.indexOf("X")&&(this._offset.x=0),-1===t.indexOf("Y")&&(this._offset.y=0),-1===t.indexOf("Z")&&(this._offset.z=0),"local"===i&&"XYZ"!==t?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),a.position.copy(this._offset).add(this._positionStart),this.translationSnap&&("local"===i&&(a.position.applyQuaternion(Xp.copy(this._quaternionStart).invert()),-1!==t.search("X")&&(a.position.x=Math.round(a.position.x/this.translationSnap)*this.translationSnap),-1!==t.search("Y")&&(a.position.y=Math.round(a.position.y/this.translationSnap)*this.translationSnap),-1!==t.search("Z")&&(a.position.z=Math.round(a.position.z/this.translationSnap)*this.translationSnap),a.position.applyQuaternion(this._quaternionStart)),"world"===i&&(a.parent&&a.position.add(qp.setFromMatrixPosition(a.parent.matrixWorld)),-1!==t.search("X")&&(a.position.x=Math.round(a.position.x/this.translationSnap)*this.translationSnap),-1!==t.search("Y")&&(a.position.y=Math.round(a.position.y/this.translationSnap)*this.translationSnap),-1!==t.search("Z")&&(a.position.z=Math.round(a.position.z/this.translationSnap)*this.translationSnap),a.parent&&a.position.sub(qp.setFromMatrixPosition(a.parent.matrixWorld))));else if("scale"===n){if(-1!==t.search("XYZ")){let e=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(e*=-1),jp.set(e,e,e)}else qp.copy(this.pointStart),jp.copy(this.pointEnd),qp.applyQuaternion(this._worldQuaternionInv),jp.applyQuaternion(this._worldQuaternionInv),jp.divide(qp),-1===t.search("X")&&(jp.x=1),-1===t.search("Y")&&(jp.y=1),-1===t.search("Z")&&(jp.z=1);a.scale.copy(this._scaleStart).multiply(jp),this.scaleSnap&&(-1!==t.search("X")&&(a.scale.x=Math.round(a.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==t.search("Y")&&(a.scale.y=Math.round(a.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==t.search("Z")&&(a.scale.z=Math.round(a.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if("rotate"===n){this._offset.copy(this.pointEnd).sub(this.pointStart);const e=20/this.worldPosition.distanceTo(qp.setFromMatrixPosition(this.camera.matrixWorld));"E"===t?(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1):"XYZE"===t?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(qp.copy(this.rotationAxis).cross(this.eye))*e):"X"!==t&&"Y"!==t&&"Z"!==t||(this.rotationAxis.copy(Kp[t]),qp.copy(Kp[t]),"local"===i&&qp.applyQuaternion(this.worldQuaternion),this.rotationAngle=this._offset.dot(qp.cross(this.eye).normalize())*e),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),"local"===i&&"E"!==t&&"XYZE"!==t?(a.quaternion.copy(this._quaternionStart),a.quaternion.multiply(Xp.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),a.quaternion.copy(Xp.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),a.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(Yp),this.dispatchEvent(Jp)}}pointerUp(e){0===e.button&&(this.dragging&&null!==this.axis&&(Qp.mode=this.mode,this.dispatchEvent(Qp)),this.dragging=!1,this.axis=null)}dispose(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.traverse((function(e){e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose()}))}attach(e){return this.object=e,this.visible=!0,this}detach(){return this.object=void 0,this.visible=!1,this.axis=null,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(Yp),this.dispatchEvent(Jp),this.pointStart.copy(this.pointEnd))}getRaycaster(){return Hp}getMode(){return this.mode}setMode(e){this.mode=e}setTranslationSnap(e){this.translationSnap=e}setRotationSnap(e){this.rotationSnap=e}setScaleSnap(e){this.scaleSnap=e}setSize(e){this.size=e}setSpace(e){this.space=e}update(){console.warn("THREE.TransformControls: update function has no more functionality and therefore has been deprecated.")}}).prototype.isTransformControls=!0;const sl=new wt,ol=new Pe(0,1,0),pl=new Pe(0,0,0),ll=new ut,dl=new De,ul=new De,cl=new Pe,hl=new ut,ml=new Pe(1,0,0),fl=new Pe(0,1,0),gl=new Pe(0,0,1),vl=new Pe,yl=new Pe,xl=new Pe;class bl extends Ot{constructor(){super(),this.type="TransformControlsGizmo";const e=new Yt({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),t=new rs({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),n=e.clone();n.opacity=.15;const a=t.clone();a.opacity=.5;const i=e.clone();i.color.setHex(16711680);const r=e.clone();r.color.setHex(65280);const s=e.clone();s.color.setHex(255);const o=e.clone();o.color.setHex(16711680),o.opacity=.5;const p=e.clone();p.color.setHex(65280),p.opacity=.5;const l=e.clone();l.color.setHex(255),l.opacity=.5;const d=e.clone();d.opacity=.25;const u=e.clone();u.color.setHex(16776960),u.opacity=.25,e.clone().color.setHex(16776960);const c=e.clone();c.color.setHex(7895160);const h=new ws(0,.04,.1,12);h.translate(0,.05,0);const m=new Rn(.08,.08,.08);m.translate(0,.04,0);const f=new un;f.setAttribute("position",new nn([0,0,0,1,0,0],3));const g=new ws(.0075,.0075,.5,3);function v(e,t){const n=new To(e,.0075,3,64,t*Math.PI*2);return n.rotateY(Math.PI/2),n.rotateX(Math.PI/2),n}g.translate(0,.25,0);const y={X:[[new An(h,i),[.5,0,0],[0,0,-Math.PI/2]],[new An(h,i),[-.5,0,0],[0,0,Math.PI/2]],[new An(g,i),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new An(h,r),[0,.5,0]],[new An(h,r),[0,-.5,0],[Math.PI,0,0]],[new An(g,r)]],Z:[[new An(h,s),[0,0,.5],[Math.PI/2,0,0]],[new An(h,s),[0,0,-.5],[-Math.PI/2,0,0]],[new An(g,s),null,[Math.PI/2,0,0]]],XYZ:[[new An(new wo(.1,0),d.clone()),[0,0,0]]],XY:[[new An(new Rn(.15,.15,.01),l.clone()),[.15,.15,0]]],YZ:[[new An(new Rn(.15,.15,.01),o.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new An(new Rn(.15,.15,.01),p.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},x={X:[[new An(new ws(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new An(new ws(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new An(new ws(.2,0,.6,4),n),[0,.3,0]],[new An(new ws(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new An(new ws(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new An(new ws(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new An(new wo(.2,0),n)]],XY:[[new An(new Rn(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new An(new Rn(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new An(new Rn(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]]},b={START:[[new An(new wo(.01,2),a),null,null,null,"helper"]],END:[[new An(new wo(.01,2),a),null,null,null,"helper"]],DELTA:[[new us(function(){const e=new un;return e.setAttribute("position",new nn([0,0,0,1,1,1],3)),e}(),a),null,null,null,"helper"]],X:[[new us(f,a.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new us(f,a.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new us(f,a.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},w={XYZE:[[new An(v(.5,1),c),null,[0,Math.PI/2,0]]],X:[[new An(v(.5,.5),i)]],Y:[[new An(v(.5,.5),r),null,[0,0,-Math.PI/2]]],Z:[[new An(v(.5,.5),s),null,[0,Math.PI/2,0]]],E:[[new An(v(.75,1),u),null,[0,Math.PI/2,0]]]},_={AXIS:[[new us(f,a.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},S={XYZE:[[new An(new So(.25,10,8),n)]],X:[[new An(new To(.5,.1,4,24),n),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new An(new To(.5,.1,4,24),n),[0,0,0],[Math.PI/2,0,0]]],Z:[[new An(new To(.5,.1,4,24),n),[0,0,0],[0,0,-Math.PI/2]]],E:[[new An(new To(.75,.1,2,24),n)]]},T={X:[[new An(m,i),[.5,0,0],[0,0,-Math.PI/2]],[new An(g,i),[0,0,0],[0,0,-Math.PI/2]],[new An(m,i),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new An(m,r),[0,.5,0]],[new An(g,r)],[new An(m,r),[0,-.5,0],[0,0,Math.PI]]],Z:[[new An(m,s),[0,0,.5],[Math.PI/2,0,0]],[new An(g,s),[0,0,0],[Math.PI/2,0,0]],[new An(m,s),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new An(new Rn(.15,.15,.01),l),[.15,.15,0]]],YZ:[[new An(new Rn(.15,.15,.01),o),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new An(new Rn(.15,.15,.01),p),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new An(new Rn(.1,.1,.1),d.clone())]]},E={X:[[new An(new ws(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new An(new ws(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new An(new ws(.2,0,.6,4),n),[0,.3,0]],[new An(new ws(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new An(new ws(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new An(new ws(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new An(new Rn(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new An(new Rn(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new An(new Rn(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new An(new Rn(.2,.2,.2),n),[0,0,0]]]},M={X:[[new us(f,a.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new us(f,a.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new us(f,a.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function N(e){const t=new Ot;for(const n in e)for(let a=e[n].length;a--;){const i=e[n][a][0].clone(),r=e[n][a][1],s=e[n][a][2],o=e[n][a][3],p=e[n][a][4];i.name=n,i.tag=p,r&&i.position.set(r[0],r[1],r[2]),s&&i.rotation.set(s[0],s[1],s[2]),o&&i.scale.set(o[0],o[1],o[2]),i.updateMatrix();const l=i.geometry.clone();l.applyMatrix4(i.matrix),i.geometry=l,i.renderOrder=1/0,i.position.set(0,0,0),i.rotation.set(0,0,0),i.scale.set(1,1,1),t.add(i)}return t}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=N(y)),this.add(this.gizmo.rotate=N(w)),this.add(this.gizmo.scale=N(T)),this.add(this.picker.translate=N(x)),this.add(this.picker.rotate=N(S)),this.add(this.picker.scale=N(E)),this.add(this.helper.translate=N(b)),this.add(this.helper.rotate=N(_)),this.add(this.helper.scale=N(M)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(e){const t="local"===("scale"===this.mode?"local":this.space)?this.worldQuaternion:ul;this.gizmo.translate.visible="translate"===this.mode,this.gizmo.rotate.visible="rotate"===this.mode,this.gizmo.scale.visible="scale"===this.mode,this.helper.translate.visible="translate"===this.mode,this.helper.rotate.visible="rotate"===this.mode,this.helper.scale.visible="scale"===this.mode;let n=[];n=n.concat(this.picker[this.mode].children),n=n.concat(this.gizmo[this.mode].children),n=n.concat(this.helper[this.mode].children);for(let e=0;e<n.length;e++){const a=n[e];let i;if(a.visible=!0,a.rotation.set(0,0,0),a.position.copy(this.worldPosition),i=this.camera.isOrthographicCamera?(this.camera.top-this.camera.bottom)/this.camera.zoom:this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),a.scale.set(1,1,1).multiplyScalar(i*this.size/4),"helper"!==a.tag){if(a.quaternion.copy(t),"translate"===this.mode||"scale"===this.mode){const e=.99,n=.2;"X"===a.name&&Math.abs(ol.copy(ml).applyQuaternion(t).dot(this.eye))>e&&(a.scale.set(1e-10,1e-10,1e-10),a.visible=!1),"Y"===a.name&&Math.abs(ol.copy(fl).applyQuaternion(t).dot(this.eye))>e&&(a.scale.set(1e-10,1e-10,1e-10),a.visible=!1),"Z"===a.name&&Math.abs(ol.copy(gl).applyQuaternion(t).dot(this.eye))>e&&(a.scale.set(1e-10,1e-10,1e-10),a.visible=!1),"XY"===a.name&&Math.abs(ol.copy(gl).applyQuaternion(t).dot(this.eye))<n&&(a.scale.set(1e-10,1e-10,1e-10),a.visible=!1),"YZ"===a.name&&Math.abs(ol.copy(ml).applyQuaternion(t).dot(this.eye))<n&&(a.scale.set(1e-10,1e-10,1e-10),a.visible=!1),"XZ"===a.name&&Math.abs(ol.copy(fl).applyQuaternion(t).dot(this.eye))<n&&(a.scale.set(1e-10,1e-10,1e-10),a.visible=!1)}else"rotate"===this.mode&&(dl.copy(t),ol.copy(this.eye).applyQuaternion(Xp.copy(t).invert()),-1!==a.name.search("E")&&a.quaternion.setFromRotationMatrix(ll.lookAt(this.eye,pl,fl)),"X"===a.name&&(Xp.setFromAxisAngle(ml,Math.atan2(-ol.y,ol.z)),Xp.multiplyQuaternions(dl,Xp),a.quaternion.copy(Xp)),"Y"===a.name&&(Xp.setFromAxisAngle(fl,Math.atan2(ol.x,ol.z)),Xp.multiplyQuaternions(dl,Xp),a.quaternion.copy(Xp)),"Z"===a.name&&(Xp.setFromAxisAngle(gl,Math.atan2(ol.y,ol.x)),Xp.multiplyQuaternions(dl,Xp),a.quaternion.copy(Xp)));a.visible=a.visible&&(-1===a.name.indexOf("X")||this.showX),a.visible=a.visible&&(-1===a.name.indexOf("Y")||this.showY),a.visible=a.visible&&(-1===a.name.indexOf("Z")||this.showZ),a.visible=a.visible&&(-1===a.name.indexOf("E")||this.showX&&this.showY&&this.showZ),a.material._color=a.material._color||a.material.color.clone(),a.material._opacity=a.material._opacity||a.material.opacity,a.material.color.copy(a.material._color),a.material.opacity=a.material._opacity,this.enabled&&this.axis&&(a.name===this.axis||this.axis.split("").some((function(e){return a.name===e})))&&(a.material.color.setHex(16776960),a.material.opacity=1)}else a.visible=!1,"AXIS"===a.name?(a.position.copy(this.worldPositionStart),a.visible=!!this.axis,"X"===this.axis&&(Xp.setFromEuler(sl.set(0,0,0)),a.quaternion.copy(t).multiply(Xp),Math.abs(ol.copy(ml).applyQuaternion(t).dot(this.eye))>.9&&(a.visible=!1)),"Y"===this.axis&&(Xp.setFromEuler(sl.set(0,0,Math.PI/2)),a.quaternion.copy(t).multiply(Xp),Math.abs(ol.copy(fl).applyQuaternion(t).dot(this.eye))>.9&&(a.visible=!1)),"Z"===this.axis&&(Xp.setFromEuler(sl.set(0,Math.PI/2,0)),a.quaternion.copy(t).multiply(Xp),Math.abs(ol.copy(gl).applyQuaternion(t).dot(this.eye))>.9&&(a.visible=!1)),"XYZE"===this.axis&&(Xp.setFromEuler(sl.set(0,Math.PI/2,0)),ol.copy(this.rotationAxis),a.quaternion.setFromRotationMatrix(ll.lookAt(pl,ol,fl)),a.quaternion.multiply(Xp),a.visible=this.dragging),"E"===this.axis&&(a.visible=!1)):"START"===a.name?(a.position.copy(this.worldPositionStart),a.visible=this.dragging):"END"===a.name?(a.position.copy(this.worldPosition),a.visible=this.dragging):"DELTA"===a.name?(a.position.copy(this.worldPositionStart),a.quaternion.copy(this.worldQuaternionStart),qp.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),qp.applyQuaternion(this.worldQuaternionStart.clone().invert()),a.scale.copy(qp),a.visible=this.dragging):(a.quaternion.copy(t),this.dragging?a.position.copy(this.worldPositionStart):a.position.copy(this.worldPosition),this.axis&&(a.visible=-1!==this.axis.search(a.name)))}super.updateMatrixWorld(e)}}bl.prototype.isTransformControlsGizmo=!0;class wl extends An{constructor(){super(new Zn(1e5,1e5,2,2),new Yt({visible:!1,wireframe:!0,side:2,transparent:!0,opacity:.1,toneMapped:!1})),this.type="TransformControlsPlane"}updateMatrixWorld(e){let t=this.space;switch(this.position.copy(this.worldPosition),"scale"===this.mode&&(t="local"),vl.copy(ml).applyQuaternion("local"===t?this.worldQuaternion:ul),yl.copy(fl).applyQuaternion("local"===t?this.worldQuaternion:ul),xl.copy(gl).applyQuaternion("local"===t?this.worldQuaternion:ul),ol.copy(yl),this.mode){case"translate":case"scale":switch(this.axis){case"X":ol.copy(this.eye).cross(vl),cl.copy(vl).cross(ol);break;case"Y":ol.copy(this.eye).cross(yl),cl.copy(yl).cross(ol);break;case"Z":ol.copy(this.eye).cross(xl),cl.copy(xl).cross(ol);break;case"XY":cl.copy(xl);break;case"YZ":cl.copy(vl);break;case"XZ":ol.copy(xl),cl.copy(yl);break;case"XYZ":case"E":cl.set(0,0,0)}break;default:cl.set(0,0,0)}0===cl.length()?this.quaternion.copy(this.cameraQuaternion):(hl.lookAt(qp.set(0,0,0),cl,ol),this.quaternion.setFromRotationMatrix(hl)),super.updateMatrixWorld(e)}}wl.prototype.isTransformControlsPlane=!0;var _l=n(1621),Sl=n(6697);class Tl{constructor(e){void 0===e&&(e=[0,0,0,0,0,0,0,0,0]),this.elements=e}identity(){const e=this.elements;e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1}setZero(){const e=this.elements;e[0]=0,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=0,e[6]=0,e[7]=0,e[8]=0}setTrace(e){const t=this.elements;t[0]=e.x,t[4]=e.y,t[8]=e.z}getTrace(e){void 0===e&&(e=new Ml);const t=this.elements;return e.x=t[0],e.y=t[4],e.z=t[8],e}vmult(e,t){void 0===t&&(t=new Ml);const n=this.elements,a=e.x,i=e.y,r=e.z;return t.x=n[0]*a+n[1]*i+n[2]*r,t.y=n[3]*a+n[4]*i+n[5]*r,t.z=n[6]*a+n[7]*i+n[8]*r,t}smult(e){for(let t=0;t<this.elements.length;t++)this.elements[t]*=e}mmult(e,t){void 0===t&&(t=new Tl);const n=this.elements,a=e.elements,i=t.elements,r=n[0],s=n[1],o=n[2],p=n[3],l=n[4],d=n[5],u=n[6],c=n[7],h=n[8],m=a[0],f=a[1],g=a[2],v=a[3],y=a[4],x=a[5],b=a[6],w=a[7],_=a[8];return i[0]=r*m+s*v+o*b,i[1]=r*f+s*y+o*w,i[2]=r*g+s*x+o*_,i[3]=p*m+l*v+d*b,i[4]=p*f+l*y+d*w,i[5]=p*g+l*x+d*_,i[6]=u*m+c*v+h*b,i[7]=u*f+c*y+h*w,i[8]=u*g+c*x+h*_,t}scale(e,t){void 0===t&&(t=new Tl);const n=this.elements,a=t.elements;for(let t=0;3!==t;t++)a[3*t+0]=e.x*n[3*t+0],a[3*t+1]=e.y*n[3*t+1],a[3*t+2]=e.z*n[3*t+2];return t}solve(e,t){void 0===t&&(t=new Ml);const n=[];let a,i;for(a=0;a<12;a++)n.push(0);for(a=0;a<3;a++)for(i=0;i<3;i++)n[a+4*i]=this.elements[a+3*i];n[3]=e.x,n[7]=e.y,n[11]=e.z;let r=3;const s=r;let o,p;do{if(a=s-r,0===n[a+4*a])for(i=a+1;i<s;i++)if(0!==n[a+4*i]){o=4;do{p=4-o,n[p+4*a]+=n[p+4*i]}while(--o);break}if(0!==n[a+4*a])for(i=a+1;i<s;i++){const e=n[a+4*i]/n[a+4*a];o=4;do{p=4-o,n[p+4*i]=p<=a?0:n[p+4*i]-n[p+4*a]*e}while(--o)}}while(--r);if(t.z=n[11]/n[10],t.y=(n[7]-n[6]*t.z)/n[5],t.x=(n[3]-n[2]*t.z-n[1]*t.y)/n[0],isNaN(t.x)||isNaN(t.y)||isNaN(t.z)||t.x===1/0||t.y===1/0||t.z===1/0)throw`Could not solve equation! Got x=[${t.toString()}], b=[${e.toString()}], A=[${this.toString()}]`;return t}e(e,t,n){if(void 0===n)return this.elements[t+3*e];this.elements[t+3*e]=n}copy(e){for(let t=0;t<e.elements.length;t++)this.elements[t]=e.elements[t];return this}toString(){let e="";for(let t=0;t<9;t++)e+=this.elements[t]+",";return e}reverse(e){void 0===e&&(e=new Tl);const t=El;let n,a;for(n=0;n<3;n++)for(a=0;a<3;a++)t[n+6*a]=this.elements[n+3*a];t[3]=1,t[9]=0,t[15]=0,t[4]=0,t[10]=1,t[16]=0,t[5]=0,t[11]=0,t[17]=1;let i=3;const r=i;let s,o;do{if(n=r-i,0===t[n+6*n])for(a=n+1;a<r;a++)if(0!==t[n+6*a]){s=6;do{o=6-s,t[o+6*n]+=t[o+6*a]}while(--s);break}if(0!==t[n+6*n])for(a=n+1;a<r;a++){const e=t[n+6*a]/t[n+6*n];s=6;do{o=6-s,t[o+6*a]=o<=n?0:t[o+6*a]-t[o+6*n]*e}while(--s)}}while(--i);n=2;do{a=n-1;do{const e=t[n+6*a]/t[n+6*n];s=6;do{o=6-s,t[o+6*a]=t[o+6*a]-t[o+6*n]*e}while(--s)}while(a--)}while(--n);n=2;do{const e=1/t[n+6*n];s=6;do{o=6-s,t[o+6*n]=t[o+6*n]*e}while(--s)}while(n--);n=2;do{a=2;do{if(o=t[3+a+6*n],isNaN(o)||o===1/0)throw`Could not reverse! A=[${this.toString()}]`;e.e(n,a,o)}while(a--)}while(n--);return e}setRotationFromQuaternion(e){const t=e.x,n=e.y,a=e.z,i=e.w,r=t+t,s=n+n,o=a+a,p=t*r,l=t*s,d=t*o,u=n*s,c=n*o,h=a*o,m=i*r,f=i*s,g=i*o,v=this.elements;return v[0]=1-(u+h),v[1]=l-g,v[2]=d+f,v[3]=l+g,v[4]=1-(p+h),v[5]=c-m,v[6]=d-f,v[7]=c+m,v[8]=1-(p+u),this}transpose(e){void 0===e&&(e=new Tl);const t=this.elements,n=e.elements;let a;return n[0]=t[0],n[4]=t[4],n[8]=t[8],a=t[1],n[1]=t[3],n[3]=a,a=t[2],n[2]=t[6],n[6]=a,a=t[5],n[5]=t[7],n[7]=a,e}}const El=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class Ml{constructor(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),this.x=e,this.y=t,this.z=n}cross(e,t){void 0===t&&(t=new Ml);const n=e.x,a=e.y,i=e.z,r=this.x,s=this.y,o=this.z;return t.x=s*i-o*a,t.y=o*n-r*i,t.z=r*a-s*n,t}set(e,t,n){return this.x=e,this.y=t,this.z=n,this}setZero(){this.x=this.y=this.z=0}vadd(e,t){if(!t)return new Ml(this.x+e.x,this.y+e.y,this.z+e.z);t.x=e.x+this.x,t.y=e.y+this.y,t.z=e.z+this.z}vsub(e,t){if(!t)return new Ml(this.x-e.x,this.y-e.y,this.z-e.z);t.x=this.x-e.x,t.y=this.y-e.y,t.z=this.z-e.z}crossmat(){return new Tl([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const e=this.x,t=this.y,n=this.z,a=Math.sqrt(e*e+t*t+n*n);if(a>0){const e=1/a;this.x*=e,this.y*=e,this.z*=e}else this.x=0,this.y=0,this.z=0;return a}unit(e){void 0===e&&(e=new Ml);const t=this.x,n=this.y,a=this.z;let i=Math.sqrt(t*t+n*n+a*a);return i>0?(i=1/i,e.x=t*i,e.y=n*i,e.z=a*i):(e.x=1,e.y=0,e.z=0),e}length(){const e=this.x,t=this.y,n=this.z;return Math.sqrt(e*e+t*t+n*n)}lengthSquared(){return this.dot(this)}distanceTo(e){const t=this.x,n=this.y,a=this.z,i=e.x,r=e.y,s=e.z;return Math.sqrt((i-t)*(i-t)+(r-n)*(r-n)+(s-a)*(s-a))}distanceSquared(e){const t=this.x,n=this.y,a=this.z,i=e.x,r=e.y,s=e.z;return(i-t)*(i-t)+(r-n)*(r-n)+(s-a)*(s-a)}scale(e,t){void 0===t&&(t=new Ml);const n=this.x,a=this.y,i=this.z;return t.x=e*n,t.y=e*a,t.z=e*i,t}vmul(e,t){return void 0===t&&(t=new Ml),t.x=e.x*this.x,t.y=e.y*this.y,t.z=e.z*this.z,t}addScaledVector(e,t,n){return void 0===n&&(n=new Ml),n.x=this.x+e*t.x,n.y=this.y+e*t.y,n.z=this.z+e*t.z,n}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}isZero(){return 0===this.x&&0===this.y&&0===this.z}negate(e){return void 0===e&&(e=new Ml),e.x=-this.x,e.y=-this.y,e.z=-this.z,e}tangents(e,t){const n=this.length();if(n>0){const a=Nl,i=1/n;a.set(this.x*i,this.y*i,this.z*i);const r=Cl;Math.abs(a.x)<.9?(r.set(1,0,0),a.cross(r,e)):(r.set(0,1,0),a.cross(r,e)),a.cross(e,t)}else e.set(1,0,0),t.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}lerp(e,t,n){const a=this.x,i=this.y,r=this.z;n.x=a+(e.x-a)*t,n.y=i+(e.y-i)*t,n.z=r+(e.z-r)*t}almostEquals(e,t){return void 0===t&&(t=1e-6),!(Math.abs(this.x-e.x)>t||Math.abs(this.y-e.y)>t||Math.abs(this.z-e.z)>t)}almostZero(e){return void 0===e&&(e=1e-6),!(Math.abs(this.x)>e||Math.abs(this.y)>e||Math.abs(this.z)>e)}isAntiparallelTo(e,t){return this.negate(Al),Al.almostEquals(e,t)}clone(){return new Ml(this.x,this.y,this.z)}}Ml.ZERO=new Ml(0,0,0),Ml.UNIT_X=new Ml(1,0,0),Ml.UNIT_Y=new Ml(0,1,0),Ml.UNIT_Z=new Ml(0,0,1);const Nl=new Ml,Cl=new Ml,Al=new Ml;class Il{constructor(e){void 0===e&&(e={}),this.lowerBound=new Ml,this.upperBound=new Ml,e.lowerBound&&this.lowerBound.copy(e.lowerBound),e.upperBound&&this.upperBound.copy(e.upperBound)}setFromPoints(e,t,n,a){const i=this.lowerBound,r=this.upperBound,s=n;i.copy(e[0]),s&&s.vmult(i,i),r.copy(i);for(let t=1;t<e.length;t++){let n=e[t];s&&(s.vmult(n,Rl),n=Rl),n.x>r.x&&(r.x=n.x),n.x<i.x&&(i.x=n.x),n.y>r.y&&(r.y=n.y),n.y<i.y&&(i.y=n.y),n.z>r.z&&(r.z=n.z),n.z<i.z&&(i.z=n.z)}return t&&(t.vadd(i,i),t.vadd(r,r)),a&&(i.x-=a,i.y-=a,i.z-=a,r.x+=a,r.y+=a,r.z+=a),this}copy(e){return this.lowerBound.copy(e.lowerBound),this.upperBound.copy(e.upperBound),this}clone(){return(new Il).copy(this)}extend(e){this.lowerBound.x=Math.min(this.lowerBound.x,e.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,e.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,e.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,e.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,e.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,e.upperBound.z)}overlaps(e){const t=this.lowerBound,n=this.upperBound,a=e.lowerBound,i=e.upperBound,r=a.x<=n.x&&n.x<=i.x||t.x<=i.x&&i.x<=n.x,s=a.y<=n.y&&n.y<=i.y||t.y<=i.y&&i.y<=n.y,o=a.z<=n.z&&n.z<=i.z||t.z<=i.z&&i.z<=n.z;return r&&s&&o}volume(){const e=this.lowerBound,t=this.upperBound;return(t.x-e.x)*(t.y-e.y)*(t.z-e.z)}contains(e){const t=this.lowerBound,n=this.upperBound,a=e.lowerBound,i=e.upperBound;return t.x<=a.x&&n.x>=i.x&&t.y<=a.y&&n.y>=i.y&&t.z<=a.z&&n.z>=i.z}getCorners(e,t,n,a,i,r,s,o){const p=this.lowerBound,l=this.upperBound;e.copy(p),t.set(l.x,p.y,p.z),n.set(l.x,l.y,p.z),a.set(p.x,l.y,l.z),i.set(l.x,p.y,l.z),r.set(p.x,l.y,p.z),s.set(p.x,p.y,l.z),o.copy(l)}toLocalFrame(e,t){const n=kl,a=n[0],i=n[1],r=n[2],s=n[3],o=n[4],p=n[5],l=n[6],d=n[7];this.getCorners(a,i,r,s,o,p,l,d);for(let t=0;8!==t;t++){const a=n[t];e.pointToLocal(a,a)}return t.setFromPoints(n)}toWorldFrame(e,t){const n=kl,a=n[0],i=n[1],r=n[2],s=n[3],o=n[4],p=n[5],l=n[6],d=n[7];this.getCorners(a,i,r,s,o,p,l,d);for(let t=0;8!==t;t++){const a=n[t];e.pointToWorld(a,a)}return t.setFromPoints(n)}overlapsRay(e){const{direction:t,from:n}=e,a=1/t.x,i=1/t.y,r=1/t.z,s=(this.lowerBound.x-n.x)*a,o=(this.upperBound.x-n.x)*a,p=(this.lowerBound.y-n.y)*i,l=(this.upperBound.y-n.y)*i,d=(this.lowerBound.z-n.z)*r,u=(this.upperBound.z-n.z)*r,c=Math.max(Math.max(Math.min(s,o),Math.min(p,l)),Math.min(d,u)),h=Math.min(Math.min(Math.max(s,o),Math.max(p,l)),Math.max(d,u));return!(h<0||c>h)}}const Rl=new Ml,kl=[new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml];class Dl{constructor(e,t,n,a){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===a&&(a=1),this.x=e,this.y=t,this.z=n,this.w=a}set(e,t,n,a){return this.x=e,this.y=t,this.z=n,this.w=a,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(e,t){const n=Math.sin(.5*t);return this.x=e.x*n,this.y=e.y*n,this.z=e.z*n,this.w=Math.cos(.5*t),this}toAxisAngle(e){void 0===e&&(e=new Ml),this.normalize();const t=2*Math.acos(this.w),n=Math.sqrt(1-this.w*this.w);return n<.001?(e.x=this.x,e.y=this.y,e.z=this.z):(e.x=this.x/n,e.y=this.y/n,e.z=this.z/n),[e,t]}setFromVectors(e,t){if(e.isAntiparallelTo(t)){const t=Pl,n=Ll;e.tangents(t,n),this.setFromAxisAngle(t,Math.PI)}else{const n=e.cross(t);this.x=n.x,this.y=n.y,this.z=n.z,this.w=Math.sqrt(e.length()**2*t.length()**2)+e.dot(t),this.normalize()}return this}mult(e,t){void 0===t&&(t=new Dl);const n=this.x,a=this.y,i=this.z,r=this.w,s=e.x,o=e.y,p=e.z,l=e.w;return t.x=n*l+r*s+a*p-i*o,t.y=a*l+r*o+i*s-n*p,t.z=i*l+r*p+n*o-a*s,t.w=r*l-n*s-a*o-i*p,t}inverse(e){void 0===e&&(e=new Dl);const t=this.x,n=this.y,a=this.z,i=this.w;this.conjugate(e);const r=1/(t*t+n*n+a*a+i*i);return e.x*=r,e.y*=r,e.z*=r,e.w*=r,e}conjugate(e){return void 0===e&&(e=new Dl),e.x=-this.x,e.y=-this.y,e.z=-this.z,e.w=this.w,e}normalize(){let e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===e?(this.x=0,this.y=0,this.z=0,this.w=0):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}normalizeFast(){const e=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return 0===e?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}vmult(e,t){void 0===t&&(t=new Ml);const n=e.x,a=e.y,i=e.z,r=this.x,s=this.y,o=this.z,p=this.w,l=p*n+s*i-o*a,d=p*a+o*n-r*i,u=p*i+r*a-s*n,c=-r*n-s*a-o*i;return t.x=l*p+c*-r+d*-o-u*-s,t.y=d*p+c*-s+u*-r-l*-o,t.z=u*p+c*-o+l*-s-d*-r,t}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}toEuler(e,t){let n,a,i;void 0===t&&(t="YZX");const r=this.x,s=this.y,o=this.z,p=this.w;if("YZX"!==t)throw new Error(`Euler order ${t} not supported yet.`);{const e=r*s+o*p;if(e>.499&&(n=2*Math.atan2(r,p),a=Math.PI/2,i=0),e<-.499&&(n=-2*Math.atan2(r,p),a=-Math.PI/2,i=0),void 0===n){const t=r*r,l=s*s,d=o*o;n=Math.atan2(2*s*p-2*r*o,1-2*l-2*d),a=Math.asin(2*e),i=Math.atan2(2*r*p-2*s*o,1-2*t-2*d)}}e.y=n,e.z=a,e.x=i}setFromEuler(e,t,n,a){void 0===a&&(a="XYZ");const i=Math.cos(e/2),r=Math.cos(t/2),s=Math.cos(n/2),o=Math.sin(e/2),p=Math.sin(t/2),l=Math.sin(n/2);return"XYZ"===a?(this.x=o*r*s+i*p*l,this.y=i*p*s-o*r*l,this.z=i*r*l+o*p*s,this.w=i*r*s-o*p*l):"YXZ"===a?(this.x=o*r*s+i*p*l,this.y=i*p*s-o*r*l,this.z=i*r*l-o*p*s,this.w=i*r*s+o*p*l):"ZXY"===a?(this.x=o*r*s-i*p*l,this.y=i*p*s+o*r*l,this.z=i*r*l+o*p*s,this.w=i*r*s-o*p*l):"ZYX"===a?(this.x=o*r*s-i*p*l,this.y=i*p*s+o*r*l,this.z=i*r*l-o*p*s,this.w=i*r*s+o*p*l):"YZX"===a?(this.x=o*r*s+i*p*l,this.y=i*p*s+o*r*l,this.z=i*r*l-o*p*s,this.w=i*r*s-o*p*l):"XZY"===a&&(this.x=o*r*s-i*p*l,this.y=i*p*s-o*r*l,this.z=i*r*l+o*p*s,this.w=i*r*s+o*p*l),this}clone(){return new Dl(this.x,this.y,this.z,this.w)}slerp(e,t,n){void 0===n&&(n=new Dl);const a=this.x,i=this.y,r=this.z,s=this.w;let o,p,l,d,u,c=e.x,h=e.y,m=e.z,f=e.w;return p=a*c+i*h+r*m+s*f,p<0&&(p=-p,c=-c,h=-h,m=-m,f=-f),1-p>1e-6?(o=Math.acos(p),l=Math.sin(o),d=Math.sin((1-t)*o)/l,u=Math.sin(t*o)/l):(d=1-t,u=t),n.x=d*a+u*c,n.y=d*i+u*h,n.z=d*r+u*m,n.w=d*s+u*f,n}integrate(e,t,n,a){void 0===a&&(a=new Dl);const i=e.x*n.x,r=e.y*n.y,s=e.z*n.z,o=this.x,p=this.y,l=this.z,d=this.w,u=.5*t;return a.x+=u*(i*d+r*l-s*p),a.y+=u*(r*d+s*o-i*l),a.z+=u*(s*d+i*p-r*o),a.w+=u*(-i*o-r*p-s*l),a}}const Pl=new Ml,Ll=new Ml;class Ol{constructor(e){void 0===e&&(e={}),this.id=Ol.idCounter++,this.type=e.type||0,this.boundingSphereRadius=0,this.collisionResponse=!e.collisionResponse||e.collisionResponse,this.collisionFilterGroup=void 0!==e.collisionFilterGroup?e.collisionFilterGroup:1,this.collisionFilterMask=void 0!==e.collisionFilterMask?e.collisionFilterMask:-1,this.material=e.material?e.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(e,t){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(e,t,n,a){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}Ol.idCounter=0,Ol.types={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class Bl{constructor(e){void 0===e&&(e={}),this.position=new Ml,this.quaternion=new Dl,e.position&&this.position.copy(e.position),e.quaternion&&this.quaternion.copy(e.quaternion)}pointToLocal(e,t){return Bl.pointToLocalFrame(this.position,this.quaternion,e,t)}pointToWorld(e,t){return Bl.pointToWorldFrame(this.position,this.quaternion,e,t)}vectorToWorldFrame(e,t){return void 0===t&&(t=new Ml),this.quaternion.vmult(e,t),t}static pointToLocalFrame(e,t,n,a){return void 0===a&&(a=new Ml),n.vsub(e,a),t.conjugate(Fl),Fl.vmult(a,a),a}static pointToWorldFrame(e,t,n,a){return void 0===a&&(a=new Ml),t.vmult(n,a),a.vadd(e,a),a}static vectorToWorldFrame(e,t,n){return void 0===n&&(n=new Ml),e.vmult(t,n),n}static vectorToLocalFrame(e,t,n,a){return void 0===a&&(a=new Ml),t.w*=-1,t.vmult(n,a),t.w*=-1,a}}const Fl=new Dl;class $l extends Ol{constructor(e){void 0===e&&(e={});const{vertices:t=[],faces:n=[],normals:a=[],axes:i,boundingSphereRadius:r}=e;super({type:Ol.types.CONVEXPOLYHEDRON}),this.vertices=t,this.faces=n,this.faceNormals=a,0===this.faceNormals.length&&this.computeNormals(),r?this.boundingSphereRadius=r:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=i?i.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const e=this.faces,t=this.vertices,n=this.uniqueEdges;n.length=0;const a=new Ml;for(let i=0;i!==e.length;i++){const r=e[i],s=r.length;for(let e=0;e!==s;e++){const i=(e+1)%s;t[r[e]].vsub(t[r[i]],a),a.normalize();let o=!1;for(let e=0;e!==n.length;e++)if(n[e].almostEquals(a)||n[e].almostEquals(a)){o=!0;break}o||n.push(a.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let e=0;e<this.faces.length;e++){for(let t=0;t<this.faces[e].length;t++)if(!this.vertices[this.faces[e][t]])throw new Error(`Vertex ${this.faces[e][t]} not found!`);const t=this.faceNormals[e]||new Ml;this.getFaceNormal(e,t),t.negate(t),this.faceNormals[e]=t;const n=this.vertices[this.faces[e][0]];if(t.dot(n)<0){console.error(`.faceNormals[${e}] = Vec3(${t.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let t=0;t<this.faces[e].length;t++)console.warn(`.vertices[${this.faces[e][t]}] = Vec3(${this.vertices[this.faces[e][t]].toString()})`)}}}getFaceNormal(e,t){const n=this.faces[e],a=this.vertices[n[0]],i=this.vertices[n[1]],r=this.vertices[n[2]];$l.computeNormal(a,i,r,t)}static computeNormal(e,t,n,a){const i=new Ml,r=new Ml;t.vsub(e,r),n.vsub(t,i),i.cross(r,a),a.isZero()||a.normalize()}clipAgainstHull(e,t,n,a,i,r,s,o,p){const l=new Ml;let d=-1,u=-Number.MAX_VALUE;for(let e=0;e<n.faces.length;e++){l.copy(n.faceNormals[e]),i.vmult(l,l);const t=l.dot(r);t>u&&(u=t,d=e)}const c=[];for(let e=0;e<n.faces[d].length;e++){const t=n.vertices[n.faces[d][e]],r=new Ml;r.copy(t),i.vmult(r,r),a.vadd(r,r),c.push(r)}d>=0&&this.clipFaceAgainstHull(r,e,t,c,s,o,p)}findSeparatingAxis(e,t,n,a,i,r,s,o){const p=new Ml,l=new Ml,d=new Ml,u=new Ml,c=new Ml,h=new Ml;let m=Number.MAX_VALUE;const f=this;if(f.uniqueAxes)for(let s=0;s!==f.uniqueAxes.length;s++){n.vmult(f.uniqueAxes[s],p);const o=f.testSepAxis(p,e,t,n,a,i);if(!1===o)return!1;o<m&&(m=o,r.copy(p))}else{const o=s?s.length:f.faces.length;for(let l=0;l<o;l++){const o=s?s[l]:l;p.copy(f.faceNormals[o]),n.vmult(p,p);const d=f.testSepAxis(p,e,t,n,a,i);if(!1===d)return!1;d<m&&(m=d,r.copy(p))}}if(e.uniqueAxes)for(let s=0;s!==e.uniqueAxes.length;s++){i.vmult(e.uniqueAxes[s],l);const o=f.testSepAxis(l,e,t,n,a,i);if(!1===o)return!1;o<m&&(m=o,r.copy(l))}else{const s=o?o.length:e.faces.length;for(let p=0;p<s;p++){const s=o?o[p]:p;l.copy(e.faceNormals[s]),i.vmult(l,l);const d=f.testSepAxis(l,e,t,n,a,i);if(!1===d)return!1;d<m&&(m=d,r.copy(l))}}for(let s=0;s!==f.uniqueEdges.length;s++){n.vmult(f.uniqueEdges[s],u);for(let s=0;s!==e.uniqueEdges.length;s++)if(i.vmult(e.uniqueEdges[s],c),u.cross(c,h),!h.almostZero()){h.normalize();const s=f.testSepAxis(h,e,t,n,a,i);if(!1===s)return!1;s<m&&(m=s,r.copy(h))}}return a.vsub(t,d),d.dot(r)>0&&r.negate(r),!0}testSepAxis(e,t,n,a,i,r){$l.project(this,e,n,a,Vl),$l.project(t,e,i,r,zl);const s=Vl[0],o=Vl[1],p=zl[0],l=zl[1];if(s<l||p<o)return!1;const d=s-l,u=p-o;return d<u?d:u}calculateLocalInertia(e,t){const n=new Ml,a=new Ml;this.computeLocalAABB(a,n);const i=n.x-a.x,r=n.y-a.y,s=n.z-a.z;t.x=1/12*e*(2*r*2*r+2*s*2*s),t.y=1/12*e*(2*i*2*i+2*s*2*s),t.z=1/12*e*(2*r*2*r+2*i*2*i)}getPlaneConstantOfFace(e){const t=this.faces[e],n=this.faceNormals[e],a=this.vertices[t[0]];return-n.dot(a)}clipFaceAgainstHull(e,t,n,a,i,r,s){const o=new Ml,p=new Ml,l=new Ml,d=new Ml,u=new Ml,c=new Ml,h=new Ml,m=new Ml,f=this,g=a,v=[];let y=-1,x=Number.MAX_VALUE;for(let t=0;t<f.faces.length;t++){o.copy(f.faceNormals[t]),n.vmult(o,o);const a=o.dot(e);a<x&&(x=a,y=t)}if(y<0)return;const b=f.faces[y];b.connectedFaces=[];for(let e=0;e<f.faces.length;e++)for(let t=0;t<f.faces[e].length;t++)-1!==b.indexOf(f.faces[e][t])&&e!==y&&-1===b.connectedFaces.indexOf(e)&&b.connectedFaces.push(e);const w=b.length;for(let e=0;e<w;e++){const a=f.vertices[b[e]],i=f.vertices[b[(e+1)%w]];a.vsub(i,p),l.copy(p),n.vmult(l,l),t.vadd(l,l),d.copy(this.faceNormals[y]),n.vmult(d,d),t.vadd(d,d),l.cross(d,u),u.negate(u),c.copy(a),n.vmult(c,c),t.vadd(c,c);const r=b.connectedFaces[e];h.copy(this.faceNormals[r]);const s=this.getPlaneConstantOfFace(r);m.copy(h),n.vmult(m,m);const o=s-m.dot(t);for(this.clipFaceAgainstPlane(g,v,m,o);g.length;)g.shift();for(;v.length;)g.push(v.shift())}h.copy(this.faceNormals[y]);const _=this.getPlaneConstantOfFace(y);m.copy(h),n.vmult(m,m);const S=_-m.dot(t);for(let e=0;e<g.length;e++){let t=m.dot(g[e])+S;if(t<=i&&(console.log(`clamped: depth=${t} to minDist=${i}`),t=i),t<=r){const n=g[e];if(t<=1e-6){const e={point:n,normal:m,depth:t};s.push(e)}}}}clipFaceAgainstPlane(e,t,n,a){let i,r;const s=e.length;if(s<2)return t;let o=e[e.length-1],p=e[0];i=n.dot(o)+a;for(let l=0;l<s;l++){if(p=e[l],r=n.dot(p)+a,i<0)if(r<0){const e=new Ml;e.copy(p),t.push(e)}else{const e=new Ml;o.lerp(p,i/(i-r),e),t.push(e)}else if(r<0){const e=new Ml;o.lerp(p,i/(i-r),e),t.push(e),t.push(p)}o=p,i=r}return t}computeWorldVertices(e,t){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new Ml);const n=this.vertices,a=this.worldVertices;for(let i=0;i!==this.vertices.length;i++)t.vmult(n[i],a[i]),e.vadd(a[i],a[i]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(e,t){const n=this.vertices;e.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),t.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let a=0;a<this.vertices.length;a++){const i=n[a];i.x<e.x?e.x=i.x:i.x>t.x&&(t.x=i.x),i.y<e.y?e.y=i.y:i.y>t.y&&(t.y=i.y),i.z<e.z?e.z=i.z:i.z>t.z&&(t.z=i.z)}}computeWorldFaceNormals(e){const t=this.faceNormals.length;for(;this.worldFaceNormals.length<t;)this.worldFaceNormals.push(new Ml);const n=this.faceNormals,a=this.worldFaceNormals;for(let i=0;i!==t;i++)e.vmult(n[i],a[i]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let e=0;const t=this.vertices;for(let n=0;n!==t.length;n++){const a=t[n].lengthSquared();a>e&&(e=a)}this.boundingSphereRadius=Math.sqrt(e)}calculateWorldAABB(e,t,n,a){const i=this.vertices;let r,s,o,p,l,d,u=new Ml;for(let n=0;n<i.length;n++){u.copy(i[n]),t.vmult(u,u),e.vadd(u,u);const a=u;(void 0===r||a.x<r)&&(r=a.x),(void 0===p||a.x>p)&&(p=a.x),(void 0===s||a.y<s)&&(s=a.y),(void 0===l||a.y>l)&&(l=a.y),(void 0===o||a.z<o)&&(o=a.z),(void 0===d||a.z>d)&&(d=a.z)}n.set(r,s,o),a.set(p,l,d)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(e){void 0===e&&(e=new Ml);const t=this.vertices;for(let n=0;n<t.length;n++)e.vadd(t[n],e);return e.scale(1/t.length,e),e}transformAllPoints(e,t){const n=this.vertices.length,a=this.vertices;if(t){for(let e=0;e<n;e++){const n=a[e];t.vmult(n,n)}for(let e=0;e<this.faceNormals.length;e++){const n=this.faceNormals[e];t.vmult(n,n)}}if(e)for(let t=0;t<n;t++){const n=a[t];n.vadd(e,n)}}pointIsInside(e){const t=this.vertices,n=this.faces,a=this.faceNormals,i=new Ml;this.getAveragePointLocal(i);for(let r=0;r<this.faces.length;r++){let s=a[r];const o=t[n[r][0]],p=new Ml;e.vsub(o,p);const l=s.dot(p),d=new Ml;i.vsub(o,d);const u=s.dot(d);if(l<0&&u>0||l>0&&u<0)return!1}return-1}static project(e,t,n,a,i){const r=e.vertices.length,s=Ul;let o=0,p=0;const l=Gl,d=e.vertices;l.setZero(),Bl.vectorToLocalFrame(n,a,t,s),Bl.pointToLocalFrame(n,a,l,l);const u=l.dot(s);p=o=d[0].dot(s);for(let e=1;e<r;e++){const t=d[e].dot(s);t>o&&(o=t),t<p&&(p=t)}if(p-=u,o-=u,p>o){const e=p;p=o,o=e}i[0]=o,i[1]=p}}const Vl=[],zl=[],Ul=(new Ml,new Ml),Gl=new Ml;class Wl extends Ol{constructor(e){super({type:Ol.types.BOX}),this.halfExtents=e,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const e=this.halfExtents.x,t=this.halfExtents.y,n=this.halfExtents.z,a=Ml,i=[new a(-e,-t,-n),new a(e,-t,-n),new a(e,t,-n),new a(-e,t,-n),new a(-e,-t,n),new a(e,-t,n),new a(e,t,n),new a(-e,t,n)],r=[new a(0,0,1),new a(0,1,0),new a(1,0,0)],s=new $l({vertices:i,faces:[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],axes:r});this.convexPolyhedronRepresentation=s,s.material=this.material}calculateLocalInertia(e,t){return void 0===t&&(t=new Ml),Wl.calculateInertia(this.halfExtents,e,t),t}static calculateInertia(e,t,n){const a=e;n.x=1/12*t*(2*a.y*2*a.y+2*a.z*2*a.z),n.y=1/12*t*(2*a.x*2*a.x+2*a.z*2*a.z),n.z=1/12*t*(2*a.y*2*a.y+2*a.x*2*a.x)}getSideNormals(e,t){const n=e,a=this.halfExtents;if(n[0].set(a.x,0,0),n[1].set(0,a.y,0),n[2].set(0,0,a.z),n[3].set(-a.x,0,0),n[4].set(0,-a.y,0),n[5].set(0,0,-a.z),void 0!==t)for(let e=0;e!==n.length;e++)t.vmult(n[e],n[e]);return n}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(e,t,n){const a=this.halfExtents,i=[[a.x,a.y,a.z],[-a.x,a.y,a.z],[-a.x,-a.y,a.z],[-a.x,-a.y,-a.z],[a.x,-a.y,-a.z],[a.x,a.y,-a.z],[-a.x,a.y,-a.z],[a.x,-a.y,a.z]];for(let a=0;a<i.length;a++)Hl.set(i[a][0],i[a][1],i[a][2]),t.vmult(Hl,Hl),e.vadd(Hl,Hl),n(Hl.x,Hl.y,Hl.z)}calculateWorldAABB(e,t,n,a){const i=this.halfExtents;ql[0].set(i.x,i.y,i.z),ql[1].set(-i.x,i.y,i.z),ql[2].set(-i.x,-i.y,i.z),ql[3].set(-i.x,-i.y,-i.z),ql[4].set(i.x,-i.y,-i.z),ql[5].set(i.x,i.y,-i.z),ql[6].set(-i.x,i.y,-i.z),ql[7].set(i.x,-i.y,i.z);const r=ql[0];t.vmult(r,r),e.vadd(r,r),a.copy(r),n.copy(r);for(let i=1;i<8;i++){const r=ql[i];t.vmult(r,r),e.vadd(r,r);const s=r.x,o=r.y,p=r.z;s>a.x&&(a.x=s),o>a.y&&(a.y=o),p>a.z&&(a.z=p),s<n.x&&(n.x=s),o<n.y&&(n.y=o),p<n.z&&(n.z=p)}}}const Hl=new Ml,ql=[new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml];class jl extends class{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;return void 0===n[e]&&(n[e]=[]),n[e].includes(t)||n[e].push(t),this}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return!(void 0===n[e]||!n[e].includes(t))}hasAnyEventListener(e){return void 0!==this._listeners&&void 0!==this._listeners[e]}removeEventListener(e,t){if(void 0===this._listeners)return this;const n=this._listeners;if(void 0===n[e])return this;const a=n[e].indexOf(t);return-1!==a&&n[e].splice(a,1),this}dispatchEvent(e){if(void 0===this._listeners)return this;const t=this._listeners[e.type];if(void 0!==t){e.target=this;for(let n=0,a=t.length;n<a;n++)t[n].call(this,e)}return this}}{constructor(e){void 0===e&&(e={}),super(),this.id=jl.idCounter++,this.index=-1,this.world=null,this.vlambda=new Ml,this.collisionFilterGroup="number"==typeof e.collisionFilterGroup?e.collisionFilterGroup:1,this.collisionFilterMask="number"==typeof e.collisionFilterMask?e.collisionFilterMask:-1,this.collisionResponse="boolean"!=typeof e.collisionResponse||e.collisionResponse,this.position=new Ml,this.previousPosition=new Ml,this.interpolatedPosition=new Ml,this.initPosition=new Ml,e.position&&(this.position.copy(e.position),this.previousPosition.copy(e.position),this.interpolatedPosition.copy(e.position),this.initPosition.copy(e.position)),this.velocity=new Ml,e.velocity&&this.velocity.copy(e.velocity),this.initVelocity=new Ml,this.force=new Ml;const t="number"==typeof e.mass?e.mass:0;this.mass=t,this.invMass=t>0?1/t:0,this.material=e.material||null,this.linearDamping="number"==typeof e.linearDamping?e.linearDamping:.01,this.type=t<=0?jl.STATIC:jl.DYNAMIC,typeof e.type==typeof jl.STATIC&&(this.type=e.type),this.allowSleep=void 0===e.allowSleep||e.allowSleep,this.sleepState=jl.AWAKE,this.sleepSpeedLimit=void 0!==e.sleepSpeedLimit?e.sleepSpeedLimit:.1,this.sleepTimeLimit=void 0!==e.sleepTimeLimit?e.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new Ml,this.quaternion=new Dl,this.initQuaternion=new Dl,this.previousQuaternion=new Dl,this.interpolatedQuaternion=new Dl,e.quaternion&&(this.quaternion.copy(e.quaternion),this.initQuaternion.copy(e.quaternion),this.previousQuaternion.copy(e.quaternion),this.interpolatedQuaternion.copy(e.quaternion)),this.angularVelocity=new Ml,e.angularVelocity&&this.angularVelocity.copy(e.angularVelocity),this.initAngularVelocity=new Ml,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new Ml,this.invInertia=new Ml,this.invInertiaWorld=new Tl,this.invMassSolve=0,this.invInertiaSolve=new Ml,this.invInertiaWorldSolve=new Tl,this.fixedRotation=void 0!==e.fixedRotation&&e.fixedRotation,this.angularDamping=void 0!==e.angularDamping?e.angularDamping:.01,this.linearFactor=new Ml(1,1,1),e.linearFactor&&this.linearFactor.copy(e.linearFactor),this.angularFactor=new Ml(1,1,1),e.angularFactor&&this.angularFactor.copy(e.angularFactor),this.aabb=new Il,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new Ml,this.isTrigger=Boolean(e.isTrigger),e.shape&&this.addShape(e.shape),this.updateMassProperties()}wakeUp(){const e=this.sleepState;this.sleepState=jl.AWAKE,this.wakeUpAfterNarrowphase=!1,e===jl.SLEEPING&&this.dispatchEvent(jl.wakeupEvent)}sleep(){this.sleepState=jl.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(e){if(this.allowSleep){const t=this.sleepState,n=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),a=this.sleepSpeedLimit**2;t===jl.AWAKE&&n<a?(this.sleepState=jl.SLEEPY,this.timeLastSleepy=e,this.dispatchEvent(jl.sleepyEvent)):t===jl.SLEEPY&&n>a?this.wakeUp():t===jl.SLEEPY&&e-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(jl.sleepEvent))}}updateSolveMassProperties(){this.sleepState===jl.SLEEPING||this.type===jl.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(e,t){return void 0===t&&(t=new Ml),e.vsub(this.position,t),this.quaternion.conjugate().vmult(t,t),t}vectorToLocalFrame(e,t){return void 0===t&&(t=new Ml),this.quaternion.conjugate().vmult(e,t),t}pointToWorldFrame(e,t){return void 0===t&&(t=new Ml),this.quaternion.vmult(e,t),t.vadd(this.position,t),t}vectorToWorldFrame(e,t){return void 0===t&&(t=new Ml),this.quaternion.vmult(e,t),t}addShape(e,t,n){const a=new Ml,i=new Dl;return t&&a.copy(t),n&&i.copy(n),this.shapes.push(e),this.shapeOffsets.push(a),this.shapeOrientations.push(i),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,e.body=this,this}removeShape(e){const t=this.shapes.indexOf(e);return-1===t?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(t,1),this.shapeOffsets.splice(t,1),this.shapeOrientations.splice(t,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,e.body=null,this)}updateBoundingRadius(){const e=this.shapes,t=this.shapeOffsets,n=e.length;let a=0;for(let i=0;i!==n;i++){const n=e[i];n.updateBoundingSphereRadius();const r=t[i].length(),s=n.boundingSphereRadius;r+s>a&&(a=r+s)}this.boundingRadius=a}updateAABB(){const e=this.shapes,t=this.shapeOffsets,n=this.shapeOrientations,a=e.length,i=Xl,r=Kl,s=this.quaternion,o=this.aabb,p=Yl;for(let l=0;l!==a;l++){const a=e[l];s.vmult(t[l],i),i.vadd(this.position,i),s.mult(n[l],r),a.calculateWorldAABB(i,r,p.lowerBound,p.upperBound),0===l?o.copy(p):o.extend(p)}this.aabbNeedsUpdate=!1}updateInertiaWorld(e){const t=this.invInertia;if(t.x!==t.y||t.y!==t.z||e){const e=Zl,n=Ql;e.setRotationFromQuaternion(this.quaternion),e.transpose(n),e.scale(t,e),e.mmult(n,this.invInertiaWorld)}}applyForce(e,t){if(void 0===t&&(t=new Ml),this.type!==jl.DYNAMIC)return;this.sleepState===jl.SLEEPING&&this.wakeUp();const n=Jl;t.cross(e,n),this.force.vadd(e,this.force),this.torque.vadd(n,this.torque)}applyLocalForce(e,t){if(void 0===t&&(t=new Ml),this.type!==jl.DYNAMIC)return;const n=ed,a=td;this.vectorToWorldFrame(e,n),this.vectorToWorldFrame(t,a),this.applyForce(n,a)}applyTorque(e){this.type===jl.DYNAMIC&&(this.sleepState===jl.SLEEPING&&this.wakeUp(),this.torque.vadd(e,this.torque))}applyImpulse(e,t){if(void 0===t&&(t=new Ml),this.type!==jl.DYNAMIC)return;this.sleepState===jl.SLEEPING&&this.wakeUp();const n=t,a=nd;a.copy(e),a.scale(this.invMass,a),this.velocity.vadd(a,this.velocity);const i=ad;n.cross(e,i),this.invInertiaWorld.vmult(i,i),this.angularVelocity.vadd(i,this.angularVelocity)}applyLocalImpulse(e,t){if(void 0===t&&(t=new Ml),this.type!==jl.DYNAMIC)return;const n=id,a=rd;this.vectorToWorldFrame(e,n),this.vectorToWorldFrame(t,a),this.applyImpulse(n,a)}updateMassProperties(){const e=sd;this.invMass=this.mass>0?1/this.mass:0;const t=this.inertia,n=this.fixedRotation;this.updateAABB(),e.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),Wl.calculateInertia(e,this.mass,t),this.invInertia.set(t.x>0&&!n?1/t.x:0,t.y>0&&!n?1/t.y:0,t.z>0&&!n?1/t.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(e,t){const n=new Ml;return e.vsub(this.position,n),this.angularVelocity.cross(n,t),this.velocity.vadd(t,t),t}integrate(e,t,n){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),this.type!==jl.DYNAMIC&&this.type!==jl.KINEMATIC||this.sleepState===jl.SLEEPING)return;const a=this.velocity,i=this.angularVelocity,r=this.position,s=this.force,o=this.torque,p=this.quaternion,l=this.invMass,d=this.invInertiaWorld,u=this.linearFactor,c=l*e;a.x+=s.x*c*u.x,a.y+=s.y*c*u.y,a.z+=s.z*c*u.z;const h=d.elements,m=this.angularFactor,f=o.x*m.x,g=o.y*m.y,v=o.z*m.z;i.x+=e*(h[0]*f+h[1]*g+h[2]*v),i.y+=e*(h[3]*f+h[4]*g+h[5]*v),i.z+=e*(h[6]*f+h[7]*g+h[8]*v),r.x+=a.x*e,r.y+=a.y*e,r.z+=a.z*e,p.integrate(this.angularVelocity,e,this.angularFactor,p),t&&(n?p.normalizeFast():p.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}jl.idCounter=0,jl.COLLIDE_EVENT_NAME="collide",jl.DYNAMIC=1,jl.STATIC=2,jl.KINEMATIC=4,jl.AWAKE=0,jl.SLEEPY=1,jl.SLEEPING=2,jl.wakeupEvent={type:"wakeup"},jl.sleepyEvent={type:"sleepy"},jl.sleepEvent={type:"sleep"};const Xl=new Ml,Kl=new Dl,Yl=new Il,Zl=new Tl,Ql=new Tl,Jl=(new Tl,new Ml),ed=new Ml,td=new Ml,nd=new Ml,ad=new Ml,id=new Ml,rd=new Ml,sd=new Ml;new Ml,new Ml,new Dl,new Ml,new Ml,new Ml,new Ml;class od{constructor(){this.rayFromWorld=new Ml,this.rayToWorld=new Ml,this.hitNormalWorld=new Ml,this.hitPointWorld=new Ml,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(e,t,n,a,i,r,s){this.rayFromWorld.copy(e),this.rayToWorld.copy(t),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(a),this.shape=i,this.body=r,this.distance=s}}let pd,ld,dd,ud,cd,hd,md;pd=Ol.types.SPHERE,ld=Ol.types.PLANE,dd=Ol.types.BOX,ud=Ol.types.CYLINDER,cd=Ol.types.CONVEXPOLYHEDRON,hd=Ol.types.HEIGHTFIELD,md=Ol.types.TRIMESH;class fd{get[pd](){return this._intersectSphere}get[ld](){return this._intersectPlane}get[dd](){return this._intersectBox}get[ud](){return this._intersectConvex}get[cd](){return this._intersectConvex}get[hd](){return this._intersectHeightfield}get[md](){return this._intersectTrimesh}constructor(e,t){void 0===e&&(e=new Ml),void 0===t&&(t=new Ml),this.from=e.clone(),this.to=t.clone(),this.direction=new Ml,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=fd.ANY,this.result=new od,this.hasHit=!1,this.callback=e=>{}}intersectWorld(e,t){return this.mode=t.mode||fd.ANY,this.result=t.result||new od,this.skipBackfaces=!!t.skipBackfaces,this.collisionFilterMask=void 0!==t.collisionFilterMask?t.collisionFilterMask:-1,this.collisionFilterGroup=void 0!==t.collisionFilterGroup?t.collisionFilterGroup:-1,this.checkCollisionResponse=void 0===t.checkCollisionResponse||t.checkCollisionResponse,t.from&&this.from.copy(t.from),t.to&&this.to.copy(t.to),this.callback=t.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(gd),vd.length=0,e.broadphase.aabbQuery(e,gd,vd),this.intersectBodies(vd),this.hasHit}intersectBody(e,t){t&&(this.result=t,this.updateDirection());const n=this.checkCollisionResponse;if(n&&!e.collisionResponse)return;if(0==(this.collisionFilterGroup&e.collisionFilterMask)||0==(e.collisionFilterGroup&this.collisionFilterMask))return;const a=bd,i=wd;for(let t=0,r=e.shapes.length;t<r;t++){const r=e.shapes[t];if((!n||r.collisionResponse)&&(e.quaternion.mult(e.shapeOrientations[t],i),e.quaternion.vmult(e.shapeOffsets[t],a),a.vadd(e.position,a),this.intersectShape(r,i,a,e),this.result.shouldStop))break}}intersectBodies(e,t){t&&(this.result=t,this.updateDirection());for(let t=0,n=e.length;!this.result.shouldStop&&t<n;t++)this.intersectBody(e[t])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(e,t,n,a){const i=function(e,t,n){n.vsub(e,Ud);const a=Ud.dot(t);return t.scale(a,Gd),Gd.vadd(e,Gd),n.distanceTo(Gd)}(this.from,this.direction,n);if(i>e.boundingSphereRadius)return;const r=this[e.type];r&&r.call(this,e,t,n,a,e)}_intersectBox(e,t,n,a,i){return this._intersectConvex(e.convexPolyhedronRepresentation,t,n,a,i)}_intersectPlane(e,t,n,a,i){const r=this.from,s=this.to,o=this.direction,p=new Ml(0,0,1);t.vmult(p,p);const l=new Ml;r.vsub(n,l);const d=l.dot(p);if(s.vsub(n,l),d*l.dot(p)>0)return;if(r.distanceTo(s)<d)return;const u=p.dot(o);if(Math.abs(u)<this.precision)return;const c=new Ml,h=new Ml,m=new Ml;r.vsub(n,c);const f=-p.dot(c)/u;o.scale(f,h),r.vadd(h,m),this.reportIntersection(p,m,i,a,-1)}getAABB(e){const{lowerBound:t,upperBound:n}=e,a=this.to,i=this.from;t.x=Math.min(a.x,i.x),t.y=Math.min(a.y,i.y),t.z=Math.min(a.z,i.z),n.x=Math.max(a.x,i.x),n.y=Math.max(a.y,i.y),n.z=Math.max(a.z,i.z)}_intersectHeightfield(e,t,n,a,i){e.data,e.elementSize;const r=Cd;r.from.copy(this.from),r.to.copy(this.to),Bl.pointToLocalFrame(n,t,r.from,r.from),Bl.pointToLocalFrame(n,t,r.to,r.to),r.updateDirection();const s=Ad;let o,p,l,d;o=p=0,l=d=e.data.length-1;const u=new Il;r.getAABB(u),e.getIndexOfPosition(u.lowerBound.x,u.lowerBound.y,s,!0),o=Math.max(o,s[0]),p=Math.max(p,s[1]),e.getIndexOfPosition(u.upperBound.x,u.upperBound.y,s,!0),l=Math.min(l,s[0]+1),d=Math.min(d,s[1]+1);for(let s=o;s<l;s++)for(let o=p;o<d;o++){if(this.result.shouldStop)return;if(e.getAabbAtIndex(s,o,u),u.overlapsRay(r)){if(e.getConvexTrianglePillar(s,o,!1),Bl.pointToWorldFrame(n,t,e.pillarOffset,Nd),this._intersectConvex(e.pillarConvex,t,Nd,a,i,Md),this.result.shouldStop)return;e.getConvexTrianglePillar(s,o,!0),Bl.pointToWorldFrame(n,t,e.pillarOffset,Nd),this._intersectConvex(e.pillarConvex,t,Nd,a,i,Md)}}}_intersectSphere(e,t,n,a,i){const r=this.from,s=this.to,o=e.radius,p=(s.x-r.x)**2+(s.y-r.y)**2+(s.z-r.z)**2,l=2*((s.x-r.x)*(r.x-n.x)+(s.y-r.y)*(r.y-n.y)+(s.z-r.z)*(r.z-n.z)),d=l**2-4*p*((r.x-n.x)**2+(r.y-n.y)**2+(r.z-n.z)**2-o**2),u=Id,c=Rd;if(!(d<0))if(0===d)r.lerp(s,d,u),u.vsub(n,c),c.normalize(),this.reportIntersection(c,u,i,a,-1);else{const e=(-l-Math.sqrt(d))/(2*p),t=(-l+Math.sqrt(d))/(2*p);if(e>=0&&e<=1&&(r.lerp(s,e,u),u.vsub(n,c),c.normalize(),this.reportIntersection(c,u,i,a,-1)),this.result.shouldStop)return;t>=0&&t<=1&&(r.lerp(s,t,u),u.vsub(n,c),c.normalize(),this.reportIntersection(c,u,i,a,-1))}}_intersectConvex(e,t,n,a,i,r){const s=kd,o=Dd,p=r&&r.faceList||null,l=e.faces,d=e.vertices,u=e.faceNormals,c=this.direction,h=this.from,m=this.to,f=h.distanceTo(m),g=p?p.length:l.length,v=this.result;for(let e=0;!v.shouldStop&&e<g;e++){const r=p?p[e]:e,m=l[r],g=u[r],y=t,x=n;o.copy(d[m[0]]),y.vmult(o,o),o.vadd(x,o),o.vsub(h,o),y.vmult(g,s);const b=c.dot(s);if(Math.abs(b)<this.precision)continue;const w=s.dot(o)/b;if(!(w<0)){c.scale(w,_d),_d.vadd(h,_d),Sd.copy(d[m[0]]),y.vmult(Sd,Sd),x.vadd(Sd,Sd);for(let e=1;!v.shouldStop&&e<m.length-1;e++){Td.copy(d[m[e]]),Ed.copy(d[m[e+1]]),y.vmult(Td,Td),y.vmult(Ed,Ed),x.vadd(Td,Td),x.vadd(Ed,Ed);const t=_d.distanceTo(h);!fd.pointInTriangle(_d,Sd,Td,Ed)&&!fd.pointInTriangle(_d,Td,Sd,Ed)||t>f||this.reportIntersection(s,_d,i,a,r)}}}}_intersectTrimesh(e,t,n,a,i,r){const s=Pd,o=Vd,p=zd,l=Dd,d=Ld,u=Od,c=Bd,h=$d,m=Fd,f=e.indices;e.vertices;const g=this.from,v=this.to,y=this.direction;p.position.copy(n),p.quaternion.copy(t),Bl.vectorToLocalFrame(n,t,y,d),Bl.pointToLocalFrame(n,t,g,u),Bl.pointToLocalFrame(n,t,v,c),c.x*=e.scale.x,c.y*=e.scale.y,c.z*=e.scale.z,u.x*=e.scale.x,u.y*=e.scale.y,u.z*=e.scale.z,c.vsub(u,d),d.normalize();const x=u.distanceSquared(c);e.tree.rayQuery(this,p,o);for(let r=0,p=o.length;!this.result.shouldStop&&r!==p;r++){const p=o[r];e.getNormal(p,s),e.getVertex(f[3*p],Sd),Sd.vsub(u,l);const c=d.dot(s),g=s.dot(l)/c;if(g<0)continue;d.scale(g,_d),_d.vadd(u,_d),e.getVertex(f[3*p+1],Td),e.getVertex(f[3*p+2],Ed);const v=_d.distanceSquared(u);!fd.pointInTriangle(_d,Td,Sd,Ed)&&!fd.pointInTriangle(_d,Sd,Td,Ed)||v>x||(Bl.vectorToWorldFrame(t,s,m),Bl.pointToWorldFrame(n,t,_d,h),this.reportIntersection(m,h,i,a,p))}o.length=0}reportIntersection(e,t,n,a,i){const r=this.from,s=this.to,o=r.distanceTo(t),p=this.result;if(!(this.skipBackfaces&&e.dot(this.direction)>0))switch(p.hitFaceIndex=void 0!==i?i:-1,this.mode){case fd.ALL:this.hasHit=!0,p.set(r,s,e,t,n,a,o),p.hasHit=!0,this.callback(p);break;case fd.CLOSEST:(o<p.distance||!p.hasHit)&&(this.hasHit=!0,p.hasHit=!0,p.set(r,s,e,t,n,a,o));break;case fd.ANY:this.hasHit=!0,p.hasHit=!0,p.set(r,s,e,t,n,a,o),p.shouldStop=!0}}static pointInTriangle(e,t,n,a){a.vsub(t,Ud),n.vsub(t,yd),e.vsub(t,xd);const i=Ud.dot(Ud),r=Ud.dot(yd),s=Ud.dot(xd),o=yd.dot(yd),p=yd.dot(xd);let l,d;return(l=o*s-r*p)>=0&&(d=i*p-r*s)>=0&&l+d<i*o-r*r}}fd.CLOSEST=1,fd.ANY=2,fd.ALL=4;const gd=new Il,vd=[],yd=new Ml,xd=new Ml,bd=new Ml,wd=new Dl,_d=new Ml,Sd=new Ml,Td=new Ml,Ed=new Ml;new Ml,new od;const Md={faceList:[0]},Nd=new Ml,Cd=new fd,Ad=[],Id=new Ml,Rd=new Ml,kd=new Ml,Dd=(new Ml,new Ml,new Ml),Pd=new Ml,Ld=new Ml,Od=new Ml,Bd=new Ml,Fd=new Ml,$d=new Ml;new Il;const Vd=[],zd=new Bl,Ud=new Ml,Gd=new Ml;class Wd{static defaults(e,t){void 0===e&&(e={});for(let n in t)n in e||(e[n]=t[n]);return e}}class Hd{constructor(e,t,n){void 0===n&&(n={}),n=Wd.defaults(n,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=e,this.bodyB=t,this.id=Hd.idCounter++,this.collideConnected=n.collideConnected,n.wakeUpBodies&&(e&&e.wakeUp(),t&&t.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const e=this.equations;for(let t=0;t<e.length;t++)e[t].enabled=!0}disable(){const e=this.equations;for(let t=0;t<e.length;t++)e[t].enabled=!1}}Hd.idCounter=0;class qd{constructor(){this.spatial=new Ml,this.rotational=new Ml}multiplyElement(e){return e.spatial.dot(this.spatial)+e.rotational.dot(this.rotational)}multiplyVectors(e,t){return e.dot(this.spatial)+t.dot(this.rotational)}}class jd{constructor(e,t,n,a){void 0===n&&(n=-1e6),void 0===a&&(a=1e6),this.id=jd.idCounter++,this.minForce=n,this.maxForce=a,this.bi=e,this.bj=t,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new qd,this.jacobianElementB=new qd,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(e,t,n){const a=t,i=e,r=n;this.a=4/(r*(1+4*a)),this.b=4*a/(1+4*a),this.eps=4/(r*r*i*(1+4*a))}computeB(e,t,n){const a=this.computeGW();return-this.computeGq()*e-a*t-this.computeGiMf()*n}computeGq(){const e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,a=this.bj,i=n.position,r=a.position;return e.spatial.dot(i)+t.spatial.dot(r)}computeGW(){const e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,a=this.bj,i=n.velocity,r=a.velocity,s=n.angularVelocity,o=a.angularVelocity;return e.multiplyVectors(i,s)+t.multiplyVectors(r,o)}computeGWlambda(){const e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,a=this.bj,i=n.vlambda,r=a.vlambda,s=n.wlambda,o=a.wlambda;return e.multiplyVectors(i,s)+t.multiplyVectors(r,o)}computeGiMf(){const e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,a=this.bj,i=n.force,r=n.torque,s=a.force,o=a.torque,p=n.invMassSolve,l=a.invMassSolve;return i.scale(p,Xd),s.scale(l,Kd),n.invInertiaWorldSolve.vmult(r,Yd),a.invInertiaWorldSolve.vmult(o,Zd),e.multiplyVectors(Xd,Yd)+t.multiplyVectors(Kd,Zd)}computeGiMGt(){const e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,a=this.bj,i=n.invMassSolve,r=a.invMassSolve,s=n.invInertiaWorldSolve,o=a.invInertiaWorldSolve;let p=i+r;return s.vmult(e.rotational,Qd),p+=Qd.dot(e.rotational),o.vmult(t.rotational,Qd),p+=Qd.dot(t.rotational),p}addToWlambda(e){const t=this.jacobianElementA,n=this.jacobianElementB,a=this.bi,i=this.bj,r=Jd;a.vlambda.addScaledVector(a.invMassSolve*e,t.spatial,a.vlambda),i.vlambda.addScaledVector(i.invMassSolve*e,n.spatial,i.vlambda),a.invInertiaWorldSolve.vmult(t.rotational,r),a.wlambda.addScaledVector(e,r,a.wlambda),i.invInertiaWorldSolve.vmult(n.rotational,r),i.wlambda.addScaledVector(e,r,i.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}jd.idCounter=0;const Xd=new Ml,Kd=new Ml,Yd=new Ml,Zd=new Ml,Qd=new Ml,Jd=new Ml;new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml;class eu{constructor(e,t,n){n=Wd.defaults(n,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=eu.idCounter++,this.materials=[e,t],this.friction=n.friction,this.restitution=n.restitution,this.contactEquationStiffness=n.contactEquationStiffness,this.contactEquationRelaxation=n.contactEquationRelaxation,this.frictionEquationStiffness=n.frictionEquationStiffness,this.frictionEquationRelaxation=n.frictionEquationRelaxation}}eu.idCounter=0;class tu{constructor(e){void 0===e&&(e={});let t="";"string"==typeof e&&(t=e,e={}),this.name=t,this.id=tu.idCounter++,this.friction=void 0!==e.friction?e.friction:-1,this.restitution=void 0!==e.restitution?e.restitution:-1}}tu.idCounter=0,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new fd,new Ml,new Ml,new Ml,new Ml(1,0,0),new Ml(0,1,0),new Ml(0,0,1),new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Il,new Ml,new Il,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Il,new Ml,new Bl,new Il,jl.STATIC,Ol.types.SPHERE,Ol.types.SPHERE,Ol.types.PLANE,Ol.types.BOX,Ol.types.BOX,Ol.types.SPHERE,Ol.types.BOX,Ol.types.PLANE,Ol.types.BOX,Ol.types.CONVEXPOLYHEDRON,Ol.types.SPHERE,Ol.types.CONVEXPOLYHEDRON,Ol.types.PLANE,Ol.types.CONVEXPOLYHEDRON,Ol.types.BOX,Ol.types.CONVEXPOLYHEDRON,Ol.types.SPHERE,Ol.types.HEIGHTFIELD,Ol.types.BOX,Ol.types.HEIGHTFIELD,Ol.types.CONVEXPOLYHEDRON,Ol.types.HEIGHTFIELD,Ol.types.PARTICLE,Ol.types.SPHERE,Ol.types.PLANE,Ol.types.PARTICLE,Ol.types.BOX,Ol.types.PARTICLE,Ol.types.PARTICLE,Ol.types.CONVEXPOLYHEDRON,Ol.types.CYLINDER,Ol.types.SPHERE,Ol.types.CYLINDER,Ol.types.PLANE,Ol.types.CYLINDER,Ol.types.BOX,Ol.types.CYLINDER,Ol.types.CONVEXPOLYHEDRON,Ol.types.CYLINDER,Ol.types.HEIGHTFIELD,Ol.types.CYLINDER,Ol.types.PARTICLE,Ol.types.CYLINDER,Ol.types.SPHERE,Ol.types.TRIMESH,Ol.types.PLANE,Ol.types.TRIMESH,new Ml,new Ml,new Ml,new Ml,new Ml,new Dl,new Dl,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Il,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Dl,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Ml,new Il,new fd;const nu=globalThis.performance||{};if(!nu.now){let e=Date.now();nu.timing&&nu.timing.navigationStart&&(e=nu.timing.navigationStart),nu.now=()=>Date.now()-e}new Ml,jl.COLLIDE_EVENT_NAME,Wp.UP,_l.L.scene,Wp.b$;const au=new Gp;au.domElement.style.position="absolute",au.domElement.style.top="0px",au.domElement.style.right="160px",au.domElement.style.left="unset",document.body.appendChild(au.domElement),Sl.y,_l.L.screen,Sl.K,Sl.y,_l.L.camera,Sl.K;var iu=n(5262);const ru={},su={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ou(e,t){if(!(e in ru)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete ru[e]}),!1),1===e?n.getContext("webgl",su)||n.getContext("experimental-webgl",su):n.getContext("webgl2",su)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;ru[e]=n}const n=ru[e];return null==n||n.isContextLost()?(delete ru[e],ou(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),ru[e])}var pu,lu,du;function uu(e,t){return[t,e]}function cu(e){const t=iu.util.sizeFromShape(e),n=Math.ceil(t/4);return iu.util.sizeToSquarishShape(n)}function hu(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function mu(e,t){const n=e;let a,i,r,s,o,p,l,d,u,c;return 2===(0,iu.env)().getNumber("WEBGL_VERSION")?(a=n.R32F,i=n.R16F,r=n.RGBA16F,s=n.RGBA32F,o=n.RED,l=4,d=1,u=n.HALF_FLOAT,c=n.FLOAT,p=n.RGBA8):(a=e.RGBA,i=e.RGBA,r=e.RGBA,s=n.RGBA,o=e.RGBA,l=4,d=4,u=null!=t?t.HALF_FLOAT_OES:null,c=e.FLOAT,p=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:s,textureFormatFloat:o,downloadTextureFormat:p,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:u,textureTypeFloat:c}}function fu(e,t){const n=t();return(0,iu.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function gu(e){return!!((0,iu.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function vu(e,t){return Eu(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(pu||(pu={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(lu||(lu={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(du||(du={}));const yu=/ERROR: [0-9]+:([0-9]+):/g;function xu(e,t){if(fu(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function bu(e,t,n,a,i,r,s){const o=e.getAttribLocation(t,n);return-1!==o&&(fu(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),fu(e,(()=>e.vertexAttribPointer(o,i,e.FLOAT,!1,r,s))),fu(e,(()=>e.enableVertexAttribArray(o))),!0)}function wu(e,t,n,a){fu(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),fu(e,(()=>e.activeTexture(e.TEXTURE0+n))),fu(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),fu(e,(()=>e.uniform1i(n,a)))}function _u(e,t,n){fu(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),fu(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function Su(e,t){fu(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),fu(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function Tu(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function Eu(e,t,n){const a=fu(e,(()=>t()));if(null==a)throw new Error(n);return a}function Mu(e,t=2){return iu.util.sizeFromShape(e.slice(0,e.length-t))}function Nu(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Cu(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Mu(e),...Nu(e)]),t}function Au(e){return e%2==0}function Iu(e,t){if(e=e.slice(-2),t=t.slice(-2),iu.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],a=t.slice(-1)[0];if(n===a)return!0;if(Au(n)&&Au(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Au(e[0])&&Au(t[0])}let Ru,ku;function Du(e,t){return null!=e.getExtension(t)}function Pu(e){try{if(null!=ou(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function Lu(e){const t=mu(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),i}function Ou(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&iu.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const Bu=(0,iu.env)();function Fu(){let e,t,n,a,i,r,s,o,p,l;return 2===(0,iu.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",i="texture",r="outputColor",s="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",p="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",i="texture2D",r="gl_FragColor",s="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",p="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:i,output:r,defineOutput:s,defineSpecialNaN:o,defineSpecialInf:p,defineRound:l}}function $u(e,t,n="index"){const a=iu.util.computeStrides(t);return a.map(((t,i)=>`int ${e[i]} = ${n} / ${t}; ${i===a.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${t}`:`index -= ${e[i]} * ${t}`};`)).join("")}function Vu(e,t,n="index"){const a=iu.util.computeStrides(t);return a.map(((t,i)=>`int ${e[i]} = ${n} / outShapeStrides[${i}]; ${i===a.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * outShapeStrides[${i}]`:`index -= ${e[i]} * outShapeStrides[${i}]`};`)).join("")}function zu(e){const t=iu.util.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Bu.registerFlag("HAS_WEBGL",(()=>Bu.getNumber("WEBGL_VERSION")>0)),Bu.registerFlag("WEBGL_VERSION",(()=>Pu(2)?2:Pu(1)?1:0)),Bu.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Bu.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Bu.get("WEBGL_VERSION"))),Bu.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Bu.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Bu.registerFlag("WEBGL_PACK",(()=>Bu.getBool("HAS_WEBGL"))),Bu.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Bu.getBool("WEBGL_PACK"))),Bu.registerFlag("WEBGL_PACK_CLIP",(()=>Bu.getBool("WEBGL_PACK"))),Bu.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>Bu.getBool("WEBGL_PACK"))),Bu.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Bu.getBool("WEBGL_PACK"))),Bu.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Bu.getBool("WEBGL_PACK"))),Bu.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Bu.getBool("WEBGL_PACK"))),Bu.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Bu.getBool("WEBGL_PACK"))),Bu.registerFlag("WEBGL_PACK_REDUCE",(()=>Bu.getBool("WEBGL_PACK"))),Bu.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Bu.getBool("WEBGL_PACK"))),Bu.registerFlag("WEBGL_CONV_IM2COL",(()=>Bu.getBool("WEBGL_PACK"))),Bu.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==Ru){const t=ou(e);Ru=t.getParameter(t.MAX_TEXTURE_SIZE)}return Ru}(Bu.getNumber("WEBGL_VERSION")))),Bu.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==ku){const t=ou(e);ku=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ku)}(Bu.getNumber("WEBGL_VERSION")))),Bu.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=Bu.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=ou(e);return t=Du(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Du(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),Bu.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Bu.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!iu.device_util.isMobile())),Bu.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=ou(e);if(1===e){if(!Du(t,"OES_texture_float"))return!1}else if(!Du(t,"EXT_color_buffer_float"))return!1;return Lu(t)}(Bu.getNumber("WEBGL_VERSION")))),Bu.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Bu.getBool("WEBGL_FORCE_F16_TEXTURES")&&Bu.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Bu.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=ou(e);if(1!==e){if(Du(t,"EXT_color_buffer_float"))return Lu(t);const e="EXT_color_buffer_half_float";if(Du(t,e)){const n=t.getExtension(e);return function(e,t){const n=mu(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(i),r}(t,n)}return!1}return!!Du(t,"OES_texture_float")&&!!Du(t,"WEBGL_color_buffer_float")&&Lu(t)}(Bu.getNumber("WEBGL_VERSION")))),Bu.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=Bu.getNumber("WEBGL_VERSION"))&&null!=ou(e).fenceSync;var e})),Bu.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Bu.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Bu.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),Bu.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>iu.device_util.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),Bu.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),Bu.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),Bu.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),Bu.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const Uu="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Gu}=iu.backend_util;function Wu(e,t,n){const a=[];if(e.forEach((e=>{const t=iu.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=ec(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const i=a.join("\n"),r=e.map((e=>function(e,t,n=!1,a){let i="";i+=n?qu(e,a):Hu(e,a);const r=e.shapeInfo.logicalShape,s=t.logicalShape;return r.length<=s.length&&(i+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),i="get"+a+"AtOutCoords",r=e.shapeInfo.logicalShape.length,s=t.logicalShape.length,o=Gu(e.shapeInfo.logicalShape,t.logicalShape),p=Ju(s),l=s-r;let d;const u=["x","y","z","w","u","v"];d=0===r?"":s<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${u[e+l]} = 0;`)).join("\n");let c="";c=s<2&&r>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${u[t+l]}`)).join(", ");let h="return outputValue;";const m=1===iu.util.sizeFromShape(e.shapeInfo.logicalShape),f=1===iu.util.sizeFromShape(t.logicalShape);if(1!==r||m||f){if(m&&!f)h=1===s?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=r-2,t=r-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?h="return vec4(outputValue.x);":o.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${i}() {\n      ${p} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${a}(${c});\n      ${h}\n    }\n  `}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),i="get"+a+"AtOutCoords",r=t.texShape,s=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,p=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===p&&null==e.shapeInfo.flatOffset&&iu.util.arraysEqual(s,r))return`\n      float ${i}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=Ju(p),d=Gu(e.shapeInfo.logicalShape,t.logicalShape),u=p-o;let c;const h=["x","y","z","w","u","v"];c=0===o?"":p<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let m="";return m=p<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", "),`\n    float ${i}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      return get${a}(${m});\n    }\n  `}(e,t)),i}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),s=t.texShape,o=Fu(),p=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,d,u=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${ju}\n    ${Xu}\n    ${Ku}\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===a[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${a[1]}.0);\n      }\n    `:1===a[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${a[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(iu.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;const i=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(e[2]/2),r=i*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(e[e.length-1]/2),r=i*Math.ceil(e[e.length-2]/2);let s=r,o="",p="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],o=`\n      int b${t} = index / ${s};\n      index -= b${t} * ${s};\n    `+o,p=`b${t}, `+p;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec${e.length}(${p});\n    }\n  `}(e,t,n)}}(t.logicalShape,s,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return iu.util.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${Vu(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const a=$u(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${Vu(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const a=$u(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=$u(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=$u(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,s,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(u+=Yu),[u,p,d,i,l,r,n.userCode].join("\n")}function Hu(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${a}() {return ${n};}`;const[i,r]=e.shapeInfo.texShape;if(1===i&&1===r)return`\n      float ${a}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const s=Zu(n);if(t)return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,p]=e.shapeInfo.texShape;return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${o}, ${p}, ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${a}(int index) {\n        ${Qu(e)}\n      }\n    `;const i=e.shapeInfo.texShape,r=i[0],s=i[1];if(1===s&&1===r)return`\n      float ${a}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Zu(n);return 1===s?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${r}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===r?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${r}, ${s}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),r=e.shapeInfo.texShape;if(null!=r&&iu.util.arraysEqual(n,r)){if(t)return`\n      float ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `;const e=r[0];return`\n    float ${i}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${r[1]}.0, ${e}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `}const{newShape:s,keptDims:o}=iu.util.squeezeShape(n),p=s;if(p.length<n.length){const n=["row","col"];return`\n      ${Hu(tc(e,p),t)}\n      float ${i}(int row, int col) {\n        return ${i}(${nc(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${i}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Qu(e)}\n      }\n    `;const l=r[0],d=r[1],u=Zu(a);return 1===d?t?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${u}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${u}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `:1===l?t?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${u}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${u}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `:t?`\n      float ${i}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${u};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n  float ${i}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${u};\n    vec2 uv = uvFromFlat(${l}, ${d}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),r=n[1]*n[2],s=n[2],{newShape:o,keptDims:p}=iu.util.squeezeShape(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${Hu(tc(e,l),t)}\n        float ${i}(int row, int col, int depth) {\n          return ${i}(${nc(n,p)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${r}, ${s}, 1)));\n        ${Qu(e)}\n      }\n    `;const d=e.shapeInfo.texShape,u=d[0],c=d[1],h=e.shapeInfo.flatOffset;if(c===r&&null==h)return t?`\n      float ${i}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${i}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${c}.0, ${u}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(c===s&&null==h)return t?`\n      float ${i}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${i}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${u}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const m=Zu(a);return t?`\n    float ${i}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * ${r} + col * ${s} + depth + ${m};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `:`\n      float ${i}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r} + col * ${s} + depth + ${m};\n        vec2 uv = uvFromFlat(${u}, ${c}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),r=n[3],s=n[2]*r,o=n[1]*s,{newShape:p,keptDims:l}=iu.util.squeezeShape(n);if(p.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${Hu(tc(e,p),t)}\n      float ${i}(int row, int col, int depth, int depth2) {\n        return ${i}(${nc(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${s}, ${r}, 1)));\n        ${Qu(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,u=e.shapeInfo.texShape,c=u[0],h=u[1],m=`int stride2 = ${a}Shape[3];`,f=`int stride1 = ${a}Shape[2] * stride2;`,g=`int stride0 = ${a}Shape[1] * stride1;`;if(h===o&&null==d)return t?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${f}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${c}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(h===r&&null==d)return t?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${c}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;const v=Zu(a);return t?`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${f}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${v});\n      return sampleTexture(${a}, uv);\n    }\n  `:`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} +\n          depth * ${r} + depth2;\n      vec2 uv = uvFromFlat(${c}, ${h}, index + ${v});\n      return sampleTexture(${a}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t[4],r=t[3]*i,s=t[2]*r,o=t[1]*s,{newShape:p,keptDims:l}=iu.util.squeezeShape(t);if(p.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Hu(tc(e,p))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${nc(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${s}, ${r}, ${i})) +\n          depth3;\n        ${Qu(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,u=e.shapeInfo.texShape,c=u[0],h=u[1];if(h===o&&null==d)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${s}, ${r}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===i&&null==d)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} + depth * ${r} +\n          depth2 * ${i} + depth3 + ${Zu(n)};\n      vec2 uv = uvFromFlat(${c}, ${h}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:i,keptDims:r}=iu.util.squeezeShape(t);if(i.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Hu(tc(e,i))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${nc(t,r)});\n      }\n    `}const s=t[5],o=t[4]*s,p=t[3]*o,l=t[2]*p,d=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${l}, ${p}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${s}, 1)));\n        ${Qu(e)}\n      }\n    `;const u=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],m=c[1];if(m===d&&null==u)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${p}, ${o}, ${s})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===s&&null==u)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${l} + depth * ${p} +\n          depth2 * ${o} + depth3 * ${s} + depth4 + ${Zu(n)};\n      vec2 uv = uvFromFlat(${h}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function qu(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${Fu().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e.shapeInfo.texShape,r=Fu();if(t)return`\n    vec4 ${a}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${r.texture2D}(${n}, uv);\n    }\n  `;const s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${a}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),r=e.shapeInfo.texShape,s=r[0],o=r[1],p=Fu();if(null!=r&&iu.util.arraysEqual(n,r))return t?`\n      vec4 ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${p.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${s}.0);\n\n        return ${p.texture2D}(${a}, uv);\n      }\n    `;if(t)return`\n    vec4 ${i}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${p.texture2D}(${a}, uv);\n    }\n  `;const l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${i}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${p.texture2D}(${a}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===n[0]){const a=[1,2],r=["b","row","col"];return`\n        ${qu(tc(e,n.slice(1)),t)}\n        vec4 ${i}(int b, int row, int col) {\n          return ${i}(${nc(r,a)});\n        }\n      `}const o=Fu();if(t)return`\n    vec4 ${i}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `;const p=s[0],l=s[1],d=Math.ceil(n[2]/2);return`\n    vec4 ${i}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${p}, ${l}, ${d*Math.ceil(n[1]/2)}, ${d}, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),i=Fu();if(t)return`\n    vec4 ${a}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${n}, uv);\n    }\n  `;const r=e.shapeInfo.logicalShape,s=r.length,o=e.shapeInfo.texShape,p=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=p[0],d=p[1],u=Math.ceil(r[s-1]/2);let c=u*Math.ceil(r[s-2]/2),h="int b, int row, int col",m=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<s-1;e++)h=`int b${e}, `+h,c*=r[s-e-1],m=`b${e} * ${c} + `+m;return`\n    vec4 ${a}(${h}) {\n      int index = ${m};\n      int texR = index / ${d};\n      int texC = index - texR * ${d};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${l});\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const ju="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Xu="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ku="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Yu="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Zu(e){return`offset${e}`}function Qu(e){const t=e.name,n=iu.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Ju(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ec(e,t,n){const{newShape:a,keptDims:i}=iu.util.squeezeShape(t),r=t.length,s=e&&3===r&&1===t[0],o=s?t.slice(1):a,p=!e&&r>1&&!iu.util.arraysEqual(t,n)&&a.length<r||s;return{useSqueezeShape:p,uniformShape:p?o:t,keptDims:i}}function tc(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function nc(e,t){return t.map((t=>e[t])).join(", ")}function ac(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const a=e.logicalShape,i=t[n],r=i.shape;if(!iu.util.arraysEqual(a,r))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${r} must match`);if(e.isUniform&&i.isUniform)return;const s=e.texShape,o=i.isUniform?null:i.texData.texShape;if(!iu.util.arraysEqual(s,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${s} and ${o} must match`)}))}function ic(e){return(0,iu.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class rc{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=pu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Fu();this.outputShape=e,this.enableShapeUniforms=ic(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Vu(["r","c","d"],e):$u(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class sc{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=pu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Fu();this.outputShape=e,this.enableShapeUniforms=ic(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Vu(["r","c","d"],e):$u(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class oc{constructor(e){this.variableNames=["A"],this.outTexUsage=lu.DOWNLOAD;const t=Fu();this.outputShape=e,this.userCode=`\n      ${Uu}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class pc{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=lu.DOWNLOAD;const t=Fu();this.outputShape=e,this.userCode=`\n      ${Uu}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class lc{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Fu();this.outputShape=e,this.enableShapeUniforms=ic(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":zu(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class dc{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Fu();this.outputShape=e,this.enableShapeUniforms=ic(this.outputShape.length);let a="",i="result";t&&(i="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let i=0;i<=1;i++){const r=2*t+i;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${i};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${r}] = values[0];\n            } else if (offset == 1) {\n              result[${r}] = values[1];\n            } else if (offset == 2) {\n              result[${r}] = values[2];\n            } else {\n              result[${r}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":zu(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${a}\n\n          ${n.output} = ${i};\n        }\n    `}}function uc(e,t,n,a,i,r){!function(e,t){const n=(0,iu.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const s=function(e){return Eu(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return fu(e,(()=>e.bindTexture(o,s))),fu(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),fu(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),fu(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),fu(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,iu.env)().getNumber("WEBGL_VERSION")?fu(e,(()=>e.texImage2D(o,0,a,t,n,0,i,r,null))):fu(e,(()=>e.texStorage2D(o,1,a,t,n))),fu(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:s,texShape:[n,t]}}function cc(e){return e.internalFormatFloat}function hc(e){return e.internalFormatHalfFloat}function mc(e){return e.downloadTextureFormat}function fc(e){return e.internalFormatPackedFloat}function gc(e){return e.internalFormatPackedHalfFloat}class vc{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,iu.env)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){ru[e]=t}(t,e)):this.gl=ou(t);let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(1===(0,iu.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=vu(this.gl,e),Du(this.gl,t))this.textureHalfFloatExtension=vu(this.gl,t);else if((0,iu.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Du(this.gl,a))this.colorBufferHalfFloatExtension=vu(this.gl,a);else if((0,iu.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Du(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Du(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=function(e){return function(e,t){const n=Eu(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return fu(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),fu(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=Eu(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return fu(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),fu(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return Eu(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=mu(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,iu.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;fu(e,(()=>e.finish())),fu(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),fu(e,(()=>e.deleteFramebuffer(this.framebuffer))),fu(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),fu(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),fu(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[i,r]=uu(t,n);return uc(e,i,r,cc(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[i,r]=uu(t,n);return uc(e,i,r,hc(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[i,r]=uu(t,n);return uc(e,i,r,mc(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){fu(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,iu.env)().getNumber("WEBGL_VERSION")?fu(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):fu(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,iu.env)().getNumber("WEBGL_VERSION")?fu(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):fu(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),fu(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,i,r){let s,o,p;fu(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),i instanceof Uint8Array?(s=new Uint8Array(n*a*4),o=e.UNSIGNED_BYTE,p=e.RGBA):(s=new Float32Array(n*a*4),o=e.FLOAT,p=r.internalFormatPackedFloat),s.set(i),2===(0,iu.env)().getNumber("WEBGL_VERSION")?fu(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,o,s))):fu(e,(()=>e.texImage2D(e.TEXTURE_2D,0,p,n,a,0,e.RGBA,o,s))),fu(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[i,r]=hu(t,n);return uc(e,i,r,gc(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[i,r]=hu(t,n);return uc(e,i,r,fc(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Su(this.gl,this.framebuffer),this.outputTexture=null),fu(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[i,r]=uu(t,n),s=new Uint8Array(t*n*4);return fu(e,(()=>e.readPixels(0,0,i,r,a.downloadTextureFormat,e.UNSIGNED_BYTE,s))),new Float32Array(s.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,i,r){return function(e,t,n,a,i,r,s,o){const p=e,l=new Float32Array(function(e,t){const[n,a]=hu(e,t);return n*a*4}(r,s));return p.bindBuffer(p.PIXEL_PACK_BUFFER,t),p.getBufferSubData(p.PIXEL_PACK_BUFFER,0,l),p.bindBuffer(p.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,i,r,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,i=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,i),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),i}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n,a){const i=e.createBuffer();fu(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,i)));const r=16*t*n;return fu(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,r,e.STREAM_READ))),fu(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),fu(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),i}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,iu.env)().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,i=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(i,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=i}else(0,iu.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,iu.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return fu(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=Fu();return function(e,t){const n=Eu(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(fu(e,(()=>e.shaderSource(n,t))),fu(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return Eu(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return fu(t,(()=>t.attachShader(n,this.vertexShader))),fu(t,(()=>t.attachShader(n,e))),function(e,t){if(fu(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&xu(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return fu(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),bu(e,t,"clipSpacePos",n,3,20,0)&&bu(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&fu(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&xu(this.gl,this.program),fu(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return Eu(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),fu(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),wu(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,i]=hu(t,n);this.setOutputMatrixTextureDriver(e,a,i)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&xu(this.gl,this.program),Tu(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),fu(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),fu(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=vu(this.gl,2===(0,iu.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,iu.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,iu.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await iu.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,iu.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,iu.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||iu.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),_u(this.gl,e,this.framebuffer),this.debug&&Tu(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(_u(this.gl,this.outputTexture,this.framebuffer),this.debug&&Tu(this.gl)):Su(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;_u(a,e,this.framebuffer),this.debug&&Tu(a),this.outputTexture=e,fu(a,(()=>a.viewport(0,0,t,n))),fu(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),fu(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function yc(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&iu.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}function xc(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}function bc(e){return(t,n,a,i,r)=>{const s=iu.backend_util.assertAndGetBroadcastShape(t,n),o=s.length,p=iu.util.computeStrides(s),l=iu.util.sizeFromShape(s),d=iu.util.getTypedArrayFromDType(r,l),u=t.length,c=n.length,h=iu.util.computeStrides(t),m=iu.util.computeStrides(n),f=iu.backend_util.getBroadcastDims(t,s),g=iu.backend_util.getBroadcastDims(n,s);if(f.length+g.length===0)for(let t=0;t<d.length;++t)d[t]=e(a[t%a.length],i[t%i.length]);else for(let t=0;t<d.length;++t){const n=iu.util.indexToLoc(t,o,p),r=n.slice(-u);f.forEach((e=>r[e]=0));const s=iu.util.locToIndex(r,u,h),l=n.slice(-c);g.forEach((e=>l[e]=0));const v=iu.util.locToIndex(l,c,m);d[t]=e(a[s],i[v])}return[d,s]}}function wc(e){const{inputs:t,backend:n}=e,{real:a,imag:i}=t,r=n.data.get(a.dataId).values,s=n.data.get(i.dataId).values,o=n.makeTensorInfo(a.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",r),imag:n.makeTensorInfo(i.shape,"float32",s)},o}function _c(e,t,n="float32"){if("complex64"===n)return wc({inputs:{real:_c(e,t,"float32"),imag:_c(e,t,"float32")},backend:e});const a=iu.util.makeZerosTypedArray(iu.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function Sc(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}function Tc(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{dtype:r}=a;if("complex64"===r){if("complex64"===i.dtype)return Sc({inputs:{x:i},backend:n});const e=_c(n,i.shape,i.dtype),t=Tc({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),a=wc({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===i.dtype){const e=function(e){const{inputs:t,backend:n}=e,{input:a}=t,i=n.data.get(a.dataId).complexTensorInfos.real,r=n.data.get(i.dataId).values;return n.makeTensorInfo(i.shape,i.dtype,r)}({inputs:{input:i},backend:n}),t=Tc({inputs:{x:e},backend:n,attrs:{dtype:r}});return n.disposeIntermediateTensorInfo(e),t}if(!iu.util.hasEncodingLoss(i.dtype,r)){const e=Sc({inputs:{x:i},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:r}}if("int32"===r){const e=n.data.get(i.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(i.shape,"int32",t)}if("bool"===r){const e=n.data.get(i.dataId).values,t=iu.util.toTypedArray([0],i.dtype),[a,r]=bc(((e,t)=>e!==t?1:0))(i.shape,[],e,t,"bool");return n.makeTensorInfo(r,"bool",a)}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${r}`)}function Ec(e,t,n,a){return null==n?({inputs:n,backend:i})=>{const{a:r,b:s}=n,o=i;yc([r,s],e);const p=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,d="string"===r.dtype?iu.backend_util.fromUint8ToStringArray(p):p,u="string"===r.dtype?iu.backend_util.fromUint8ToStringArray(l):l,c=a||r.dtype,[h,m]=t(r.shape,s.shape,d,u,c);return o.makeTensorInfo(m,c,h)}:({inputs:e,backend:i})=>{const{a:r,b:s}=e,o=i;if("complex64"===r.dtype||"complex64"===s.dtype){const e=Tc({inputs:{x:r},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),a=t.complexTensorInfos.real,i=t.complexTensorInfos.imag,p=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,d=Tc({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),u=o.data.get(d.dataId),c=u.complexTensorInfos.real,h=u.complexTensorInfos.imag,m=o.data.get(c.dataId).values,f=o.data.get(h.dataId).values,[g,v,y]=n(r.shape,s.shape,p,l,m,f),x=o.makeTensorInfo(y,"float32",g),b=o.makeTensorInfo(y,"float32",v),w=wc({inputs:{real:x,imag:b},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(b),w}{const e=o.data.get(r.dataId).values,n=o.data.get(s.dataId).values,i=a||r.dtype,[p,l]=t(r.shape,s.shape,e,n,i);return o.makeTensorInfo(l,i,p)}}}function Mc(e){return(t,n,a,i,r,s)=>{const o=iu.backend_util.assertAndGetBroadcastShape(t,n),p=iu.util.sizeFromShape(o),l=o.length,d=iu.util.computeStrides(o),u=iu.util.getTypedArrayFromDType("float32",p),c=iu.util.getTypedArrayFromDType("float32",p),h=iu.backend_util.getBroadcastDims(t,o),m=iu.backend_util.getBroadcastDims(n,o),f=iu.backend_util.mergeRealAndImagArrays(a,i),g=iu.backend_util.mergeRealAndImagArrays(r,s),v=t.length,y=iu.util.computeStrides(t),x=n.length,b=iu.util.computeStrides(n);if(h.length+m.length===0)for(let t=0;t<u.length;t++){const n=t%f.length,a=t%g.length,i=e(f[2*n],f[2*n+1],g[2*a],g[2*a+1]);u[t]=i.real,c[t]=i.imag}else for(let t=0;t<u.length;t++){const n=iu.util.indexToLoc(t,l,d),a=n.slice(-v);h.forEach((e=>a[e]=0));const i=iu.util.locToIndex(a,v,y),r=n.slice(-x);m.forEach((e=>r[e]=0));const s=iu.util.locToIndex(r,x,b),o=e(f[2*i],f[2*i+1],g[2*s],g[2*s+1]);u[t]=o.real,c[t]=o.imag}return[u,c,o]}}iu.Abs,iu.Complex,iu.Identity,iu.Real,iu.Cast;const Nc=bc(((e,t)=>e+t)),Cc=Mc(((e,t,n,a)=>({real:e+n,imag:t+a})));function Ac(e,t,n,a,i){const r=iu.util.sizeFromShape(a),s=iu.util.makeZerosTypedArray(i,n);for(let n=0;n<e.length;n++){const a=e[n];if(a<0)throw new Error("Input x must be non-negative!");a>=i||(s[a]+=r>0?t[n]:1)}return s}function Ic(e,t,n,a=!1){const i=e.shape[0],r=e.shape[1],s=(0,iu.buffer)([i,n],t.dtype);for(let o=0;o<i;o++)for(let i=0;i<r;i++){const r=e.get(o,i);if(r<0)throw new Error("Input x must be non-negative!");r>=n||(a?s.set(1,o,r):t.size>0?s.set(s.get(o,r)+t.get(o,i),o,r):s.set(s.get(o,r)+1,o,r))}return s}function Rc(e){return(t,n,a)=>{const i=iu.util.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)i[n]=e(t[n],a);return i}}function kc(e,t,n){return({inputs:a,attrs:i,backend:r})=>{const{x:s}=a;if(yc(s,e),"string"===s.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=r,p=o.data.get(s.dataId).values,l=iu.util.sizeFromShape(s.shape),d=n||s.dtype,u=iu.util.getArrayFromDType(d,l);for(let e=0;e<l;++e)u[e]=t(p[e],i);return o.makeTensorInfo(s.shape,d,u)}}function Dc(e,t,n){return({inputs:a,attrs:i,backend:r})=>{const{x:s}=a;if(yc(s,e),"string"===s.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=r,p=o.data.get(s.dataId).values,l=n||s.dtype,d=t(p,l,i);return o.makeTensorInfo(s.shape,l,d)}}Ec(iu.Add,Nc,Cc),iu.Add;const Pc=Rc((e=>Math.ceil(e)));function Lc(e,t,n,a){const i=iu.util.getArrayFromDType(n,iu.util.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=iu.util.sizeFromShape(e.shape);i.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const r="string"===n?iu.backend_util.fromUint8ToStringArray(e.vals):e.vals;let s=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+a;for(let t=0;t<e.shape[1];++t)i[o+t]=r[s++]}a+=e.shape[1]}))}return i}Dc(iu.Ceil,Pc),iu.Ceil;const Oc=bc(((e,t)=>e===t?1:0)),Bc=(Ec(iu.Equal,Oc,null,"bool"),iu.Equal,Rc((e=>Math.exp(e)))),Fc=(Dc(iu.Exp,Bc,"float32"),iu.Exp,Rc((e=>Math.expm1(e)))),$c=(Dc(iu.Expm1,Fc),iu.Expm1,Rc((e=>Math.floor(e))));function Vc(e,t,n,a,i,r,s,o,p){const l=(0,iu.buffer)([a,r],n);for(let n=0;n<a;n++){const a=[];let d=0;for(let t=0;t<i;t++){const r=e[n*i+t];d+=r*s[t],a.push(r)}if(d<0||d>=p/r)throw new Error(`Invalid indices: ${a} does not index into ${o}`);for(let e=0;e<r;e++)l.values[n*r+e]=t.get(...t.indexToLoc(d*r+e))}return l}function zc(e,t,n){const a=(0,iu.buffer)(n,e.dtype);for(let n=0;n<a.size;++n){const i=a.indexToLoc(n).slice(),r=i[0],s=i[2],o=t.locToIndex([r,s]);i[2]=t.values[o];const p=e.locToIndex(i);0<=p&&p<e.values.length&&(a.values[n]=e.values[p])}return a}Dc(iu.Floor,$c),iu.Floor;const Uc=bc(((e,t)=>e>t?1:0)),Gc=(Ec(iu.Greater,Uc,null,"bool"),iu.Greater,bc(((e,t)=>e>=t?1:0))),Wc=(Ec(iu.GreaterEqual,Gc,null,"bool"),iu.GreaterEqual,bc(((e,t)=>e<t?1:0))),Hc=(Ec(iu.Less,Wc,null,"bool"),iu.Less,bc(((e,t)=>e<=t?1:0)));function qc(e,t,n){const a=(t-e)/(n-1),i=iu.util.makeZerosTypedArray(n,"float32");i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+a;return i}Ec(iu.LessEqual,Hc,null,"bool"),iu.LessEqual;const jc=Rc((e=>Math.log(e)));function Xc(e,t,n,a){const i=iu.util.getTypedArrayFromDType(a,iu.util.sizeFromShape(n));for(let n=0;n<i.length;++n){const a=n*t;let r=e[a];for(let n=0;n<t;++n){const t=e[a+n];(Number.isNaN(t)||t>r)&&(r=t)}i[n]=r}return i}Dc(iu.Log,jc),iu.Log;const Kc=bc(((e,t)=>Math.max(e,t))),Yc=(Ec(iu.Maximum,Kc),iu.Maximum,bc(((e,t)=>Math.min(e,t)))),Zc=(Ec(iu.Minimum,Yc),iu.Minimum,bc(((e,t)=>e*t))),Qc=Mc(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n})));function Jc(e,t,n){const a=iu.util.createScalarValue(-1,n);return Zc([],t,a,e,n)}Ec(iu.Multiply,Zc,Qc),iu.Multiply,iu.Neg;const eh=bc(((e,t)=>e!==t?1:0));function th(e,t,n,a,i){const r=t.length,s=iu.util.sizeFromShape(t),o=iu.util.computeStrides(t),p=iu.util.computeStrides(i),l=iu.util.getTypedArrayFromDType(n,iu.util.sizeFromShape(i));for(let t=0;t<s;++t){const n=iu.util.indexToLoc(t,r,o),i=new Array(n.length);for(let e=0;e<i.length;e++)i[e]=n[a[e]];l[iu.util.locToIndex(i,r,p)]=e[t]}return l}function nh(e,t,n,a){const[i,r]=iu.backend_util.computeOutAndReduceShapes(e,a),s=(0,iu.upcastType)(t,"int32"),o=iu.util.makeZerosTypedArray(iu.util.sizeFromShape(i),s),p=iu.util.sizeFromShape(r);for(let e=0;e<o.length;++e){const t=e*p;let a=1;for(let e=0;e<p;++e)a*=n[t+e];o[e]=a}return{outVals:o,outShape:i,outDtype:s}}function ah(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return iu.util.makeZerosTypedArray(0,a);const i=Math.abs(Math.ceil((t-e)/n)),r=iu.util.makeZerosTypedArray(i,a);t<e&&1===n&&(n=-1),r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+n;return r}Ec(iu.NotEqual,eh,null,"bool"),iu.NotEqual,iu.Transpose,iu.Prod;const ih=Rc((e=>1/Math.sqrt(e))),rh=(Dc(iu.Rsqrt,ih),iu.Rsqrt,Rc((e=>1/(1+Math.exp(-e)))));function sh(e,t,n,a,i){const r=iu.slice_util.isSliceContinous(a,t,n),s=iu.util.sizeFromShape(n),o=iu.util.computeStrides(a);if(r){const n=iu.slice_util.computeFlatOffset(t,o);return"string"===i?e.slice(n,n+s):e.subarray(n,n+s)}const p="string"===i?iu.backend_util.fromUint8ToStringArray(e):e,l=(0,iu.buffer)(a,i,p),d=(0,iu.buffer)(n,i);for(let e=0;e<d.size;++e){const n=d.indexToLoc(e),a=n.map(((e,n)=>e+t[n]));d.set(l.get(...a),...n)}return"string"===i?iu.backend_util.fromStringArrayToUint8(d.values):d.values}function oh(e,t,n,a,i,r,s){const o=t[0],p=r[0],l=new Array(p),d=new Array(o),u=t[1];if(0===p){if(0!==o)throw new Error(iu.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[iu.util.getArrayFromDType(n,0),[0,u],iu.util.getArrayFromDType(i,0),l,d]}let c=!0,h=0;const m=new Array(p).fill(0);for(let t=0;t<o;++t){const n=e[t*u];if(n<0)throw new Error(iu.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=p)throw new Error(iu.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,p));++m[n],c=c&&n>=h,h=n}let f=!0;for(let e=0;e<p;++e){const t=0===m[e];l[e]=t,f=f&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(f&&c){const t=e,n=a;for(let e=0;e<o;++e)d[e]=e;return[t,[o,u],n,l,d]}{const t=m[p-1],r=iu.util.getArrayFromDType(n,t*u),c=iu.util.getArrayFromDType(i,t),h=new Array(p).fill(0);for(let t=0;t<o;++t){const n=e[t*u],i=h[n],s=(0===n?0:m[n-1])+i;h[n]++;for(let n=0;n<u;++n)r[s*u+n]=e[t*u+n];c[s]=a[t],d[t]=s}for(let e=0;e<p;++e)if(0===h[e]){const t=0===e?0:m[e-1];r[t*u+0]=e;for(let e=1;e<u;++e)r[t*u+e]=0;c[t]=s}return[r,[t,u],c,l,d]}}function ph(e,t,n,a,i){const r=iu.util.sizeFromShape(a),s=t[0],o=i.length,p=[];let l=1,d=-1;for(let e=0;e<o;++e){const t=i[e];if(-1===t){if(-1!==d)throw new Error(iu.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,e));d=e,p.push(1)}else{if(t<0)throw new Error(iu.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(e,t));l*=t,p.push(t)}}if(-1!==d){if(l<=0)throw new Error(iu.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(r/l);if(l*e!==r)throw new Error(iu.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(a,p));p[d]=e}if(iu.util.sizeFromShape(p)!==r)throw new Error(iu.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(a,p));const u=a.length,c=[];if(u>0){c[u-1]=1;for(let e=u-2;e>=0;--e)c[e]=c[e+1]*a[e+1]}const h=[];if(o>0){h[o-1]=1;for(let e=o-2;e>=0;--e)h[e]=h[e+1]*p[e+1]}const m=iu.util.getArrayFromDType(n,s*o);for(let t=0;t<s;++t){let n=0;for(let a=0;a<u;++a)n+=e[t*u+a]*c[a];for(let e=0;e<o;++e)m[t*o+e]=Math.trunc(n/h[e]),n%=h[e]}return[m,[s,o],p]}function lh(e,t,n,a,i,r=!1,s=0){const o=a.length,p=[t[0],e.length/t[0]],l=p[1],d=o>0?i[o-1]+1:0;if(d<0)throw new Error(iu.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const u=t.slice();u[0]=d;const c=u.reduce(((e,t)=>e*t),1),h=iu.util.getArrayFromDType(n,c);if(0===o)return d>0&&h.fill(s),[h,u];if(d<=0)throw new Error(iu.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,f=1,g=0,v=i[m];for(;;){let t=0;if(f<o){if(t=i[f],v===t){++f;continue}if(v>=t)throw new Error(iu.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(v<0||v>=d)throw new Error(iu.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(v,d));v>g&&h.fill(s,g*l,v*l);for(let t=m;t<f;++t){const n=a[t];if(n<0||n>=p[0])throw new Error(iu.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,a[t],p[0]));for(let t=0;t<l;t++)h[v*l+t]+=e[n*l+t]}if(r)for(let e=0;e<l;e++)h[v*l+e]/=f-m;if(m=f,++f,g=v+1,v=t,f>o)break}return g<d&&h.fill(s,g*l,d*l),[h,u]}kc(iu.Sigmoid,(e=>1/(1+Math.exp(-e)))),iu.Sigmoid,iu.Slice;const dh=Rc((e=>Math.sqrt(e))),uh=(kc(iu.Sqrt,(e=>Math.sqrt(e))),iu.Sqrt,bc(((e,t)=>{const n=e-t;return n*n})));function ch(e,t,n,a){const i=(0,iu.buffer)(e,t.dtype);for(let e=0;e<i.size;e++){const r=i.indexToLoc(e),s=new Array(r.length);for(let e=0;e<s.length;e++)s[e]=r[e]*n[e]+a[e];i.set(t.get(...s),...r)}return i}Ec(iu.SquaredDifference,uh),iu.SquaredDifference;class hh{constructor(e,t,n,a,i,r){this.separator=iu.util.encodeString(e),this.nGramWidths=t,this.leftPad=iu.util.encodeString(n),this.rightPad=iu.util.encodeString(a),this.padWidth=i,this.preserveShort=r}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,i,r){for(let s=0;s<i;++s){const o=this.getPadWidth(r),p=Math.max(0,o-s),l=Math.max(0,o-(i-(s+1))),d=r-(p+l),u=t+(p>0?0:s-o);let c=0;c+=p*this.leftPad.length;for(let t=0;t<d;++t)c+=e[u+t].length;c+=l*this.rightPad.length,c+=(p+l+d-1)*this.separator.length,n[a+s]=new Uint8Array(c);const h=n[a+s];let m=0;const f=e=>e.forEach((e=>h[m++]=e));for(let e=0;e<p;++e)f(this.leftPad),f(this.separator);for(let t=0;t<d-1;++t)f(e[u+t]),f(this.separator);if(d>0){f(e[u+d-1]);for(let e=0;e<l;++e)f(this.separator),f(this.rightPad)}else{for(let e=0;e<l-1;++e)f(this.rightPad),f(this.separator);f(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let i=1;i<a;++i){let a=t[i]>=e;if(a=a&&t[i]<=n,!a)throw new Error(`Invalid split value ${t[i]}, must be in [${e}, ${n}]`);e=t[i]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const i=a-1,r=iu.util.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let e=0;e<=i;++e)r[e]=0;return[e,r]}r[0]=0;for(let e=1;e<=i;++e){const n=t[e]-t[e-1];let a=0;this.nGramWidths.forEach((e=>{a+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===a&&(a=1),r[e]=r[e-1]+a}const s=new Array(r[i]);for(let n=0;n<i;++n){const a=t[n];let i=r[n];if(this.nGramWidths.forEach((r=>{const o=t[n+1]-t[n],p=this.getNumNGrams(o,r);this.createNGrams(e,a,s,i,p,r),i+=p})),this.preserveShort&&i===r[n]){const r=t[n+1]-t[n];if(0===r)continue;const o=r+2*this.padWidth,p=1;this.createNGrams(e,a,s,i,p,o)}}return[s,r]}}function mh(e,t,n,a,i,r,s,o){return new hh(n,a,i,r,s,o).compute(e,t)}function fh(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const i=t[0];let r=e.indexOf(i);for(;-1!==r;){const t=e.subarray(0,r);n&&0===t.length||a.push(t),r=(e=e.subarray(r+1)).indexOf(i)}return void(n&&0===e.length||a.push(e))}let i=0;for(let r=0;r<e.length+1;r++)if(r===e.length||-1!==t.indexOf(e[r])){const t=e.subarray(i,r);n&&0===t.length||a.push(t),i=r+1}}function gh(e,t,n){const a=e.length,i=[];let r=0,s=0;const o=new Array(a);for(let p=0;p<a;++p){const a=i.length;fh(e[p],t,n,i);const l=i.length-a;o[p]=l,r+=l,s=Math.max(s,l)}const p=iu.util.getArrayFromDType("int32",2*r),l=new Array(r),d=[a,s];let u=0;for(let e=0;e<a;++e)for(let t=0;t<o[e];++t)p[2*u]=e,p[2*u+1]=t,l[u]=i[u],++u;return[p,l,d]}function vh(e,t){const n=iu.util.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=iu.util.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}const yh=bc(((e,t)=>e-t)),xh=Mc(((e,t,n,a)=>({real:e-n,imag:t-a})));function bh(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const a=(0,iu.buffer)(n,e.dtype);for(let t=0;t<a.values.length;++t){const n=a.indexToLoc(t),i=new Array(e.rank);for(let t=0;t<i.length;t++)i[t]=n[t]%e.shape[t];const r=e.locToIndex(i);a.values[t]=e.values[r]}return a}Ec(iu.Sub,yh,xh),iu.Sub;const wh=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function _h(e,t,n=0,a=e.length-1){for(;a>n;){if(a-n>600){const i=a-n+1,r=t-n+1,s=Math.log(i),o=.5*Math.exp(2*s/3),p=.5*Math.sqrt(s*o*(i-o)/i)*Math.sign(r-i/2);_h(e,t,Math.max(n,Math.floor(t-r*o/i+p)),Math.min(a,Math.floor(t+(i-r)*o/i+p)))}const i=e[t];let r=n,s=a;for(iu.util.swap(e,n,t),wh(e[a],i)>0&&iu.util.swap(e,n,a);r<s;){for(iu.util.swap(e,r,s),r++,s--;wh(e[r],i)<0;)r+=1;for(;wh(e[s],i)>0;)s-=1}0===wh(e[n],i)?iu.util.swap(e,n,s):(s+=1,iu.util.swap(e,s,a)),s<=t&&(n=s+1),t<=s&&(a=s-1)}}function Sh(e,t,n,a,i){const r=t[t.length-1],[s,o]=[e.length/r,r],p=iu.util.getTypedArrayFromDType(n,s*a),l=iu.util.getTypedArrayFromDType("int32",s*a);for(let t=0;t<s;t++){const n=t*o,r=e.subarray(n,n+o);let s=new Array(r.length);r.forEach(((e,t)=>s[t]={value:e,index:t})),a<s.length&&(_h(s,a),s=s.slice(0,a)),i&&s.sort(wh);const d=t*a,u=p.subarray(d,d+a),c=l.subarray(d,d+a);for(let e=0;e<a;e++)u[e]=s[e].value,c[e]=s[e].index}const d=t.slice();return d[d.length-1]=a,[(0,iu.buffer)(d,n,p),(0,iu.buffer)(d,"int32",l)]}function Th(e,t,n,a){const i=iu.util.parseAxisParam(t,n)[0],r=[1,n[0],1];for(let e=0;e<i;e++)r[0]*=n[e];r[1]=n[i];for(let e=i+1;e<n.length;e++)r[2]*=n[e];const s={},o=new Int32Array(n[i]),p=new iu.TensorBuffer(r,a,e),l=[],d=1===r[0]&&1===r[2];for(let t=0;t<n[i];t++){let n;if(d)n=e[t].toString();else{const e=[];for(let n=0;n<r[0];n++)for(let a=0;a<r[2];a++)e.push(p.get(n,t,a));n=e.join(",")}if(void 0!==s[n])o[t]=s[n];else{const e=Object.keys(s).length;s[n]=e,o[t]=e,l.push(t)}}const u=r.slice();u[1]=Object.keys(s).length;const c=new iu.TensorBuffer(u,a);l.forEach(((e,t)=>{for(let n=0;n<r[0];n++)for(let a=0;a<r[2];a++)c.set(p.get(n,e,a),n,t,a)}));const h=n.slice();return h[i]=u[1],{outputValues:c.values,outputShape:h,indices:o}}const{addImpl:Eh,bincountImpl:Mh,bincountReduceImpl:Nh,ceilImpl:Ch,concatImpl:Ah,equalImpl:Ih,expImpl:Rh,expm1Impl:kh,floorImpl:Dh,gatherNdImpl:Ph,gatherV2Impl:Lh,greaterImpl:Oh,greaterEqualImpl:Bh,lessImpl:Fh,lessEqualImpl:$h,linSpaceImpl:Vh,logImpl:zh,maxImpl:Uh,maximumImpl:Gh,minimumImpl:Wh,multiplyImpl:Hh,negImpl:qh,notEqualImpl:jh,prodImpl:Xh,rangeImpl:Kh,rsqrtImpl:Yh,sigmoidImpl:Zh,simpleAbsImpl:Qh,sliceImpl:Jh,sparseFillEmptyRowsImpl:em,sparseReshapeImpl:tm,sparseSegmentReductionImpl:nm,sqrtImpl:am,stridedSliceImpl:im,stringNGramsImpl:rm,stringSplitImpl:sm,stringToHashBucketFastImpl:om,subImpl:pm,tileImpl:lm,topKImpl:dm,transposeImpl:um,uniqueImpl:cm}=e;function hm(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function mm(e,t){return 1===t?[e]:hm(e,t)}class fm{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ic(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=mm("rc",this.rank),t=Ju(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),i=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let i=`${0===n?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let t=2;t<this.rank;t++)i=`${e[e.length-1-t]},`+i;t.push(i)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${a};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class gm{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ic(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var a,i;this.userCode=`\n      ${a=t,i=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${i?function(e,t,n="index"){const a=function(e,t){const n=e.length,a=e.map((e=>`${t}[${e}]`)),i=new Array(n-1);i[n-2]=a[n-1];for(let e=n-3;e>=0;--e)i[e]=`(${i[e+1]} * ${a[e+1]})`;return i}(e.map(((e,t)=>t)),t);return a.map(((t,i)=>`int ${e[i]} = ${n} / ${a[i]}; ${i===a.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${a[i]}`:`index -= ${e[i]} * ${a[i]}`};`)).join("")}(["r","c","d"],"inputShape"):$u(["r","c","d"],a)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":zu(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class vm{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const a=xm(t,n),i=bm(e,a,n);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const r=ym(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=r,this.log();const e=this.freeTextures[i].shift();return this.usedTextures[i].push(e),e}let s;return a===du.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===du.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===du.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===du.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===du.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(s),this.numUsedTextures++,this._numBytesAllocated+=r,this.log(),s}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const i=xm(n,a),r=bm(t,i,a);r in this.freeTextures||(this.freeTextures[r]=[]);const s=ym(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=(0,iu.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=s):(this.freeTextures[r].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;const p=this.usedTextures[r],l=p.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");p.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function ym(e,t,n,a,i){const r=function(e,t){switch(e){case du.PACKED_2X2_FLOAT32:return fc(t);case du.PACKED_2X2_FLOAT16:return gc(t);case du.UNPACKED_FLOAT32:return cc(t);case du.UNPACKED_FLOAT16:return hc(t);case du.PACKED_4X1_UNSIGNED_BYTE:return mc(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,a);let s;if(i){const[t,n]=hu(e[0],e[1]);s=t*n}else{const[t,n]=uu(e[0],e[1]);s=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,r);return s*o}function xm(e,t){if(e===lu.UPLOAD)return du.PACKED_2X2_FLOAT32;if(e===lu.RENDER||null==e)return function(e){return(0,iu.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?du.PACKED_2X2_FLOAT32:du.UNPACKED_FLOAT32:e?du.PACKED_2X2_FLOAT16:du.UNPACKED_FLOAT16}(t);if(e===lu.DOWNLOAD||e===lu.PIXELS)return du.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function bm(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class wm{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ic(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const _m="return abs(x);",Sm="return x;";class Tm{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ic(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Em{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ic(this.outputShape.length);const t=e.length,n=mm("rc",t),a=Ju(t),i=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),r=n.slice(-2),s=t<=1?"rc":`vec2(${r.join(",")})`;this.userCode=`\n      void main() {\n        ${a} rc = getOutputCoords();\n        vec4 packedInput = getA(${i});\n\n        setOutput(getChannel(packedInput, ${s}));\n      }\n    `}}const Mm=iu.kernel_impls.whereImpl,Nm={},Cm=(0,iu.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Am extends iu.KernelBackend{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,iu.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof vc)t=e;else{const n=ou((0,iu.env)().getNumber("WEBGL_VERSION"),e);t=new vc(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=ou((0,iu.env)().getNumber("WEBGL_VERSION"));t=new vc(e),this.binaryCache=((n=(0,iu.env)().getNumber("WEBGL_VERSION"))in Nm||(Nm[n]={}),Nm[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new vm(this.gpgpu),this.numMBBeforeWarning=null==(0,iu.env)().global.screen?1024:(0,iu.env)().global.screen.height*(0,iu.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new iu.DataStorage(this,(0,iu.engine)())}nextDataId(){return Am.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(((0,iu.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,iu.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:lu.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,a,i){if((0,iu.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:lu.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:i,slice:r,shape:s,isPacked:o}=t;if(null!=r){let t;t=o?new Tm(s,Sm):new wm(s,Sm);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),i=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),i}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const p=null!=this.activeTimers;let l,d;if(p&&(l=iu.util.now()),"complex64"===a){const e=this.readSync(i.real.dataId),t=this.readSync(i.imag.dataId);d=iu.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return p&&(this.downloadWaitMs+=iu.util.now()-l),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:i,dtype:r,complexTensorInfos:s,isPacked:o}=t;if(null!=i){let t;t=o?new Tm(a,Sm):new wm(a,Sm);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:r}],r),i=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),i}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,iu.env)().getBool("DEBUG")&&!(0,iu.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,iu.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let p,l,d=null;if("complex64"!==r&&(0,iu.env)().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);const t=this.texData.get(p.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...cu(a))}if(this.pendingRead.set(e,[]),"complex64"!==r&&await this.gpgpu.createAndWaitForFence(),"complex64"===r){const e=await Promise.all([this.read(s.real.dataId),this.read(s.imag.dataId)]),t=e[0],n=e[1];l=iu.backend_util.mergeRealAndImagArrays(t,n)}else if(null==d)l=this.getValuesFromTexture(e);else{const e=iu.util.sizeFromShape(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=p&&this.disposeIntermediateTensorInfo(p),null!=d){const e=this.gpgpu.gl;fu(e,(()=>e.deleteBuffer(d)))}const u=this.convertAndCacheOnCPU(e,l),c=this.pendingRead.get(e);return this.pendingRead.delete(e),c.forEach((e=>e(u))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,iu.engine)().removeDataId(e,this),this.pendingDeletes--),u}readToGPU(e,t={}){const n=this.texData.get(e),{values:a,shape:i,slice:r,dtype:s,isPacked:o,texture:p}=n;if("complex64"===s)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=r){let n;n=o?new Tm(i,Sm):new wm(i,Sm);const a=this.runWebGLProgram(n,[{dataId:e,shape:i,dtype:s}],s),r=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),r}if(null==p)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),d=(0,iu.engine)().makeTensorFromDataId(l.dataId,l.shape,l.dtype),u=this.texData.get(l.dataId);return Object.assign({tensorRef:d},u.texture)}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>iu.util.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,iu.buffer)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!gu(n)){if((0,iu.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),i=iu.util.sizeFromShape(t);if((0,iu.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),r=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...cu(t)).subarray(0,i);return this.disposeIntermediateTensorInfo(n),r}const r=(0,iu.env)().getBool("WEBGL_PACK")&&!0===a,s=r?Cu(t):t,o=r?new pc(s):new oc(s),p=this.runWebGLProgram(o,[{shape:s,dtype:n,dataId:e}],"float32"),l=this.texData.get(p.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(p),d}timerAvailable(){return(0,iu.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const i=iu.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),r=iu.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,iu.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(i);s.kernelMs=iu.util.sum(e),s.getExtraProfileInfo=()=>e.map(((e,t)=>({name:r[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else s.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,s})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,iu.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:iu.util.now(),endMs:null}}endTimer(e){return(0,iu.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=iu.util.now(),e)}async getQueryTime(e){if((0,iu.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:i,isPacked:r,slice:s}=this.texData.get(e),o=s&&s.origDataId||e,p=this.dataRefCount.get(o);p>1?this.dataRefCount.set(o,p-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,i,r)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Cm){return(0,iu.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&iu.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){iu.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Mm(e.shape,t)}packedUnaryOp(e,t,n){const a=new Tm(e.shape,t),i=this.compileAndRun(a,[e],n);return(0,iu.engine)().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Qh(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,iu.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,_m,e.dtype);const t=new wm(e.shape,_m),n=this.compileAndRun(t,[e]);return(0,iu.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&iu.util.isString(n[0])){const i=n.map((e=>iu.util.encodeString(e)));a=this.write(i,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:a}=this.makeTensorInfo(e,t,n);return(0,iu.engine)().makeTensorFromDataId(a,e,t,this)}unpackTensor(e){const t=new Em(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new fm(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Mu(e.shape),...Nu(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},i=[Mu(t),...Nu(t)],r=new gm(i,n),s=[n],o=this.runWebGLProgram(r,[a],e.dtype,s,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:i,dtype:r}=n;if(null!=t){const e=iu.util.sizeFromShape(i),n=t[0]*t[1]*4;iu.util.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const s=Cu(i);let o;o=a?new sc(s):new rc(s);const p=[null!=t?t:cu(s)];return{dtype:r,shape:i,dataId:this.runWebGLProgram(o,[{shape:s,dtype:r,dataId:e}],r,p,!0,t).dataId}}runWebGLProgram(e,t,n,a,i=!1,r){const s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===pu.DENSE){const t=null!=r?r:cu(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===iu.util.sizeFromShape(s.shape))return o.values=iu.util.getTypedArrayFromDType(s.dtype,0),s;const p=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&iu.util.sizeFromShape(t.shape)<=(0,iu.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),p.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Iu(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),p.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const d={shape:s.shape,texData:o,isUniform:!1},u=function(e,t,n){let a="";t.concat(n).forEach((t=>{const i=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const r=t.texData.texShape,{useSqueezeShape:s,uniformShape:o,keptDims:p}=ec(e.packedInputs,t.shape,r);let l="",d="",u="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=iu.util.computeStrides(o);u=`${e[0]===r[1]}_${e[e.length-1]===r[1]}`}}else d=`${o[0]>1}_${o[1]>1}`;const c=t.shape.length,h=2===o.length&&iu.util.arraysEqual(t.shape,r),m=1===iu.util.sizeFromShape(t.shape),f=iu.backend_util.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&c===n.shape.length&&iu.util.arraysEqual(r,n.texData.texShape),v=e.packedInputs||o.length>2?"":`${r[0]>1}_${r[1]>1}`;a+=`${c}_${g}_${s?p:""}_${o.length}_${m}_${f}_${h}_${l}_${d}_${u}_${v}_${i}`}else{const e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${i}`}}));const i=e.userCode;let r=e.constructor.name;return r+="_"+a+"_"+i+`${(0,iu.env)().getNumber("WEBGL_VERSION")}`,r}(e,l,d),c=this.getAndSaveBinary(u,(()=>function(e,t,n,a){const i=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),r=i.map((e=>e.shapeInfo)),s={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},o=Wu(i,s,t),p=function(e,t){const n=Eu(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(fu(e,(()=>e.shaderSource(n,t))),fu(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=yu.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const a=+n[1],i=e.split("\n"),r=i.length.toString().length+2,s=i.map(((e,t)=>iu.util.rightPad((t+1).toString(),r)+e));let o=0;for(let e=0;e<s.length;e++)o=Math.max(s[e].length,o);const p=s.slice(0,a-1),l=s.slice(a-1,a),d=s.slice(a);console.log(p.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${iu.util.rightPad(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),l=e.createProgram(p);let d=null;const u=e.getUniformLocation(l,"NAN",!1);1===(0,iu.env)().getNumber("WEBGL_VERSION")&&(d=e.getUniformLocation(l,"INFINITY",!1));const c=!1,h={},m={},f={};for(let n=0;n<t.variableNames.length;n++){const a=t.variableNames[n];h[a]=e.getUniformLocation(l,a,c),h[`offset${a}`]=e.getUniformLocation(l,`offset${a}`,c),t.enableShapeUniforms&&(m[`${a}Shape`]=e.getUniformLocation(l,`${a}Shape`,c),f[`${a}TexShape`]=e.getUniformLocation(l,`${a}TexShape`,c))}let g,v,y;t.enableShapeUniforms&&(g=e.getUniformLocation(l,"outShape",c),y=e.getUniformLocation(l,"outShapeStrides",c),v=e.getUniformLocation(l,"outTexShape",c));const x=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{x[n]=e.getUniformLocation(l,t.name,c)})),{program:t,fragmentShader:p,source:o,webGLProgram:l,uniformLocations:h,customUniformLocations:x,inShapeInfos:r,outShapeInfo:s,infLoc:d,nanLoc:u,inShapesLocations:m,inTexShapesLocations:f,outShapeLocation:g,outShapeStridesLocation:y,outTexShapeLocation:v}}(this.gpgpu,e,l,d))),h=null!=this.activeTimers;let m;h&&(m=this.startTimer()),function(e,t,n,a,i){t.program.enableShapeUniforms||(ac(t.inShapeInfos,n),ac([t.outShapeInfo],[a]));const r=a.texData.texture,s=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(r.texture,s[0],s[1]):e.setOutputMatrixTexture(r.texture,s[0],s[1]),e.setProgram(t.webGLProgram),1===(0,iu.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,a)=>{const i=t.program.variableNames[a],r=t.uniformLocations[i],s=t.uniformLocations[`offset${i}`],o=t.inShapesLocations[`${i}Shape`],p=t.inTexShapesLocations[`${i}TexShape`];if(o){const{uniformShape:a}=ec(t.program.packedInputs,n.shape,n.texData.texShape);switch(a.length){case 1:e.gl.uniform1iv(o,new Int32Array(a));break;case 2:e.gl.uniform2iv(o,new Int32Array(a));break;case 3:e.gl.uniform3iv(o,new Int32Array(a));break;case 4:e.gl.uniform4iv(o,new Int32Array(a))}}if(p&&e.gl.uniform2i(p,n.texData.texShape[0],n.texData.texShape[1]),null!=r)if(n.isUniform)if(iu.util.sizeFromShape(n.shape)<2)e.gl.uniform1f(r,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=n.texData.slice&&null!=s&&e.gl.uniform1i(s,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,r,a)}));const o=t.outShapeLocation;if(o)switch(a.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=iu.util.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&i&&t.program.customUniforms.forEach(((n,a)=>{const r=t.customUniformLocations[a],s=i[a];if("float"===n.type)e.gl.uniform1fv(r,s);else if("vec2"===n.type)e.gl.uniform2fv(r,s);else if("vec3"===n.type)e.gl.uniform3fv(r,s);else if("vec4"===n.type)e.gl.uniform4fv(r,s);else if("int"===n.type)e.gl.uniform1iv(r,s);else if("ivec2"===n.type)e.gl.uniform2iv(r,s);else if("ivec3"===n.type)e.gl.uniform3iv(r,s);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(r,s)}})),e.executeProgram()}(this.gpgpu,c,l,d,a),p.forEach((e=>this.disposeIntermediateTensorInfo(e))),h&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const f=(0,iu.env)().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=iu.util.now();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,iu.env)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===i){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,a,i=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,a,i)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,iu.env)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,iu.tidy)((()=>{if(!(0,iu.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,iu.env)().getBool("DEBUG");(0,iu.env)().set("DEBUG",!1);const t=this.abs((0,iu.scalar)(1e-8)).dataSync()[0];if((0,iu.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:i,texture:r,usage:s,isPacked:o}=t;if(null!=r)return;const p=null!=this.activeTimers;let l;p&&(l=iu.util.now());let d=t.texShape;if(null==d&&(d=function(e,t=!1){let n=(0,iu.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?iu.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=iu.util.squeezeShape(e);e=t.newShape}let a=iu.util.sizeFromShape(e);if(e.length<=1&&a<=n)return[1,a];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=Mu(e);let n=2,i=2;return e.length&&([n,i]=Nu(e)),a=t*(n/2)*(i/2),iu.util.sizeToSquarishShape(a).map((e=>2*e))}return iu.util.sizeToSquarishShape(a)}(n,o),t.texShape=d),null!=i){const e=Cu(n);let r,s=d[1],u=d[0];const c=i instanceof Uint8Array||i instanceof Uint8ClampedArray;!o&&c||([s,u]=hu(d[0],d[1])),r=o?new dc(e,c):new lc(e,c);const h=c?[u,s]:d,m=this.makeTensorInfo(h,a),f=this.texData.get(m.dataId);f.usage=c?lu.PIXELS:lu.UPLOAD,f.texShape=h,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),s,u,i);const g=[[u,s]],v=!0,y=this.runWebGLProgram(r,[m],a,g,v),x=this.texData.get(y.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(m),this.texData.delete(y.dataId),t.values=null,p&&(this.uploadWaitMs+=iu.util.now()-l)}else{const e=this.acquireTexture(d,s,a,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*iu.util.bytesPerElement(t)}}Am.nextDataId=0,iu.device_util.isBrowser()&&(0,iu.registerBackend)("webgl",(()=>new Am),2);class Im{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=iu.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=ic(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class Rm{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=iu.backend_util.assertAndGetBroadcastShape(t,n);const i=this.outputShape.length;this.enableShapeUniforms=ic(i);let r="";if(a)if(0===i||1===iu.util.sizeFromShape(this.outputShape))r="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(r=`\n          ${Ju(i)} coords = getOutputCoords();\n        `,1===i)this.enableShapeUniforms?r+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":r+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=mm("coords",i);this.enableShapeUniforms?r+=`\n            bool nextRowOutOfBounds =\n              (${e[i-2]} + 1) >= outShape[${i} - 2];\n            bool nextColOutOfBounds =\n              (${e[i-1]} + 1) >= outShape[${i} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:r+=`\n            bool nextRowOutOfBounds =\n              (${e[i-2]} + 1) >= ${this.outputShape[i-2]};\n            bool nextColOutOfBounds =\n              (${e[i-1]} + 1) >= ${this.outputShape[i-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${r}\n\n        setOutput(result);\n      }\n    `}}function km(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Dm={kernelName:iu.Identity,backendName:"webgl",kernelFunc:km};function Pm(e){const{inputs:t,backend:n}=e,{real:a,imag:i}=t,r=n.makeTensorInfo(a.shape,"complex64"),s=n.texData.get(r.dataId),o=km({inputs:{x:a},backend:n}),p=km({inputs:{x:i},backend:n});return s.complexTensorInfos={real:o,imag:p},r}const Lm={kernelName:iu.Complex,backendName:"webgl",kernelFunc:Pm},Om="return (a < 0.) ? b * a : a;",Bm="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Fm={kernelName:iu.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{alpha:r}=a,s=n.makeTensorInfo([],"float32",iu.util.createScalarValue(r,"float32")),o=(0,iu.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rm(Bm,i.shape,s.shape):new Im(Om,i.shape,s.shape),p=n.runWebGLProgram(o,[i,s],"float32");return n.disposeIntermediateTensorInfo(s),p}},$m="return (a < 0.) ? b * a : a;",Vm="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",zm={kernelName:iu.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:i}=t,r=(0,iu.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rm(Vm,a.shape,i.shape):new Im($m,a.shape,i.shape);return n.runWebGLProgram(r,[a,i],"float32")}};function Um({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:i,backend:r})=>{const{x:s}=i,o=r,p=a||s.dtype;if(o.shouldExecuteOnCPU([s])&&null!=n){const e=o.texData.get(s.dataId),t=n(e.values,p);return o.makeTensorInfo(s.shape,p,t)}let l;return l=(0,iu.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Tm(s.shape,t):new wm(s.shape,e),o.runWebGLProgram(l,[s],p)}}function Gm({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:i,dtype:r}){return({inputs:s,backend:o})=>{const{a:p,b:l}=s,d=o;if(a&&"complex64"===p.dtype){const t=d.texData.get(p.dataId),n=d.texData.get(l.dataId),[a,i]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,a]=t,i={dataId:n.dataId,dtype:n.dtype,shape:p.shape},r={dataId:a.dataId,dtype:a.dtype,shape:l.shape},s=new Im(e,p.shape,l.shape);return d.runWebGLProgram(s,[i,r],(0,iu.upcastType)(n.dtype,a.dtype))})),r=Pm({inputs:{real:a,imag:i},backend:d});return d.disposeIntermediateTensorInfo(a),d.disposeIntermediateTensorInfo(i),r}const u=r||(0,iu.upcastType)(p.dtype,l.dtype);if(("string"===p.dtype||"string"===l.dtype||d.shouldExecuteOnCPU([p,l]))&&null!=i){const e=d.texData.get(p.dataId).values,t=d.texData.get(l.dataId).values,n="string"===p.dtype?iu.backend_util.fromUint8ToStringArray(e):e,a="string"===p.dtype?iu.backend_util.fromUint8ToStringArray(t):t,[r,s]=i(p.shape,l.shape,n,a,u),o=d.makeTensorInfo(s,u);return d.texData.get(o.dataId).values=r,o}let c;return c=(0,iu.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Rm(t,p.shape,l.shape,n):new Im(e,p.shape,l.shape),d.runWebGLProgram(c,[p,l],u)}}function Wm(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?Vm:$m;if("leakyrelu"===e)return t?Bm:Om;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class Hm{constructor(e,t,n,a=!1,i=!1,r=!1,s=null,o=!1,p=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ic(this.outputShape.length);const l=a?e[1]:e[2],d=Math.ceil(l/2),u=a?"i * 2, rc.y":"rc.y, i * 2",c=i?"rc.z, i * 2":"i * 2, rc.z",h=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",g="";s&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:p?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,g="result = activation(result);");const v=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),p&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${f}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${d}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${d}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${u});\n          vec4 b = getMatrixB(batchB, ${c});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${m[0]});\n          result += (${h[1]} * ${m[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${v}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class qm{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=iu.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const jm="return a * b;";function Xm(e){const{inputs:t,backend:n}=e,{a,b:i}=t,r=iu.backend_util.upcastType(a.dtype,i.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(i.dataId),r=new qm("return areal * breal - aimag * bimag;",a.shape,i.shape),s=new qm("return areal * bimag + aimag * breal;",a.shape,i.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:i.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:i.shape}],p=n.runWebGLProgram(r,o,"float32"),l=n.runWebGLProgram(s,o,"float32"),d=Pm({inputs:{real:p,imag:l},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),d}if(n.shouldExecuteOnCPU([a,i])){const e=n.texData.get(a.dataId),t=n.texData.get(i.dataId),[s,o]=Hh(a.shape,i.shape,e.values,t.values,r),p=n.makeTensorInfo(o,r);return n.texData.get(p.dataId).values=s,p}let s;return s=(0,iu.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rm(jm,a.shape,i.shape):new Im(jm,a.shape,i.shape),n.runWebGLProgram(s,[a,i],r)}const Km={kernelName:iu.Multiply,backendName:"webgl",kernelFunc:Xm};function Ym(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{shape:r}=a,s=n,o=iu.util.sizeFromShape(i.shape),p=iu.util.inferFromImplicitShape(r,o),l=iu.util.sizeFromShape(p);iu.util.assert(o===l,(()=>`The new shape (${p}) has ${l} elements and the old shape (${i.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const d=s.texData.get(i.dataId);return!d.isPacked||Iu(i.shape,p)||null!==d.texture&&Iu(d.shape,p)?(s.incRef(i.dataId),{dataId:i.dataId,shape:p,dtype:i.dtype}):function(e,t,n){const a=[Mu(e.shape),...Nu(e.shape)],i={dtype:e.dtype,shape:a,dataId:e.dataId},r=[Mu(t),...Nu(t)],s=new gm(r,a),o=[a],p=n.runWebGLProgram(s,[i],e.dtype,o,!0);return{dataId:p.dataId,shape:t,dtype:p.dtype}}(i,p,s)}const Zm={kernelName:iu.Reshape,backendName:"webgl",kernelFunc:Ym};class Qm{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:i,outSize:r}=e;this.outputShape=[a,r];const s=4*Math.floor(n/4),o=n%4;let p="sumValue += dot(values, ones);";if(null!=t){const e=1/t;p=`sumValue += dot(values * ${iu.util.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";i%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${s}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${s};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${p}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${p}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${p}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Jm{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:i,outSize:r}=e;this.outputShape=[a,r];let s="0.0",o="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",o="min"):"max"===t&&(s="-1.0 / 1e-20",o="max");let p=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?p="sumValue":"prod"===t?p="prodValue":"all"===t?p="allValue":"any"===t&&(p="anyValue");const l=4*Math.floor(n/4),d=n%4;let u=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,c="vec4";"all"===t?(s="1.0",u="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",c="bvec4"):"any"===t&&(s="0.0",u="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",c="bvec4");let h="";i%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${s};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${s});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${c} values = ${c}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===d}) {\n          ${c} values = ${c}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${u}\n        } else if (${2===d}) {\n          ${c} values = ${c}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${u}\n        } else if (${3===d}) {\n          ${c} values = ${c}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${u}\n        }\n        setOutput(${p});\n      }\n    `}}function ef(e,t,n,a){const i=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=iu.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let r=e;for(let s=0;s<i.length;s++){const{inSize:o,windowSize:p,outSize:l}=i[s];let d,u;d="mean"===n?0===s?new Qm({windowSize:p,inSize:o,batchSize:e.shape[0],outSize:l},o):new Qm({windowSize:p,inSize:o,batchSize:e.shape[0],outSize:l}):new Jm({windowSize:p,inSize:o,batchSize:e.shape[0],outSize:l},n),u=r,r=a.runWebGLProgram(d,[r],t),u.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(u)}return r}class tf{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const a=Ju(this.rank),i=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let t=0;t<e.length;t++)a[e[t]]=n[t];return a.join()}(t);this.userCode=`\n    void main() {\n      ${a} resRC = getOutputCoords();\n      setOutput(getA(${i}));\n    }\n    `}}class nf{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=Ju(this.rank),i=hm("rc",this.rank),r=new Array(this.rank);for(let e=0;e<t.length;e++)r[t[e]]=i[e];const s=`vec2(${r.slice(-2).join()})`,o=`++${i[this.rank-1]} < ${n[this.rank-1]}`,p=`getChannel(getA(${r.join()}), ${s})`;this.userCode=`\n    void main() {\n      ${a} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${p};\n      if(${o}) {\n        result[1] = ${p};\n      }\n      --${i[this.rank-1]};\n      if(++${i[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${p};\n        if(${o}) {\n          result[3] = ${p};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function af(e,t,n){const a=(0,iu.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nf(e.shape,t):new tf(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function rf(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:r,keepDims:s}=a;return function(e,t,n,a){const i=t,r=e.shape.length,s=iu.util.parseAxisParam(i,e.shape);let o=s;const p=iu.backend_util.getAxesPermutation(o,r),l=null!=p;let d=e;l&&(d=af(e,p,a),o=iu.backend_util.getInnerMostAxes(o.length,r)),iu.backend_util.assertAxesAreInnerMostDims("sum",o,r);const[u,c]=iu.backend_util.computeOutAndReduceShapes(d.shape,o);let h=u;n&&(h=iu.backend_util.expandShapeToKeepDim(u,s));const m=iu.util.sizeFromShape(c),f=Ym({inputs:{x:d},attrs:{shape:[iu.util.sizeFromShape(e.shape)/m,m]},backend:a}),g=ef(f,(0,iu.sumOutType)(e.dtype),"sum",a),v=Ym({inputs:{x:g},attrs:{shape:h},backend:a});return a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(g),l&&a.disposeIntermediateTensorInfo(d),v}(i,r,s,n)}const sf={kernelName:iu.Sum,backendName:"webgl",kernelFunc:rf};function of(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{perm:r}=a,s=n,o=i.shape.length,p=new Array(o);for(let e=0;e<p.length;e++)p[e]=i.shape[r[e]];let l;if(s.shouldExecuteOnCPU([i])){const e=s.texData.get(i.dataId).values,t=um(e,i.shape,i.dtype,r,p);l=s.makeTensorInfo(p,i.dtype),s.texData.get(l.dataId).values=t}else l=af(i,r,s);return l}const pf={kernelName:iu.Transpose,backendName:"webgl",kernelFunc:of};function lf({a:e,b:t,transposeA:n,transposeB:a,backend:i,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:p=null}){const l=e.shape.length,d=t.shape.length,u=n?e.shape[l-2]:e.shape[l-1],c=a?t.shape[d-1]:t.shape[d-2],h=n?e.shape[l-1]:e.shape[l-2],m=a?t.shape[d-2]:t.shape[d-1],f=e.shape.slice(0,-2),g=t.shape.slice(0,-2),v=iu.util.sizeFromShape(f),y=iu.util.sizeFromShape(g),x=iu.broadcast_util.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,m]);iu.util.assert(u===c,(()=>`Error in matMul: inner shapes (${u}) and (${c}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));const b=n?[v,u,h]:[v,h,u],w=a?[y,m,c]:[y,c,m],_=Ym({inputs:{x:e},backend:i,attrs:{shape:b}}),S=Ym({inputs:{x:t},backend:i,attrs:{shape:w}}),T=[_,S],E=Math.max(v,y),M=n?_.shape[1]:_.shape[2],N=null!=r,C=null!=s,A="leakyrelu"===p,I=null!=p?Wm(p,!0):null;let R;if((1===h||1===m)&&M>1e3&&!1===(N||C||A||null!=I)){let e=_,t=S;n&&(e=of({inputs:{x:_},backend:i,attrs:{perm:[0,2,1]}}),T.push(e)),a&&(t=of({inputs:{x:S},backend:i,attrs:{perm:[0,2,1]}}),T.push(t));const r=1===m;let s=e;1!==m&&(s=Ym({inputs:{x:e},backend:i,attrs:{shape:[E,M,1]}}),T.push(s));const o=1===m?2:1;let p=t;r&&(p=Ym({inputs:{x:t},backend:i,attrs:{shape:[E,1,M]}}),T.push(p));const l=Xm({inputs:{a:s,b:p},backend:i});R=rf({inputs:{x:l},backend:i,attrs:{axis:o,keepDims:!0}}),T.push(l)}else{const p=(0,iu.upcastType)(e.dtype,t.dtype),l=new Hm(b,w,[E,h,m],n,a,N,I,C,A),d=[_,S];if(null!=r&&d.push(r),C&&d.push(s),A){const e=i.makeTensorInfo([],"float32",iu.util.createScalarValue(o,"float32"));d.push(e),T.push(e)}R=i.runWebGLProgram(l,d,p)}const k=Ym({inputs:{x:R},backend:i,attrs:{shape:x}});T.push(R);for(const e of T)i.disposeIntermediateTensorInfo(e);return k}const df={kernelName:iu._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:i,b:r,bias:s,preluActivationWeights:o}=t,{transposeA:p,transposeB:l,activation:d,leakyreluAlpha:u}=a;return lf({a:i,b:r,transposeA:p,transposeB:l,backend:n,bias:s,preluActivationWeights:o,leakyreluAlpha:u,activation:d})}},uf="return abs(x);",cf={kernelName:iu.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=Qh(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let i;return i=(0,iu.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Tm(a.shape,uf):new wm(a.shape,uf),n.runWebGLProgram(i,[a],a.dtype)}},hf=Um({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),mf={kernelName:iu.Acos,backendName:"webgl",kernelFunc:hf},ff=Um({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),gf={kernelName:iu.Acosh,backendName:"webgl",kernelFunc:ff},vf="return a + b;",yf=Gm({opSnippet:vf,packedOpSnippet:vf,supportsComplex:!0,cpuKernelImpl:Eh}),xf={kernelName:iu.Add,backendName:"webgl",kernelFunc:yf};class bf{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${a};\n        setOutput(result);\n      }\n    `}}class wf{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${a};\n        setOutput(result);\n      }\n    `}}const _f={kernelName:iu.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,i=n;if(1===i.length)return km({inputs:{x:i[0]},backend:a});if(i.length>(0,iu.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(i.length/2),n=e({inputs:i.slice(0,t),backend:a}),r=e({inputs:i.slice(t),backend:a});return e({inputs:[n,r],backend:a})}const r=i.map((e=>e.dtype)).reduce(((e,t)=>(0,iu.upcastType)(e,t))),s=i.map((e=>e.shape)),o=(0,iu.env)().getBool("WEBGL_PACK")?new wf(i[0].shape,s):new bf(i[0].shape,s);return a.runWebGLProgram(o,i,r)}},Sf={kernelName:iu.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:r,keepDims:s}=a,o=i.shape.length,p=iu.util.parseAxisParam(r,i.shape);let l=p;const d=iu.backend_util.getAxesPermutation(l,o);let u=i;null!=d&&(u=of({inputs:{x:i},backend:n,attrs:{perm:d}}),l=iu.backend_util.getInnerMostAxes(l.length,o)),iu.backend_util.assertAxesAreInnerMostDims("all",l,o);const[c,h]=iu.backend_util.computeOutAndReduceShapes(u.shape,l),m=Ym({inputs:{x:u},backend:n,attrs:{shape:[-1,iu.util.sizeFromShape(h)]}}),f=ef(m,m.dtype,"all",n);let g;return g=Ym(s?{inputs:{x:f},backend:n,attrs:{shape:iu.backend_util.expandShapeToKeepDim(c,p)}}:{inputs:{x:f},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),null!=d&&n.disposeIntermediateTensorInfo(u),g}},Tf={kernelName:iu.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:r,keepDims:s}=a,o=i.shape.length,p=iu.util.parseAxisParam(r,i.shape);let l=p;const d=iu.backend_util.getAxesPermutation(l,o);let u=i;null!=d&&(u=of({inputs:{x:i},backend:n,attrs:{perm:d}}),l=iu.backend_util.getInnerMostAxes(l.length,o)),iu.backend_util.assertAxesAreInnerMostDims("any",l,o);const[c,h]=iu.backend_util.computeOutAndReduceShapes(u.shape,l),m=Ym({inputs:{x:u},backend:n,attrs:{shape:[-1,iu.util.sizeFromShape(h)]}}),f=ef(m,m.dtype,"any",n);let g;return g=Ym(s?{inputs:{x:f},backend:n,attrs:{shape:iu.backend_util.expandShapeToKeepDim(c,p)}}:{inputs:{x:f},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),null!=d&&n.disposeIntermediateTensorInfo(u),g}};class Ef{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:i,outSize:r}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[i,r];const s="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${a}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${s} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Mf{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,iu.util.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const i=e[e.length-1],r=Math.ceil(i/t);this.outputShape=e.slice(0,-1),r>1&&this.outputShape.push(r),a||this.variableNames.push("bestIndicesA");const s=this.outputShape,o=s.length,p=Ju(o),l=mm("coords",o);let d,u;if(1===r){u=o+1;const e=Ju(u);d=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else u=o,d=`\n        ${p} sourceLocR = coords;\n        ++${l[o-1]};\n        ${p} sourceLocG = coords;\n        ++${l[o-2]};\n        ${p} sourceLocA = coords;\n        --${l[o-1]};\n        ${p} sourceLocB = coords;\n        --${l[o-2]};`;const c=["x","y","z","w","u","v"].slice(0,u),h="."+c[u-1],m=c.map((e=>"int "+e)),f=mm("sourceLocR",u-1).concat("inIdx.r"),g=mm("sourceLocG",u-1).concat("inIdx.g"),v=mm("sourceLocB",u-1).concat("inIdx.b"),y=mm("sourceLocA",u-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",b=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${v.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(\n            getAChannel(${f.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${v.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,_=a?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${c.join()}),\n                                          vec2(${c.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${c.join()}),\n                               vec2(${c.slice(-2).join()}));\n      }\n      ${_}\n      void main() {\n        ${p} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${s[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${s[o-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${b}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Nf(e,t,n,a=null){let i=t.shape[0],r=t.shape[1];null!=a&&(i=a.shape[0],r=a.shape[1]);const s=iu.backend_util.computeOptimalWindowSize(r),o={windowSize:s,inSize:r,batchSize:i,outSize:Math.ceil(r/s)},p=new Ef(o,n,null==a),l=[t];null!=a&&l.push(a);const d=e.runWebGLProgram(p,l,"int32");if(1===d.shape[1])return d;const u=Nf(e,t,n,d);return e.disposeIntermediateTensorInfo(d),u}function Cf(e,t,n,a=null){const i=null!=a?a.shape:t.shape,r=i[i.length-1],s=iu.backend_util.computeOptimalWindowSize(r),o=new Mf(i,s,n,null==a),p=null==a?[t]:[t,a],l=e.runWebGLProgram(o,p,"int32");if(l.shape.length===t.shape.length){const a=Cf(e,t,n,l);return e.disposeIntermediateTensorInfo(l),a}return l}function Af(e,t,n,a){const i=[n];if(iu.backend_util.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),i,t.shape.length),!(0,iu.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],r=e.texData.get(t.dataId);let s=t;null!==r&&r.isPacked&&(s=e.unpackTensor(t),n.push(s));const[o,p]=iu.backend_util.computeOutAndReduceShapes(s.shape,i),l=iu.util.sizeFromShape(p),d=Ym({inputs:{x:s},backend:e,attrs:{shape:[-1,l]}});n.push(d);const u=Nf(e,d,a);n.push(u);const c=Ym({inputs:{x:u},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return Cf(e,t,a)}const If={kernelName:iu.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:r}=a;let s=iu.util.parseAxisParam(r,i.shape);const o=iu.backend_util.getAxesPermutation(s,i.shape.length);let p=i;const l=[];null!=o&&(p=of({inputs:{x:i},backend:n,attrs:{perm:o}}),l.push(p),s=iu.backend_util.getInnerMostAxes(s.length,p.shape.length)),iu.backend_util.assertAxesAreInnerMostDims("argMax",[s[0]],p.shape.length);const d=Af(n,p,s[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Rf={kernelName:iu.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:r}=a;let s=iu.util.parseAxisParam(r,i.shape);const o=iu.backend_util.getAxesPermutation(s,i.shape.length);let p=i;const l=[];null!=o&&(p=of({inputs:{x:i},backend:n,attrs:{perm:o}}),l.push(p),s=iu.backend_util.getInnerMostAxes(s.length,p.shape.length)),iu.backend_util.assertAxesAreInnerMostDims("argMin",[s[0]],p.shape.length);const d=Af(n,p,s[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},kf=Um({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Df={kernelName:iu.Asin,backendName:"webgl",kernelFunc:kf},Pf=Um({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Lf={kernelName:iu.Asinh,backendName:"webgl",kernelFunc:Pf},Of=Um({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Bf={kernelName:iu.Atan,backendName:"webgl",kernelFunc:Of},Ff=Gm({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),$f={kernelName:iu.Atan2,backendName:"webgl",kernelFunc:Ff},Vf=Um({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),zf={kernelName:iu.Atanh,backendName:"webgl",kernelFunc:Vf};class Uf{constructor(e,t,n,a=!1,i=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,p=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const m="avg"===t,f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let v="0.0";if(m||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${s}, ${o});\n        const ivec2 pads = ivec2(${c}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${d};\n              wR += ${p}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${u};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${a?i?f:g:`wR * ${u} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const x=4*Math.floor(r/4),b=r%4,w=`\n      if (${m}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${o});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${d};\n            wR += ${p}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class Gf{constructor(e,t,n,a=!1,i=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const r=e.filterWidth,s=e.strideDepth,o=e.strideHeight,p=e.strideWidth,l=e.dilationDepth,d=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,v=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${s}, ${o}, ${p});\n        const ivec3 pads = ivec3(${f}, ${g}, ${v});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${c};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${d}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${m};\n                  wC += ${u}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${a?i?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${m} +\n                      wR * ${m} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const w=4*Math.floor(r/4),_=r%4,S=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${s}, ${o}, ${p});\n      const ivec3 pads = ivec3(${f}, ${g}, ${v});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${d}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${u};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${u}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${u}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${u}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${u}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${u}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${u}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n          setOutput(${b});\n        }\n      }\n    `}}const Wf={kernelName:iu.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t;Ou(i,"avgPool");const{filterSize:r,strides:s,pad:o,dimRoundingMode:p}=a;iu.util.assert(iu.backend_util.eitherStridesOrDilationsAreOne(s,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const l=iu.backend_util.computePool2DInfo(i.shape,r,s,1,o,p);if(1===l.filterWidth&&1===l.filterHeight&&iu.util.arraysEqual(l.inShape,l.outShape))return km({inputs:{x:i},backend:n});const d=new Uf(l,"avg",!1);return n.runWebGLProgram(d,[i],"float32")}},Hf={kernelName:iu.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{filterSize:r,strides:s,pad:o,dimRoundingMode:p,dataFormat:l}=a,d=iu.backend_util.computePool3DInfo(i.shape,r,s,[1,1,1],o,p,l),u=new Gf(d,"avg",!1);return n.runWebGLProgram(u,[i],"float32")}};class qf{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,i=e.strideWidth,r=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterHeight,p=e.effectiveFilterWidth,l=o-1-e.padInfo.top,d=p-1-e.padInfo.left,u=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float avgMultiplier = float(${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${p};\n            wC+= ${s}) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jf{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,i=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,p=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=d-1-e.padInfo.front,m=u-1-e.padInfo.top,f=c-1-e.padInfo.left,g=1/(t*n*a);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${m}, ${f});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${i}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${p}) {\n            float dyR = float(dyRCorner + wR) / ${r}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Xf={kernelName:iu.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:i,input:r}=t,s=r,{filterSize:o,strides:p,pad:l,dimRoundingMode:d}=a,u=iu.backend_util.computePool3DInfo(s.shape,o,p,[1,1,1],l,d),c=new jf(u);return n.runWebGLProgram(c,[i],s.dtype)}},Kf={kernelName:iu.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:i,input:r}=t,s=r;Ou([i,r],"avgPoolGrad");const{filterSize:o,strides:p,pad:l}=a,d=iu.backend_util.computePool2DInfo(s.shape,o,p,1,l),u=new qf(d);return n.runWebGLProgram(u,[i],s.dtype)}},Yf={kernelName:iu.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:i,b:r}=t,{transposeA:s,transposeB:o}=a;return lf({a:i,b:r,transposeA:s,transposeB:o,backend:n})}};class Zf{constructor(e,t,n,a,i,r){this.outputShape=[],this.variableNames=["x","mean","variance"],iu.backend_util.assertAndGetBroadcastShape(e,t),iu.backend_util.assertAndGetBroadcastShape(e,n);let s="0.0";null!=a&&(iu.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="1.0";null!=i&&(iu.backend_util.assertAndGetBroadcastShape(e,i),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${s};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${r}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Qf{constructor(e,t,n,a,i,r){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],iu.backend_util.assertAndGetBroadcastShape(e,t),iu.backend_util.assertAndGetBroadcastShape(e,n);let s="vec4(0.0)";null!=a&&(iu.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=i&&(iu.backend_util.assertAndGetBroadcastShape(e,i),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${s};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${r}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Jf={kernelName:iu.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,mean:i,variance:r,offset:s,scale:o}=e;iu.util.assert(i.shape.length===r.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),iu.util.assert(null==s||i.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),iu.util.assert(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:p}=n;null==p&&(p=.001);const l=[a,i,r];let d=null;null!=s&&(d=s.shape,l.push(s));let u=null;null!=o&&(u=o.shape,l.push(o));const c=(0,iu.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Qf(a.shape,i.shape,r.shape,d,u,p):new Zf(a.shape,i.shape,r.shape,d,u,p);return t.runWebGLProgram(c,l,l[0].dtype)}};class eg{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Ju(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return tg.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${tg[t]} = start[${t}] + coords.${tg[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${a}\n        setOutput(getSource(${n}));\n      }\n    `}}const tg=["x","y","z","w","u","v"];class ng{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Ju(this.rank),n=mm("coords",this.rank),a=mm("sourceLoc",this.rank),i=1===this.rank?"sourceLoc":`vec2(${a.slice(-2).join()})`,r=`getChannel(getSource(${a.join()}), ${i})`,s=`\n      result.x = ${r};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${a[this.rank-1]};\n        result.y = ${r};\n        --${a[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${a[this.rank-2]};\n        result.z = ${r};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${a[this.rank-1]};\n          result.w = ${r};\n        }\n      }\n    `,p=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${a[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${p}\n        vec4 result = vec4(0.);\n        ${s}\n        ${o}\n        setOutput(result);\n      }\n    `}}function ag(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{begin:r,size:s}=a,[o,p]=iu.slice_util.parseSliceParams(i,r,s);if(iu.slice_util.assertParamsValid(i,o,p),0===iu.util.sizeFromShape(p))return n.makeTensorInfo(p,i.dtype,[]);if(n.shouldExecuteOnCPU([i])||"string"===i.dtype){const e=n.texData.get(i.dataId),t=Jh(e.values,o,p,i.shape,i.dtype);return n.makeTensorInfo(p,i.dtype,t)}const{isPacked:l}=n.texData.get(i.dataId),d=iu.slice_util.isSliceContinous(i.shape,o,p);if(l||!d){const e=(0,iu.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ng(p):new eg(p),t=[o];return n.runWebGLProgram(e,[i],i.dtype,t)}return n.uploadToGPU(i.dataId),function(e,t,n,a){const i=a.texData.get(e.dataId),r=a.makeTensorInfo(n,e.dtype),s=a.texData.get(r.dataId);Object.assign(s,i),s.refCount=1,s.shape=n,s.dtype=e.dtype;let o=iu.slice_util.computeFlatOffset(t,iu.util.computeStrides(e.shape));i.slice&&(o+=i.slice.flatOffset),s.slice={flatOffset:o,origDataId:i.slice&&i.slice.origDataId||e.dataId};const p=a.dataRefCount.get(s.slice.origDataId)||1;return a.dataRefCount.set(s.slice.origDataId,p+1),r}(i,o,p,n)}const ig={kernelName:iu.Slice,backendName:"webgl",kernelFunc:ag},rg={kernelName:iu.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{blockShape:r,crops:s}=a;iu.util.assert(i.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=r.reduce(((e,t)=>e*t)),p=iu.backend_util.getReshaped(i.shape,r,o),l=iu.backend_util.getPermuted(p.length,r.length),d=iu.backend_util.getReshapedPermuted(i.shape,r,o),u=iu.backend_util.getSliceBeginCoords(s,r.length),c=iu.backend_util.getSliceSize(d,s,r.length),h=[],m=Ym({inputs:{x:i},backend:n,attrs:{shape:p}}),f=of({inputs:{x:m},backend:n,attrs:{perm:l}}),g=Ym({inputs:{x:f},backend:n,attrs:{shape:d}}),v=ag({inputs:{x:g},backend:n,attrs:{begin:u,size:c}});return h.push(m),h.push(f),h.push(g),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},sg={kernelName:iu.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,weights:r}=t,{size:s}=a,o=n.readSync(i.dataId),p=n.readSync(r.dataId),l=Mh(o,p,r.dtype,r.shape,s);return n.makeTensorInfo([s],r.dtype,l)}},og={kernelName:iu.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:i}=t,r=n.readSync(a.dataId),s=n.readSync(i.dataId),o=iu.backend_util.assertAndGetBroadcastShape(Array.from(r),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},pg=Gm({opSnippet:"return float(a != b);",cpuKernelImpl:jh,dtype:"bool"}),lg={kernelName:iu.NotEqual,backendName:"webgl",kernelFunc:pg};function dg(e){const{inputs:t,backend:n}=e,{input:a}=t;return km({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const ug={kernelName:iu.Real,backendName:"webgl",kernelFunc:dg},cg={kernelName:iu.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:i}=t,{x:r}=n,{dtype:s}=i;if("complex64"===s){if("complex64"===r.dtype)return km({inputs:{x:r},backend:a});const t=iu.zeros(r.shape),n=e({inputs:{x:r},backend:a,attrs:{dtype:"float32"}}),i=Pm({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),i}if("complex64"===r.dtype){const t=dg({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(t),n}if(!iu.util.hasEncodingLoss(r.dtype,s)){const e=km({inputs:{x:r},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s)return function(e,t){const n=new wm(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(r,a);if("bool"===s){const e=a.makeTensorInfo([],"bool",iu.util.getTypedArrayFromDType("bool",1)),t=pg({inputs:{a:r,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${s}`)}},hg="return ceil(x);",mg=Um({opSnippet:hg,packedOpSnippet:hg,cpuKernelImpl:Ch}),fg={kernelName:iu.Ceil,backendName:"webgl",kernelFunc:mg};class gg{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class vg{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const yg={kernelName:iu.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{clipValueMin:r,clipValueMax:s}=a;let o;o=(0,iu.env)().getBool("WEBGL_PACK_CLIP")?new vg(i.shape):new gg(i.shape);const p=[[r],[s]];return n.runWebGLProgram(o,[i],i.dtype,p)}};class xg{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function bg(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const wg={kernelName:iu.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,i=n.texData.get(a.dataId),r=new xg(a.shape),s=[bg(a,i.complexTensorInfos.real),bg(a,i.complexTensorInfos.imag)];return n.runWebGLProgram(r,s,s[0].dtype)}};class _g{constructor(e){this.outputShape=[],this.outputShape=iu.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const a=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${a}));`)}const a=t.length,i=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${i}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Sg{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=iu.backend_util.computeOutShape(e,t);const n=this.outputShape,a=n.length,i=Ju(a),r=mm("coords",a),s=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const p=s[t],l=s.slice(-2),d=s.join();let u=`if (${p} < ${o[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];u+=`\n        if (${p} < ${o[e]}  && ${p} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${Tg(s,p,t)}),\n            vec2(${Tg(l,p,t)}));\n        }`}const c=o.length,h=o[o.length-1];u+=`\n        return getChannel(\n          getT${c}(${Tg(s,p,h)}),\n          vec2(${Tg(l,p,h)}));`,this.userCode=`\n      float getValue(${s.map((e=>"int "+e))}) {\n        ${u}\n      }\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${r}), 0., 0., 0.);\n\n        ${r[a-1]} = ${r[a-1]} + 1;\n        if (${r[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${r});\n        }\n\n        ${r[a-2]} = ${r[a-2]} + 1;\n        if (${r[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${r});\n        }\n\n        ${r[a-1]} = ${r[a-1]} - 1;\n        if (${r[a-2]} < ${n[a-2]} &&\n            ${r[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${r});\n        }\n        setOutput(result);\n      }\n    `}}function Tg(e,t,n){const a=e.indexOf(t),i=e.map(((e,t)=>t===a?`${e} - ${n}`:e));return i.join()}function Eg(e){const{inputs:t,backend:n}=e,{input:a}=t;return km({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const Mg={kernelName:iu.Imag,backendName:"webgl",kernelFunc:Eg};function Ng(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>dg({inputs:{input:e},backend:n}))),i=e.map((e=>Eg({inputs:{input:e},backend:n}))),r=Ng(a,t,n),s=Ng(i,t,n),o=Pm({inputs:{real:r,imag:s},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),i.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}let i=n.shouldExecuteOnCPU(e);if("string"===a&&(i=!0),i){const i=e.map((e=>{const a=iu.util.sizeFromShape(e.shape.slice(t));return Ym({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),r=i.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),s=iu.backend_util.computeOutShape(i.map((e=>e.shape)),1),o=1===i[0].shape[0],p=Ah(r,s,a,o),l=iu.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(l,a,p);return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}if(e.length>(0,iu.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const a=Math.floor(e.length/2),i=Ng(e.slice(0,a),t,n),r=Ng(e.slice(a),t,n),s=Ng([i,r],t,n);return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(r),s}if((0,iu.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const i=new Sg(e.map((e=>e.shape)),t);return n.runWebGLProgram(i,e,a)}const{tensors2D:r,outShape:s}=function(e,t,n){const a=iu.backend_util.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Ym({inputs:{x:e},attrs:{shape:[-1,iu.util.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:a}}(e,t,n),o=new _g(r.map((e=>e.shape))),p=n.runWebGLProgram(o,r,a);r.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=Ym({inputs:{x:p},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(p),l}function Cg(e){const{inputs:t,backend:n,attrs:a}=e,{axis:i}=a,r=iu.util.parseAxisParam(i,t[0].shape)[0],s=iu.backend_util.computeOutShape(t.map((e=>e.shape)),r);if(0===iu.util.sizeFromShape(s))return n.makeTensorInfo(s,t[0].dtype,[]);const o=t.filter((e=>iu.util.sizeFromShape(e.shape)>0));if(1===o.length)return km({inputs:{x:o[0]},backend:n});const p=o.map((e=>e.shape));return iu.backend_util.assertParamsConsistent(p,r),Ng(o,r,n)}const Ag={kernelName:iu.Concat,backendName:"webgl",kernelFunc:Cg};class Ig{constructor(e,t=!1,n=null,a=!1,i=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const r=e.padInfo.top,s=e.padInfo.left,o=e.strideHeight,p=e.strideWidth,l=e.dilationHeight,d=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=4*Math.floor(e.inChannels/4),m=e.inChannels%4,f="channelsLast"===e.dataFormat,g=f?1:2,v=f?2:3,y=f?3:1;let x="",b="";n&&(x=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${p});\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${v}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${u}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${c}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===m}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===m}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===m}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${b}\n        setOutput(result);\n      }\n    `}}class Rg{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,i=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,p=e.dilationHeight,l=e.dilationWidth,d=e.filterDepth,u=e.filterHeight,c=e.filterWidth,h=4*Math.floor(e.inChannels/4),m=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${i}, ${r}, ${s});\n      const ivec3 pads = ivec3(${t}, ${n}, ${a});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${d}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${u}; wR++) {\n            int xR = xRCorner + wR * ${p};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${c}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===m}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kg{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ic(this.outputShape.length);const{dataFormat:n}=t,a=Fu(),i="channelsLast"===n,r=i?0:1,s=i?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let p="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)p+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${r}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${s}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${i}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${p}\n\n        ${a.output} = result;\n      }\n    `}}function Dg({x:e,filter:t,convInfo:n,backend:a,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:s=0,activation:o=null}){const p=e.shape,l=a.texData.get(e.dataId),d=n.inChannels,u=p[0]*p[1]*p[2],c=n.outChannels,h="channelsLast"===n.dataFormat;let m;const f=[];if((1!==u&&1!==c||!(d>1e3))&&l.isPacked&&h&&null!=l.texture&&p[2]%2!=0&&iu.util.arraysEqual(l.shape.slice(-3),p.slice(-3))){const d=p[0]*p[1]*(p[2]+1),u={dataId:e.dataId,shape:[1,d,n.inChannels],dtype:e.dtype},c=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,iu.util.assert(Iu(l.shape,u.shape),(()=>`packed reshape ${l.shape} to ${u.shape} isn't free`));const h=Ym({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});f.push(h);const g=lf({a:u,b:h,backend:a,transposeA:!1,transposeB:!1,bias:i,activation:o,preluActivationWeights:r,leakyreluAlpha:s}),v=a.texData.get(g.dataId);iu.util.assert(v.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=c,v.shape=n.outShape,m=km({inputs:{x:g},backend:a}),m.shape=n.outShape,f.push(g)}else{const l=Ym({inputs:{x:e},backend:a,attrs:{shape:[1,h?p[0]*p[1]*p[2]:p[0]*p[2]*p[3],n.inChannels]}}),d=Ym({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),u=lf({a:l,b:d,transposeA:!1,transposeB:!1,backend:a,bias:i,activation:o,preluActivationWeights:r,leakyreluAlpha:s});m=Ym({inputs:{x:u},backend:a,attrs:{shape:n.outShape}}),f.push(l),f.push(d),f.push(u)}for(const e of f)a.disposeIntermediateTensorInfo(e);return m}function Pg({x:e,filter:t,convInfo:n,backend:a,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:s=0,activation:o=null}){const{filterWidth:p,filterHeight:l,inChannels:d,outWidth:u,outHeight:c,dataFormat:h}=n,m="channelsLast"===h,f=p*l*d,g=c*u,v=[f,g],y=[],x=Ym({inputs:{x:e},backend:a,attrs:{shape:e.shape.slice(1)}}),b=Ym({inputs:{x:t},backend:a,attrs:{shape:[1,f,iu.util.sizeFromShape(t.shape)/f]}});y.push(x),y.push(b);const w=new kg(v,n),_=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=a.runWebGLProgram(w,[x],"float32",_),T=Ym({inputs:{x:S},backend:a,attrs:{shape:[1,v[0],v[1]]}});y.push(S),y.push(T);const E=null!=i,M=null!=r,N="leakyrelu"===o,C=o?Wm(o,!0):null,A=new Hm(T.shape,b.shape,[1,g,n.outChannels],!0,!1,E,C,M,N),I=[T,b];if(i&&I.push(i),M&&I.push(r),N){const e=a.makeTensorInfo([],"float32",iu.util.createScalarValue(s,"float32"));I.push(e),y.push(e)}const R=a.runWebGLProgram(A,I,"float32"),k=Ym({inputs:{x:R},backend:a,attrs:{shape:m?[1,c,u,n.outChannels]:[1,n.outChannels,c,u]}});y.push(R);for(const e of y)a.disposeIntermediateTensorInfo(e);return k}const Lg={kernelName:iu.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,filter:r}=t,{strides:s,pad:o,dataFormat:p,dilations:l,dimRoundingMode:d}=a,u=iu.backend_util.convertConv2DDataFormat(p),c=iu.backend_util.computeConv2DInfo(i.shape,r.shape,s,l,o,d,!1,u);let h;if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if((0,iu.env)().getBool("WEBGL_CONV_IM2COL")&&1===i.shape[0])h=Pg({x:i,filter:r,convInfo:c,backend:n});else{const e=new Ig(c);h=n.runWebGLProgram(e,[i,r],"float32")}else h=Dg({x:i,filter:r,convInfo:c,backend:n});const m=Ym({inputs:{x:h},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(h),m}};class Og{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,i=e.padInfo.left,r="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${i};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${r}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Bg{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,i=e.strideWidth,r="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,p=r?1:2,l=r?2:3,d=r?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${d}];\n\n        ivec2 dyCorner = ivec2(coords[${p}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${r}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Fg{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,i=e.padInfo.front,r=e.padInfo.top,s=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${i};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${r};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${a} - ${s};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $g{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,i=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=t-1-e.padInfo.front,p=n-1-e.padInfo.top,l=a-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${p}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${i}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${r}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${a}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${a} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Vg={kernelName:iu.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,dy:r}=t,{strides:s,pad:o,dataFormat:p,dimRoundingMode:l,filterShape:d}=a,u=iu.backend_util.convertConv2DDataFormat(p),c=iu.backend_util.computeConv2DInfo(i.shape,d,s,1,o,l,!1,u),h=new Og(c);return n.runWebGLProgram(h,[i,r],"float32")}},zg={kernelName:iu.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:i,filter:r}=t,{inputShape:s,strides:o,pad:p,dataFormat:l,dimRoundingMode:d}=a,u=iu.backend_util.convertConv2DDataFormat(l),c=iu.backend_util.computeConv2DInfo(s,r.shape,o,1,p,d,!1,u),h=new Bg(c);return n.runWebGLProgram(h,[i,r],"float32")}},Ug={kernelName:iu.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,filter:r}=t,{strides:s,pad:o,dilations:p}=a,l=iu.backend_util.computeConv3DInfo(i.shape,r.shape,s,p,o),d=new Rg(l);return n.runWebGLProgram(d,[i,r],"float32")}},Gg={kernelName:iu.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,dy:r}=t,{strides:s,pad:o,filterShape:p}=a,l=iu.backend_util.computeConv3DInfo(i.shape,p,s,1,o),d=new Fg(l);return n.runWebGLProgram(d,[i,r],"float32")}},Wg={kernelName:iu.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:i,filter:r}=t,{pad:s,strides:o,inputShape:p}=a,l=iu.backend_util.computeConv3DInfo(p,r.shape,o,1,s),d=new $g(l);return n.runWebGLProgram(d,[i,r],"float32")}},Hg=Um({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),qg={kernelName:iu.Cos,backendName:"webgl",kernelFunc:Hg},jg=Um({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Xg={kernelName:iu.Cosh,backendName:"webgl",kernelFunc:jg};class Kg{constructor(e,t,n,a,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[r,s,o,p]=e,[l]=t,[d,u]=n;this.outputShape=[l,d,u,p];const c="bilinear"===a?1:0,[h,m]=[s-1+".0",o-1+".0"],[f,g,v]=d>1?[""+(s-1)/(d-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[y,x,b]=u>1?[""+(o-1)/(u-1),"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`\n      const float height_ratio = float(${f});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${r}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${v};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${i}));\n          return;\n        }\n        float in_x = ${b};\n        if( in_x < 0.0 || in_x > ${m} ) {\n          setOutput(float(${i}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${c} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Yg={kernelName:iu.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:i,boxes:r,boxInd:s}=t,{cropSize:o,method:p,extrapolationValue:l}=a,d=new Kg(i.shape,r.shape,o,p,l);return n.runWebGLProgram(d,[i,r,s],"float32")}};class Zg{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const a=e.length,i=t?"0.0":`getX(${Qg(a,"coords")})`,r=e[e.length-1];let s="",o="";t?(s=n?"end != "+(r-1):"end != 0",o=n?"end + 1":"end - 1"):(s=n?`end + pow2 < ${r}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${Ju(a)} coords = getOutputCoords();\n        int end = ${Jg(a,"coords")};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${s}) {\n          int idx = ${o};\n          ${Jg(a,"coords")} = idx;\n          val += getX(${Qg(a,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function Qg(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function Jg(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const ev={kernelName:iu.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:r,exclusive:s,reverse:o}=a,p=i.shape.length,l=iu.backend_util.getAxesPermutation([r],p);let d=i;null!=l&&(d=of({inputs:{x:i},backend:n,attrs:{perm:l}}));const u=iu.backend_util.getInnerMostAxes(1,p)[0];if(u!==p-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${i.shape.length-1} but got axis=${r}`);const c=d.shape[u];let h=km({inputs:{x:d},backend:n});for(let e=0;e<=Math.ceil(Math.log2(c))-1;e++){const t=new Zg(d.shape,!1,o),a=[[e]],i=h;h=n.runWebGLProgram(t,[h],h.dtype,a),n.disposeIntermediateTensorInfo(i)}if(s){const e=new Zg(d.shape,s,o),t=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=of({inputs:{x:h},backend:n,attrs:{perm:iu.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),e}return h}},tv={kernelName:iu.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,weights:r}=t,{size:s,binaryOutput:o}=a;if(1===i.shape.length){const e=n.readSync(i.dataId),t=n.readSync(r.dataId),a=Mh(e,t,r.dtype,r.shape,s);return n.makeTensorInfo([s],r.dtype,a)}if(2===i.shape.length){const e=n.bufferSync(i),t=n.bufferSync(r),a=Nh(e,t,s,o);return n.makeTensorInfo(a.shape,r.dtype,a.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}};class nv{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const av={kernelName:iu.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{blockSize:r,dataFormat:s}=a,o=i.shape[0],p=("NHWC"===s?i.shape[1]:i.shape[2])*r,l=("NHWC"===s?i.shape[2]:i.shape[3])*r,d=("NHWC"===s?i.shape[3]:i.shape[1])/(r*r),u=new nv("NHWC"===s?[o,p,l,d]:[o,d,p,l],r,s);return n.runWebGLProgram(u,[i],i.dtype)}};class iv{constructor(e,t=!1,n=null,a=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ic(this.outputShape.length);const r=e.filterHeight,s=e.filterWidth,o=e.outChannels/e.inChannels;let p="",l="";n&&(p=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${r}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${d}\n        ${l}\n        setOutput(result);\n      }\n    `}}class rv{constructor(e,t=!1,n=null,a=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ic(this.outputShape.length);const r=e.outChannels/e.inChannels,s=e.padInfo.left,o=e.strideWidth,p=e.dilationWidth,l=e.filterHeight,d=e.filterWidth,u=d;let c="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<d;e++)c+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;c+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<d;e++)c+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;c+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(u+1)/2;e++){const t=2*e;if(c+=`\n          xC = xCCorner + ${t*p};\n          `,1===o){if(t<d&&(s%2==1?(c+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,c+=1===p&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):c+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<d)){const e=s%2==0?iu.util.nearestLargerEven(p):p;p%2==0&&s%2==1||p%2!=0&&s%2!=1?(c+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,p>1&&(c+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),c+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):c+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<d&&(s%2==1?(c+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<d&&(c+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(c+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<d&&(c+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<d&&(c+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<d&&(c+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}c+="\n    }\n  ",c+="\n      }\n    ";let h="",m="";n&&(h=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${h}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${r};\n        int q = d2 - d1 * ${r};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${c}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${f}\n        ${m}\n        setOutput(result);\n      }\n    `}}const sv={kernelName:iu.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,filter:r}=t,{strides:s,pad:o,dilations:p,dimRoundingMode:l}=a;let d=p;null==d&&(d=[1,1]),iu.util.assert(iu.backend_util.eitherStridesOrDilationsAreOne(s,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${d}'`));const u=iu.backend_util.computeConv2DInfo(i.shape,r.shape,s,d,o,l,!0);let c;c=(0,iu.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&u.strideWidth<=2&&u.outChannels/u.inChannels==1?new rv(u):new iv(u);const h=[[u.padInfo.top,u.padInfo.left],[u.strideHeight,u.strideWidth],[u.dilationHeight,u.dilationWidth],[u.inHeight,u.inWidth]];return n.runWebGLProgram(c,[i,r],"float32",h)}};class ov{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,i=e.padInfo.left,r=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${r} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${i};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pv{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,i=e.strideWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const lv={kernelName:iu.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,dy:r}=t,{strides:s,dilations:o,pad:p,dimRoundingMode:l,filterShape:d}=a,u=iu.backend_util.computeConv2DInfo(i.shape,d,s,o,p,l,!0),c=new ov(u);return n.runWebGLProgram(c,[i,r],"float32")}},dv={kernelName:iu.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:i,filter:r}=t,{strides:s,dilations:o,pad:p,dimRoundingMode:l,inputShape:d}=a,u=iu.backend_util.computeConv2DInfo(d,r.shape,s,o,p,l,!0),c=new pv(u);return n.runWebGLProgram(c,[i,r],"float32")}};class uv{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const cv={kernelName:iu.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,i=[...a.shape,...a.shape],r=iu.util.sizeFromShape(a.shape),s=Ym({inputs:{x:a},backend:n,attrs:{shape:[r]}}),o=new uv(r),p=n.runWebGLProgram(o,[s],s.dtype),l=Ym({inputs:{x:p},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(p),l}};class hv{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:i,strideWidth:r,filterHeight:s,filterWidth:o,dilationHeight:p,dilationWidth:l}=e,{top:d,left:u}=a;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${r});\n      const ivec2 pads = ivec2(${d}, ${u});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${s}; h++) {\n          int hIn = hBeg + h * ${p};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const mv={kernelName:iu.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,filter:r}=t,{strides:s,pad:o,dilations:p}=a,l=iu.backend_util.computeDilation2DInfo(i.shape,r.shape,s,o,"NHWC",p);let d;const u=new hv(l);d=n.runWebGLProgram(u,[i,r],"float32");const c=Ym({inputs:{x:d},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(d),c}},fv={kernelName:iu.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:i}=a,r=t,{allDims:s,summedDims:o,idDims:p}=iu.backend_util.decodeEinsumEquation(i,r.length);iu.backend_util.checkEinsumDimSizes(s.length,p,r);const{path:l,steps:d}=iu.backend_util.getEinsumComputePath(o,p),u=d.length;let c=null,h=s.length;const m=[];for(let e=0;e<u;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:a}=iu.backend_util.getEinsumPermutation(h,p[t]);let i;iu.backend_util.isIdentityPermutation(e)?i=r[t]:(i=of({inputs:{x:r[t]},backend:n,attrs:{perm:e}}),m.push(i));const s=i.shape.slice();for(let e=0;e<a.length;++e)s.splice(a[e],0,1);iu.util.arraysEqual(i.shape,s)||(i=Ym({inputs:{x:i},backend:n,attrs:{shape:s}}),m.push(i)),null===c?c=i:(c=Xm({inputs:{a:i,b:c},backend:n}),m.push(c))}e<u-1&&(l[e]>=0&&(c=rf({inputs:{x:c},backend:n,attrs:{axis:l[e]-(s.length-h),keepDims:!1}}),m.push(c)),h--)}for(const e of m)e!==c&&n.disposeIntermediateTensorInfo(e);return c}},gv=Um({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),vv={kernelName:iu.Elu,backendName:"webgl",kernelFunc:gv},yv={kernelName:iu.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:i}=t,r=(0,iu.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rm("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,i.shape):new Im("return (b >= 1.0) ? a : a * (b + 1.0);",a.shape,i.shape);return n.runWebGLProgram(r,[a,i],a.dtype)}},xv=Gm({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Ih}),bv={kernelName:iu.Equal,backendName:"webgl",kernelFunc:xv},wv=Um({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${iu.backend_util.ERF_P};\n  float a1 = ${iu.backend_util.ERF_A1};\n  float a2 = ${iu.backend_util.ERF_A2};\n  float a3 = ${iu.backend_util.ERF_A3};\n  float a4 = ${iu.backend_util.ERF_A4};\n  float a5 = ${iu.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),_v={kernelName:iu.Erf,backendName:"webgl",kernelFunc:wv},Sv=Um({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Rh,dtype:"float32"}),Tv={kernelName:iu.Exp,backendName:"webgl",kernelFunc:Sv};function Ev(e){const{inputs:t,attrs:n,backend:a}=e,{dim:i}=n,{input:r}=t,s=r.shape.length,o=r.shape.slice();let p=i;return i<0&&(iu.util.assert(-(s+1)<=i,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),p=s+i+1),o.splice(p,0,1),Ym({inputs:{x:r},backend:a,attrs:{shape:o}})}const Mv={kernelName:iu.ExpandDims,backendName:"webgl",kernelFunc:Ev},Nv="return exp(x) - 1.0;",Cv=Um({opSnippet:Nv,packedOpSnippet:Nv,cpuKernelImpl:kh}),Av={kernelName:iu.Expm1,backendName:"webgl",kernelFunc:Cv};class Iv{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const i=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,r=n?`${a}.0`:"1.0";let s;if("real"===e)s="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);s="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${i};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${s}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${a});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${a}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${r};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Rv(e,t,n){const a=n.texData.get(e.dataId),i=iu.util.sizeFromShape(e.shape),r=e.shape[e.shape.length-1],s=Ym({inputs:{x:e},backend:n,attrs:{shape:[i/r,r]}}),o=s.shape,p=new Iv("real",o,t),l=new Iv("imag",o,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o}],u=n.runWebGLProgram(p,d,"float32"),c=n.runWebGLProgram(l,d,"float32"),h=Pm({inputs:{real:u,imag:c},backend:n});n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c);const m=Ym({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(h),m}const kv={kernelName:iu.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return Rv(a,!1,n)}};class Dv{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Pv(e){const{backend:t,attrs:n}=e,{shape:a,value:i}=n;let{dtype:r}=n;if(r=r||iu.util.inferDtype(i),"string"===r){const e=iu.util.getArrayFromDType(r,iu.util.sizeFromShape(a));return e.fill(i),t.makeTensorInfo(a,r,e)}{const e=new Dv(a,i),n=[[i]];return t.runWebGLProgram(e,[],r,n)}}const Lv={kernelName:iu.Fill,backendName:"webgl",kernelFunc:Pv};class Ov{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Bv={kernelName:iu.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,a=t,i=new Ov(n.shape);return a.runWebGLProgram(i,[n],n.dtype)}},Fv="return floor(x);",$v=Um({opSnippet:Fv,packedOpSnippet:Fv,cpuKernelImpl:Dh}),Vv={kernelName:iu.Floor,backendName:"webgl",kernelFunc:$v},zv=Gm({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Uv={kernelName:iu.FloorDiv,backendName:"webgl",kernelFunc:zv};class Gv{constructor(e){this.variableNames=["A"];const t=Fu(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Wv{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Fu(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${a}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Hv={kernelName:iu.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:i}=t;const{numChannels:r}=a,s="undefined"!=typeof HTMLVideoElement&&i instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&i instanceof HTMLImageElement,[p,l]=s?[i.videoWidth,i.videoHeight]:[i.width,i.height],d=[l,p],u=[l,p,r];(o||s)&&(null==qv&&(qv=document.createElement("canvas").getContext("2d")),qv.canvas.width=p,qv.canvas.height=l,qv.drawImage(i,0,0,p,l),i=qv.canvas);const c=n.makeTensorInfo(d,"int32");n.texData.get(c.dataId).usage=lu.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(c.dataId),i);const h=(0,iu.env)().getBool("WEBGL_PACK")?new Wv(u):new Gv(u),m=n.runWebGLProgram(h,[c],"int32");return n.disposeData(c.dataId),m}};let qv;const jv={kernelName:iu.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,filter:r,bias:s,preluActivationWeights:o}=t,{strides:p,pad:l,dataFormat:d,dilations:u,dimRoundingMode:c,activation:h,leakyreluAlpha:m}=a,f=iu.backend_util.convertConv2DDataFormat(d),g=iu.backend_util.computeConv2DInfo(i.shape,r.shape,p,u,l,c,!1,f);let v;const y=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if((0,iu.env)().getBool("WEBGL_CONV_IM2COL")&&1===i.shape[0])v=Pg({x:i,filter:r,convInfo:g,backend:n,bias:s,activation:h,preluActivationWeights:o,leakyreluAlpha:m});else{const e=null!=s,t=null!=o,a="leakyrelu"===h,p=h?Wm(h,!1):null,l=new Ig(g,e,p,t,a),d=[i,r];if(s&&d.push(s),o&&d.push(o),a){const e=n.makeTensorInfo([],"float32",iu.util.createScalarValue(m,"float32"));d.push(e),y.push(e)}v=n.runWebGLProgram(l,d,"float32")}else v=Dg({x:i,filter:r,convInfo:g,backend:n,bias:s,activation:h,preluActivationWeights:o,leakyreluAlpha:m});const x=Ym({inputs:{x:v},backend:n,attrs:{shape:g.outShape}});return y.push(v),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},Xv={kernelName:iu.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,filter:r,bias:s,preluActivationWeights:o}=t,{strides:p,pad:l,dilations:d,dimRoundingMode:u,activation:c,leakyreluAlpha:h}=a,m=[];let f=d;null==f&&(f=[1,1]),iu.util.assert(iu.backend_util.eitherStridesOrDilationsAreOne(p,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${p} and dilations '${f}'`));const g=iu.backend_util.computeConv2DInfo(i.shape,r.shape,p,f,l,u,!0),v=(0,iu.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,y=c?Wm(c,v):null,x=[i,r],b=null!=s,w=null!=o,_="leakyrelu"===c;if(b&&x.push(s),w&&x.push(o),_){const e=n.makeTensorInfo([],"float32",iu.util.createScalarValue(h,"float32"));x.push(e),m.push(e)}let S;S=v?new rv(g,b,y,w,_):new iv(g,b,y,w,_);const T=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],E=n.runWebGLProgram(S,x,"float32",T);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),E}};class Kv{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const a=Ju(t.length),i=Ju(n.length),r=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${a} strides = ${a}(${this.strides});\n         void main() {\n          ${i} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${r};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Yv={kernelName:iu.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:i}=t,r=i.shape,s=r[r.length-1],o=iu.util.sizeFromShape(a.shape),[p,l,d,u]=iu.backend_util.prepareAndValidate(a,i),c=Ym({inputs:{x:i},backend:n,attrs:{shape:[l,s]}}),h=Ym({inputs:{x:a},backend:n,attrs:{shape:[iu.util.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const e=n.readSync(i.dataId),t=n.bufferSync(a),r=Ph(e,t,a.dtype,l,s,d,u,a.shape,o);return n.makeTensorInfo(p,a.dtype,r.values)}const m=new Kv(s,u,[l,d]),f=n.runWebGLProgram(m,[h,c],h.dtype),g=Ym({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),g}};class Zv{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Ju(this.rank),a=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let t=0;t<e.length;t++)2===t?a.push("index"):a.push(`${n[t]}`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${a}));\n      }\n    `}}function Qv(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,indices:r}=t,{axis:s,batchDims:o}=a,p=iu.util.parseAxisParam(s,i.shape)[0];if((0,iu.env)().get("DEBUG")){const e=n.readSync(r.dataId),t=i.shape[p];for(let n=0;n<e.length;++n){const a=e[n];iu.util.assert(a<=t-1&&a>=0,(()=>`GatherV2: the index value ${a} is not in [0, ${t-1}]`))}}const l=iu.backend_util.segment_util.collectGatherOpShapeInfo(i,r,p,o),d=iu.util.sizeFromShape(r.shape),u=[],c=Ym({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),h=Ym({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,d/l.batchSize]}});u.push(c),u.push(h);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([i,r])||"string"===i.dtype){const e=n.bufferSync(h),t=n.bufferSync(c),a=Lh(t,e,m);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,a.dtype,a.values)}const f=new Zv(c.shape,m),g=n.runWebGLProgram(f,[c,h],c.dtype);u.push(g);const v=Ym({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}const Jv={kernelName:iu.GatherV2,backendName:"webgl",kernelFunc:Qv},ey=Gm({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Oh,dtype:"bool"}),ty={kernelName:iu.Greater,backendName:"webgl",kernelFunc:ey},ny=Gm({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Bh}),ay={kernelName:iu.GreaterEqual,backendName:"webgl",kernelFunc:ny},iy={kernelName:iu.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return Rv(a,!0,n)}},ry=Um({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),sy={kernelName:iu.IsFinite,backendName:"webgl",kernelFunc:ry},oy=Um({opSnippet:"return float(isinf(x));",dtype:"bool"}),py={kernelName:iu.IsInf,backendName:"webgl",kernelFunc:oy},ly=Um({opSnippet:"return float(isnan(x));",dtype:"bool"}),dy={kernelName:iu.IsNan,backendName:"webgl",kernelFunc:ly},uy=Gm({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Fh,dtype:"bool"}),cy={kernelName:iu.Less,backendName:"webgl",kernelFunc:uy},hy=Gm({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:$h,dtype:"bool"}),my={kernelName:iu.LessEqual,backendName:"webgl",kernelFunc:hy},fy={kernelName:iu.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:i,num:r}=n,s=Vh(a,i,r);return t.makeTensorInfo([s.length],"float32",s)}},gy=Um({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:zh}),vy={kernelName:iu.Log,backendName:"webgl",kernelFunc:gy},yy=Um({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),xy={kernelName:iu.Log1p,backendName:"webgl",kernelFunc:yy},by=Gm({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),wy={kernelName:iu.LogicalAnd,backendName:"webgl",kernelFunc:by},_y=Um({opSnippet:"return float(!(x >= 1.0));"}),Sy={kernelName:iu.LogicalNot,backendName:"webgl",kernelFunc:_y},Ty=Gm({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Ey={kernelName:iu.LogicalOr,backendName:"webgl",kernelFunc:Ty};class My{constructor(e,t,n,a,i){this.variableNames=["x"],this.outputShape=[];const r=t,s=e[3]-1;let o;this.outputShape=e;const p=`float(${n}) + float(${a}) * sum`;o=.5===i?`inversesqrt(${p})`:1===i?`1.0/(${p})`:`exp(log(${p}) * float(-${i}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${r}; j <= ${r}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${s}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Ny{constructor(e,t,n,a,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const r=t,s=e[3]-1;let o;this.outputShape=e;const p=`float(${n}) + float(${a}) * sum`;o=.5===i?`inversesqrt(${p})`:1===i?`1.0/(${p})`:`exp(log(${p}) * float(-${i}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${r};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${r}; j <= ${r}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const Cy={kernelName:iu.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{depthRadius:r,bias:s,alpha:o,beta:p}=a,l=(0,iu.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Ny(i.shape,r,s,o,p):new My(i.shape,r,s,o,p);return n.runWebGLProgram(l,[i],i.dtype)}};class Ay{constructor(e,t,n,a,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=i,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${a}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${a})\n                * float(${i})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${i});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Iy={kernelName:iu.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:i,y:r,dy:s}=t,{depthRadius:o,bias:p,alpha:l,beta:d}=a,u=new Ay(i.shape,o,p,l,d);return n.runWebGLProgram(u,[i,r,s],i.dtype)}};function Ry(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{reductionIndices:r,keepDims:s}=a,o=i.shape.length,p=iu.util.parseAxisParam(r,i.shape);let l=p;const d=iu.backend_util.getAxesPermutation(l,o),u=null!=d,c=n.shouldExecuteOnCPU([i]);let h=i;if(u){if(c){const e=n.texData.get(h.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=i.shape[d[e]];const a=um(e,i.shape,i.dtype,d,t);h=n.makeTensorInfo(t,i.dtype),n.texData.get(h.dataId).values=a}else h=af(i,d,n);l=iu.backend_util.getInnerMostAxes(l.length,o)}iu.backend_util.assertAxesAreInnerMostDims("max",l,o);const[m,f]=iu.backend_util.computeOutAndReduceShapes(h.shape,l);let g,v=m;if(s&&(v=iu.backend_util.expandShapeToKeepDim(m,p)),c){const e=n.texData.get(h.dataId).values,t=Uh(e,iu.util.sizeFromShape(f),v,i.dtype);g=n.makeTensorInfo(v,i.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const i=iu.util.sizeFromShape(t),r=Ym({inputs:{x:e},attrs:{shape:[iu.util.sizeFromShape(e.shape)/i,i]},backend:a}),s=ef(r,e.dtype,"max",a),o=Ym({inputs:{x:s},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(s),o}(h,f,v,n);return u&&n.disposeIntermediateTensorInfo(h),g}const ky={kernelName:iu.Max,backendName:"webgl",kernelFunc:Ry},Dy=Gm({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Gh}),Py={kernelName:iu.Maximum,backendName:"webgl",kernelFunc:Dy},Ly={kernelName:iu.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t;Ou(i,"maxPool");const{filterSize:r,strides:s,pad:o,dimRoundingMode:p}=a;iu.util.assert(iu.backend_util.eitherStridesOrDilationsAreOne(s,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const l=iu.backend_util.computePool2DInfo(i.shape,r,s,1,o,p);if(1===l.filterWidth&&1===l.filterHeight&&iu.util.arraysEqual(l.inShape,l.outShape))return km({inputs:{x:i},backend:n});const d=new Uf(l,"max",!1);return n.runWebGLProgram(d,[i],i.dtype)}},Oy={kernelName:iu.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{filterSize:r,strides:s,pad:o,dataFormat:p,dimRoundingMode:l}=a,d=iu.backend_util.computePool3DInfo(i.shape,r,s,[1,1,1],o,l,p),u=new Gf(d,"max",!1);return n.runWebGLProgram(u,[i],i.dtype)}};class By{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,i=e.effectiveFilterHeight,r=e.effectiveFilterWidth,s=i-1-e.padInfo.top,o=r-1-e.padInfo.left,p=i*r-1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n          wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${r}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${p} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${r} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Fy{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,r=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterDepth,p=e.effectiveFilterHeight,l=e.effectiveFilterWidth,d=o-1-e.padInfo.front,u=p-1-e.padInfo.top,c=l-1-e.padInfo.left,h=o*p*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${r}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${s}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${p} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const $y={kernelName:iu.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:i,input:r}=t,s=r,{filterSize:o,strides:p,pad:l,dimRoundingMode:d}=a,u=iu.backend_util.computePool3DInfo(s.shape,o,p,[1,1,1],l,d),c=new Gf(u,"max",!0),h=n.runWebGLProgram(c,[s],s.dtype),m=new Fy(u),f=n.runWebGLProgram(m,[i,h],s.dtype);return n.disposeIntermediateTensorInfo(h),f}},Vy={kernelName:iu.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:i,input:r,output:s}=t,o=r;Ou([r,s],"maxPoolGrad");const{filterSize:p,strides:l,pad:d,dimRoundingMode:u}=a,c=iu.backend_util.computePool2DInfo(o.shape,p,l,1,d,u),h=new Uf(c,"max",!0),m=n.runWebGLProgram(h,[o],o.dtype),f=new By(c),g=n.runWebGLProgram(f,[i,m],o.dtype);return n.disposeIntermediateTensorInfo(m),g}},zy={kernelName:iu.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:i,strides:r,pad:s,includeBatchInIndex:o}=t,p=n;iu.util.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));const l=[1,1];iu.util.assert(iu.backend_util.eitherStridesOrDilationsAreOne(r,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${l}'`));const d=iu.backend_util.computePool2DInfo(a.shape,i,r,l,s),[u,c]=function(e,t,n,a){let i=new Uf(n,"max",!1);const r=a.runWebGLProgram(i,[e],"float32");return i=new Uf(n,"max",!0,!0,t),[r,a.runWebGLProgram(i,[e],"float32")]}(a,o,d,p);return[u,c]}},Uy={kernelName:iu.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{keepDims:i,axis:r}=t,s=n,o=a.shape.length,p=iu.util.parseAxisParam(r,a.shape);let l=p;const d=iu.backend_util.getAxesPermutation(l,o),u=null!=d,c=s.shouldExecuteOnCPU([a]),h=[];let m=a;if(u){if(c){const e=s.texData.get(m.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[d[e]];const n=um(e,a.shape,a.dtype,d,t);m=s.makeTensorInfo(t,a.dtype),s.texData.get(m.dataId).values=n}else m=af(a,d,s);h.push(m),l=iu.backend_util.getInnerMostAxes(l.length,o)}iu.backend_util.assertAxesAreInnerMostDims("sum",l,o);const[f,g]=iu.backend_util.computeOutAndReduceShapes(m.shape,l);let v=f;i&&(v=iu.backend_util.expandShapeToKeepDim(f,p));const y=function(e,t,n,a){const i=iu.util.sizeFromShape(t),r=Ym({inputs:{x:e},attrs:{shape:[iu.util.sizeFromShape(e.shape)/i,i]},backend:a}),s=ef(r,"float32","mean",a),o=Ym({inputs:{x:s},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(s),o}(m,g,v,s);for(const e of h)s.disposeIntermediateTensorInfo(e);return y}},Gy={kernelName:iu.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:r,keepDims:s}=a,o=i.shape.length,p=iu.util.parseAxisParam(r,i.shape);let l=p;const d=iu.backend_util.getAxesPermutation(l,o);let u=i;null!=d&&(u=of({inputs:{x:i},backend:n,attrs:{perm:d}}),l=iu.backend_util.getInnerMostAxes(l.length,i.shape.length)),iu.backend_util.assertAxesAreInnerMostDims("min",l,o);const[c,h]=iu.backend_util.computeOutAndReduceShapes(u.shape,l),m=Ym({inputs:{x:u},backend:n,attrs:{shape:[-1,iu.util.sizeFromShape(h)]}}),f=ef(m,m.dtype,"min",n);let g;return g=Ym(s?{inputs:{x:f},backend:n,attrs:{shape:iu.backend_util.expandShapeToKeepDim(c,p)}}:{inputs:{x:f},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),null!=d&&n.disposeIntermediateTensorInfo(u),g}},Wy=Gm({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Wh}),Hy={kernelName:iu.Minimum,backendName:"webgl",kernelFunc:Wy};class qy{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,i=Ju(a),r=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),p="reflect"===n?0:1;this.userCode=1!==a?`\n      ${i} start = ${i}(${r});\n      ${i} end = ${i}(${s});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        for (int i = 0; i < ${a}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${p};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${p};\n          }\n        }\n        ${i} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${r};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${p};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${p};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class jy{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,i=Ju(a),r=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=mm("rc",a),p=mm("source",a),l=`${o[a-1]} < ${this.outputShape[a-1]}`,d=1===a?"source":`vec2(${p.slice(-2).join()})`,u="reflect"===n?0:1;let c="";if(1===a){const e=`\n        ${i} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${u};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${u};\n        }\n        source -= start;\n      `;c=`\n        ${i} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${p.join()}), ${d});\n        ${o[a-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${p.join()}), ${d});\n        }\n      `}else{const e=`\n        ${i} source = rc;\n        ${i} lt = ${i}(lessThan(source, start));\n        ${i} gte = ${i}(greaterThanEqual(source, end));\n        ${i} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${u}) +\n                gte * ((end - 1) * 2 - source + ${u});\n        source -= start;\n      `;c=`\n        ${i} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${p.join()}), ${d});\n        ${o[a-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${p.join()}), ${d});\n        }\n        rc = outputLoc;\n        ${o[a-2]} += 1;\n        if(${o[a-2]} < ${this.outputShape[a-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${p.join()}), ${d});\n          ${o[a-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${p.join()}), ${d});\n          }\n        }\n      `}this.userCode=`\n      const ${i} start = ${i}(${r});\n      const ${i} end = ${i}(${s});\n\n      void main() {\n        ${i} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}}const Xy={kernelName:iu.MirrorPad,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{paddings:i,mode:r}=n,s=(0,iu.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jy(a.shape,i,r):new qy(a.shape,i,r);return t.runWebGLProgram(s,[a],a.dtype)}},Ky=Gm({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Yy={kernelName:iu.Mod,backendName:"webgl",kernelFunc:Ky};class Zy{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const Qy=Gm({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Jy={kernelName:iu.RealDiv,backendName:"webgl",kernelFunc:Qy},ex="return a - b;",tx=Gm({opSnippet:ex,packedOpSnippet:ex,supportsComplex:!0,cpuKernelImpl:pm}),nx={kernelName:iu.Sub,backendName:"webgl",kernelFunc:tx};function ax(e){const{inputs:t,backend:n,attrs:a}=e,{logits:i}=t,{dim:r}=a,s=iu.util.parseAxisParam([r],i.shape),o=Ry({inputs:{x:i},backend:n,attrs:{reductionIndices:s,keepDims:!1}}),p=iu.backend_util.expandShapeToKeepDim(o.shape,s),l=Ym({inputs:{x:o},backend:n,attrs:{shape:p}}),d=tx({inputs:{a:i,b:l},backend:n}),u=Sv({inputs:{x:d},backend:n}),c=rf({inputs:{x:u},backend:n,attrs:{axis:s,keepDims:!1}}),h=Ym({inputs:{x:c},backend:n,attrs:{shape:p}}),m=Qy({inputs:{a:u,b:h},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),m}const ix={kernelName:iu.Softmax,backendName:"webgl",kernelFunc:ax},rx={kernelName:iu.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:i}=t,{numSamples:r,seed:s,normalized:o}=a,p=o?i:ax({inputs:{logits:i},backend:n,attrs:{dim:i.shape.length-1}}),l=p.shape[0],d=p.shape[1],u=new Zy(l,d,r),c=[[s]],h=n.runWebGLProgram(u,[p],"int32",c);return o||n.disposeIntermediateTensorInfo(p),h}},sx={kernelName:iu.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,i]=qh(e.values,a.shape,a.dtype);return n.makeTensorInfo(i,a.dtype,t)}let i;return i=(0,iu.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Tm(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new wm(a.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(i,[a],a.dtype)}},ox=iu.kernel_impls.nonMaxSuppressionV3Impl,px={kernelName:iu.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){iu.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:i,scores:r}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:p}=a,l=n.readSync(i.dataId),d=n.readSync(r.dataId),{selectedIndices:u}=ox(l,d,s,o,p);return n.makeTensorInfo([u.length],"int32",new Int32Array(u))}},lx=iu.kernel_impls.nonMaxSuppressionV4Impl,dx={kernelName:iu.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){iu.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:i,scores:r}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:p,padToMaxOutputSize:l}=a,d=n.readSync(i.dataId),u=n.readSync(r.dataId),{selectedIndices:c,validOutputs:h}=lx(d,u,s,o,p,l);return[n.makeTensorInfo([c.length],"int32",new Int32Array(c)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},ux=iu.kernel_impls.nonMaxSuppressionV5Impl,cx={kernelName:iu.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){iu.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:i,scores:r}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:p,softNmsSigma:l}=a,d=n.readSync(i.dataId),u=n.readSync(r.dataId),c=s,h=o,m=p,f=l,{selectedIndices:g,selectedScores:v}=ux(d,u,c,h,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([v.length],"float32",new Float32Array(v))]}};class hx{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${a}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const mx={kernelName:iu.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:i}=t,{depth:r,onValue:s,offValue:o}=a,p=iu.util.sizeFromShape(i.shape),l=new hx(p,r,s,o),d=Ym({inputs:{x:i},backend:n,attrs:{shape:[p]}}),u=n.runWebGLProgram(l,[d],i.dtype);n.disposeIntermediateTensorInfo(d);const c=Ym({inputs:{x:u},backend:n,attrs:{shape:[...i.shape,r]}});return n.disposeIntermediateTensorInfo(u),c}};function fx(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=dg({inputs:{input:a},backend:n}),t=fx({inputs:{x:e},backend:n}),i=Eg({inputs:{input:a},backend:n}),r=fx({inputs:{x:i},backend:n}),s=Pm({inputs:{real:t,imag:r},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(r),s}return Pv({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const gx={kernelName:iu.ZerosLike,backendName:"webgl",kernelFunc:fx},vx={kernelName:iu.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:i}=n;if("string"===i.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===i.dtype){const t=dg({inputs:{input:i},backend:a}),n=e({inputs:{x:t},backend:a}),r=Eg({inputs:{input:i},backend:a}),s=fx({inputs:{x:r},backend:a}),o=Pm({inputs:{real:n,imag:s},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(s),o}return Pv({attrs:{shape:i.shape,dtype:i.dtype,value:1},backend:a})}},yx={kernelName:iu.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:i}=a;if(1===t.length)return Ev({inputs:{input:t[0]},backend:n,attrs:{dim:i}});const r=t[0].shape,s=t[0].dtype;t.forEach((e=>{iu.util.assertShapesMatch(r,e.shape,"All tensors passed to stack must have matching shapes"),iu.util.assert(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],p=Cg({inputs:t.map((e=>{const t=Ev({inputs:{input:e},backend:n,attrs:{dim:i}});return o.push(t),t})),backend:n,attrs:{axis:i}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};class xx{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,i=Ju(a),r=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?`\n      ${i} start = ${i}(${r});\n      ${i} end = ${i}(${s});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${i} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${r};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class bx{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,i=Ju(a),r=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=mm("rc",a),p=mm("source",a),l=`${o[a-1]} < ${this.outputShape[a-1]}`,d=1===a?"source":`vec2(${p.slice(-2).join()})`,u=[`${i} rc = outputLoc;`,`${o[a-1]} += 1;\n       if(${l}) {\n      `,1===a?"":`}\n       rc = outputLoc;\n       ${o[a-2]} += 1;\n       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,1===a?"":`  ${o[a-1]} += 1;\n         if(${l}) {`],c=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let e=0,t=1===a?2:4;e<t;e++)h+=`\n        ${u[e]}\n        if (${c}) {\n          result[${e}] = float(value);\n        } else {\n          ${i} source = rc - start;\n          result[${e}] = getChannel(getX(${p.join()}), ${d});\n        }\n      `;h+=1===a?"} ":"}}",this.userCode=`\n      const ${i} start = ${i}(${r});\n      const ${i} end = ${i}(${s});\n\n      void main() {\n        ${i} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const wx=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{paddings:r,constantValue:s}=a;if(0===iu.util.sizeFromShape(i.shape))return Pv({backend:n,attrs:{shape:r.map(((e,t)=>e[0]+i.shape[t]+e[1])),value:s,dtype:i.dtype}});const o=(0,iu.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bx(i.shape,r,s):new xx(i.shape,r,s),p=[[s]];return n.runWebGLProgram(o,[i],i.dtype,p)},_x={kernelName:iu.PadV2,backendName:"webgl",kernelFunc:wx},Sx=Gm({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Tx={kernelName:iu.Pow,backendName:"webgl",kernelFunc:Sx},Ex={kernelName:iu.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:r,keepDims:s}=a,o=i.shape.length,p=[],l=iu.util.parseAxisParam(r,i.shape);let d=l;const u=iu.backend_util.getAxesPermutation(d,o);let c,h=i;if(null!=u&&(h=of({inputs:{x:i},backend:n,attrs:{perm:u}}),d=iu.backend_util.getInnerMostAxes(d.length,o),p.push(h)),iu.backend_util.assertAxesAreInnerMostDims("prod",d,o),n.shouldExecuteOnCPU([h])){const e=n.texData.get(h.dataId).values,{outVals:t,outShape:a,outDtype:i}=Xh(h.shape,h.dtype,e,d);c=n.makeTensorInfo(a,i,t)}else{const[e,t]=iu.backend_util.computeOutAndReduceShapes(h.shape,d),a=iu.util.sizeFromShape(t),r=Ym({inputs:{x:h},backend:n,attrs:{shape:[-1,a]}}),s=ef(r,(0,iu.sumOutType)(i.dtype),"prod",n);c=Ym({inputs:{x:s},backend:n,attrs:{shape:e}}),p.push(r),p.push(s)}if(s){p.push(c);const e=iu.backend_util.expandShapeToKeepDim(c.shape,l);c=Ym({inputs:{x:c},backend:n,attrs:{shape:e}})}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},Mx=e=>{const{backend:t,attrs:n}=e,{start:a,stop:i,step:r,dtype:s}=n,o=Kh(a,i,r,s);return t.makeTensorInfo([o.length],s,o)},Nx={kernelName:iu.Range,backendName:"webgl",kernelFunc:Mx},Cx=Um({opSnippet:"return 1.0 / x;"}),Ax={kernelName:iu.Reciprocal,backendName:"webgl",kernelFunc:Cx},Ix=Um({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Rx={kernelName:iu.Relu,backendName:"webgl",kernelFunc:Ix},kx=Um({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Dx={kernelName:iu.Relu6,backendName:"webgl",kernelFunc:kx};class Px{constructor(e,t,n,a,i){this.variableNames=["A"],this.outputShape=[];const[r,s,o,p]=e;this.outputShape=[r,t,n,p];const l=[a&&t>1?s-1:s,a&&n>1?o-1:o],d=[a&&t>1?t-1:t,a&&n>1?n-1:n];let u;u=i?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/d[0]},\n          ${l[1]/d[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Lx{constructor(e,t,n,a,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,s,o,p]=e;this.outputShape=[r,t,n,p];const l=[a&&t>1?s-1:s,a&&n>1?o-1:o],d=[a&&t>1?t-1:t,a&&n>1?n-1:n];let u;u=i?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/d[0]},\n          ${l[1]/d[1]},\n          ${l[1]/d[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${p-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Ox={kernelName:iu.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:i}=t,{alignCorners:r,halfPixelCenters:s,size:o}=a,[p,l]=o,d=(0,iu.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Lx(i.shape,p,l,r,s):new Px(i.shape,p,l,r,s);return n.runWebGLProgram(d,[i],"float32")}};class Bx{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,i]=t,[,r,s]=e,o=[n&&r>1?a-1:a,n&&s>1?i-1:i],p=[n&&r>1?r-1:r,n&&s>1?s-1:s],l=o[0]/p[0],d=o[1]/p[1],u=1/l,c=1/d,h=2*Math.ceil(u)+2,m=2*Math.ceil(c)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${u});\n        const float invWidthScale = float(${c});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${m});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${r}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Fx={kernelName:iu.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:i,dy:r}=t,{alignCorners:s}=a,o=new Bx(r.shape,i.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}};class $x{constructor(e,t,n,a,i){this.variableNames=["A"],this.outputShape=[];const[r,s,o,p]=e;this.outputShape=[r,t,n,p];const l=[a&&t>1?s-1:s,a&&n>1?o-1:o],d=[a&&t>1?t-1:t,a&&n>1?n-1:n],u=a?"0.5":"0.0";let c;c=i?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/d[0]},\n          ${l[1]/d[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${c};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${u})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Vx{constructor(e,t,n,a,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,s,o,p]=e;this.outputShape=[r,t,n,p];const l=[a&&t>1?s-1:s,a&&n>1?o-1:o],d=[a&&t>1?t-1:t,a&&n>1?n-1:n],u=a?"0.5":"0.0";let c;c=i?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/d[0]},\n          ${l[1]/d[1]},\n          ${l[1]/d[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${c};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${u})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${p-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const zx={kernelName:iu.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:i}=t,{alignCorners:r,halfPixelCenters:s,size:o}=a,[p,l]=o,d=(0,iu.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Vx(i.shape,p,l,r,s):new $x(i.shape,p,l,r,s);return n.runWebGLProgram(d,[i],i.dtype)}};class Ux{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,i]=t,[,r,s]=e,o=[n&&r>1?a-1:a,n&&s>1?i-1:i],p=[n&&r>1?r-1:r,n&&s>1?s-1:s],l=o[0]/p[0],d=o[1]/p[1],u=1/l,c=1/d,h=2*Math.ceil(u)+2,m=2*Math.ceil(c)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${u});\n        const float invWidthScale = float(${c});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${m});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${r}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${p[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${p[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${i}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Gx={kernelName:iu.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:i,dy:r}=t,{alignCorners:s}=a,o=new Ux(r.shape,i.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}};class Wx{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(a))).join(","),i=Ju(n);this.userCode=`\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class Hx{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const a=mm("rc",n),i=`${a[n-1]} + 1 < ${this.outputShape[n-1]}`,r=`${a[n-2]} + 1 < ${this.outputShape[n-2]}`,s=Ju(n);function o(n){const a=e.map(((a,i)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${a[n]} - 1`:`${a[n]}`}(i,n)));return`getChannel(getX(${a.join(",")}), vec2(${a.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${i}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${s} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(a.slice())};\n          if(${i}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(a.slice())};\n          }\n          if(${r}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(a.slice())};\n            if(${i}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(a.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const qx={kernelName:iu.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{dims:r}=a,s=i.shape.length,o=iu.util.parseAxisParam(r,i.shape);if(0===s)return km({inputs:{x:i},backend:n});const p=(0,iu.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Hx(i.shape,o):new Wx(i.shape,o);return n.runWebGLProgram(p,[i],i.dtype)}};class jx{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let i="";i="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${i}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Xx={kernelName:iu.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:i,fillValue:r,center:s}=t,o=n,p=new jx(a.shape,r),[l,d]=iu.backend_util.getImageCenter(s,a.shape[1],a.shape[2]),u=[[l,d,Math.sin(i),Math.cos(i)]];return o.runWebGLProgram(p,[a],a.dtype,u)}},Kx=Um({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Yx={kernelName:iu.Round,backendName:"webgl",kernelFunc:Kx},Zx=Um({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Yh}),Qx={kernelName:iu.Rsqrt,backendName:"webgl",kernelFunc:Zx};class Jx{constructor(e,t,n,a,i,r,s=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=r;const o=Ju(i.length),p=Ju(r.length);let l="";1===n?l="i":2===n&&(l="i, j");const d=`getIndices(${l})`;let u="";1===a?u="i":2===a&&(u="i, coords[1]");const c=`getUpdates(${u})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${i});\n\n        void main() {\n          ${p} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${d});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${c};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const eb={kernelName:iu.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:i,updates:r}=t,{shape:s}=a,{sliceRank:o,numUpdates:p,sliceSize:l,strides:d,outputSize:u}=iu.backend_util.calculateShapes(r,i,s),c=[u/l,l];if(0===u)return n.makeTensorInfo(s,i.dtype);const h=Ym({inputs:{x:i},backend:n,attrs:{shape:[p,o]}}),m=Ym({inputs:{x:r},backend:n,attrs:{shape:[p,l]}}),f=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new Jx(p,o,h.shape.length,m.shape.length,d,c),v=n.runWebGLProgram(g,[m,h,f],m.dtype),y=Ym({inputs:{x:v},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(f),y}};class tb{constructor(e,t,n){let a,i;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)i="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],s=[];for(let a=0;a<t.length;a++)s.push(`${n[a]}`),a<e&&r.push(`${n[a]}`);a=r.join(),i=s.join()}const r=Ju(n);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        float cVal = getC(${a});\n        if (cVal >= 1.0) {\n          setOutput(getA(${i}));\n        } else {\n          setOutput(getB(${i}));\n        }\n      }\n    `}}const nb={kernelName:iu.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:i,e:r}=t,s=new tb(a.shape.length,i.shape,i.shape.length);return n.runWebGLProgram(s,[a,i,r],(0,iu.upcastType)(i.dtype,r.dtype))}},ab=Um({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${iu.backend_util.SELU_SCALEALPHA};\n  float scale = ${iu.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),ib={kernelName:iu.Selu,backendName:"webgl",kernelFunc:ab},rb=Um({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Zh}),sb={kernelName:iu.Sigmoid,backendName:"webgl",kernelFunc:rb},ob=Um({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),pb={kernelName:iu.Sign,backendName:"webgl",kernelFunc:ob},lb=Um({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),db={kernelName:iu.Sin,backendName:"webgl",kernelFunc:lb},ub=Um({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),cb={kernelName:iu.Sinh,backendName:"webgl",kernelFunc:ub},hb=Um({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),mb={kernelName:iu.Softplus,backendName:"webgl",kernelFunc:hb},fb={kernelName:iu.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{blockShape:r,paddings:s}=a;iu.util.assert(i.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=r.reduce(((e,t)=>e*t)),p=[[0,0]];p.push(...s);for(let e=1+r.length;e<i.shape.length;++e)p.push([0,0]);const l=[],d=wx({inputs:{x:i},backend:n,attrs:{paddings:p,constantValue:0}}),u=iu.backend_util.getReshaped(d.shape,r,o,!1),c=iu.backend_util.getPermuted(u.length,r.length,!1),h=iu.backend_util.getReshapedPermuted(d.shape,r,o,!1),m=Ym({inputs:{x:d},backend:n,attrs:{shape:u}}),f=of({inputs:{x:m},backend:n,attrs:{perm:c}}),g=Ym({inputs:{x:f},backend:n,attrs:{shape:h}});return l.push(d),l.push(m),l.push(f),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},gb={kernelName:iu.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:i,denseShape:r,defaultValue:s}=t;if(1!==r.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${r.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${a.shape}`);if(1!==i.shape.length)throw new Error(`Values must be a vector, saw:\n         ${i.shape}`);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${s.shape}`);const o=n.readSync(a.dataId),p=n.readSync(i.dataId),l=n.readSync(r.dataId),d=n.readSync(s.dataId)[0],[u,c,h,m,f]=em(o,a.shape,a.dtype,p,i.dtype,l,d);return[n.makeTensorInfo(c,a.dtype,u),n.makeTensorInfo([c[0]],i.dtype,h),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map((e=>Number(e))))),n.makeTensorInfo([f.length],a.dtype,new Int32Array(f))]}},vb={kernelName:iu.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:i,newShape:r}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==i.shape.length)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(1!==r.shape.length)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const s=Array.from(n.readSync(i.dataId)),o=n.readSync(a.dataId),p=Array.from(n.readSync(r.dataId)),[l,d,u]=tm(o,a.shape,a.dtype,s,p);return[n.makeTensorInfo(d,a.dtype,l),n.makeTensorInfo([u.length],r.dtype,new Int32Array(u))]}},yb={kernelName:iu.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:i,segmentIds:r}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${i.shape}`);if(1!==r.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${r.shape}`);const s=n.readSync(a.dataId),o=n.readSync(i.dataId),p=n.readSync(r.dataId),[l,d]=nm(s,a.shape,a.dtype,o,p,!0);return n.makeTensorInfo(d,a.dtype,l)}},xb={kernelName:iu.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:i,segmentIds:r}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${i.shape}`);if(1!==r.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${r.shape}`);const s=n.readSync(a.dataId),o=n.readSync(i.dataId),p=n.readSync(r.dataId),[l,d]=nm(s,a.shape,a.dtype,o,p);return n.makeTensorInfo(d,a.dtype,l)}},bb={kernelName:iu.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:i,sparseValues:r,defaultValue:s}=t,{outputShape:o}=a,{sliceRank:p,numUpdates:l,strides:d,outputSize:u}=iu.backend_util.calculateShapes(r,i,o),c=new Jx(l,p,i.shape.length,r.shape.length,d,[u,1],!1),h=n.runWebGLProgram(c,[r,i,s],r.dtype),m=Ym({inputs:{x:h},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),m}},wb={kernelName:iu.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{numOrSizeSplits:r,axis:s}=a,o=iu.util.parseAxisParam(s,i.shape)[0],p=iu.backend_util.prepareSplitSize(i,r,o),l=i.shape.length,d=new Array(l).fill(0),u=i.shape.slice();return p.map((e=>{const t=[...u];t[o]=e;const a=ag({inputs:{x:i},backend:n,attrs:{begin:d,size:t}});return d[o]+=e,a}))}},_b="return sqrt(x);",Sb=Um({opSnippet:_b,packedOpSnippet:_b,cpuKernelImpl:am}),Tb={kernelName:iu.Sqrt,backendName:"webgl",kernelFunc:Sb},Eb=Um({opSnippet:"return x * x;"}),Mb={kernelName:iu.Square,backendName:"webgl",kernelFunc:Eb},Nb="return (a - b) * (a - b);",Cb=Gm({opSnippet:Nb,packedOpSnippet:Nb}),Ab={kernelName:iu.SquaredDifference,backendName:"webgl",kernelFunc:Cb},Ib={kernelName:iu.Step,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:a}=e,i=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,r=new wm(a.shape,i);return n.runWebGLProgram(r,[a],a.dtype)}};class Rb{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,i=Ju(n.length),r=Ju(n.length);let s="";if(1===a)s="coords * strides + begin";else{let e=0;s=n.map(((t,a)=>(e++,1===n.length?`coords * strides[${a}] + begin[${a}]`:`coords[${e-1}] * strides[${a}] + begin[${a}]`))).join(",")}this.userCode=`\n      ${i} begin = ${i}(${e});\n      ${i} strides = ${i}(${t});\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}const kb={kernelName:iu.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{begin:r,end:s,strides:o,beginMask:p,endMask:l,ellipsisMask:d,newAxisMask:u,shrinkAxisMask:c}=a,{finalShapeSparse:h,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:v,begin:y,end:x,strides:b}=iu.slice_util.sliceInfo(i.shape,r,s,o,p,l,d,u,c);let w;if(f)w=Ym({inputs:{x:i},backend:n,attrs:{shape:m}});else if(g||v){iu.util.assert(i.shape.length>=1,(()=>`Input must have rank at least 1, got: ${i.shape.length}`));const e=iu.slice_util.computeOutShape(y,x,b),t=ag({inputs:{x:i},backend:n,attrs:{begin:y,size:e}});w=Ym({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([i])){const e=n.readSync(i.dataId),t=(0,iu.buffer)(i.shape,i.dtype,e),a=im(h,t,b,y);w=n.makeTensorInfo(m,i.dtype,a.values)}else{const e=new Rb(y,b,h);w=n.runWebGLProgram(e,[i],i.dtype)}const _=Ym({inputs:{x:w},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(w),_}},Db={kernelName:iu.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:i,nGramWidths:r,leftPad:s,rightPad:o,padWidth:p,preserveShortSequences:l}=a,{data:d,dataSplits:u}=t,c=n.readSync(d.dataId),h=n.readSync(u.dataId),[m,f]=rm(c,h,i,r,s,o,p,l);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(u.shape,"int32",f)]}},Pb={kernelName:iu.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:i}=a,{input:r,delimiter:s}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(1!==r.shape.length)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(0!==s.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);const o=n.readSync(r.dataId),p=n.readSync(s.dataId)[0],[l,d,u]=sm(o,p,i),c=d.length;return[n.makeTensorInfo([c,2],"int32",l),n.makeTensorInfo([c],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(u))]}},Lb={kernelName:iu.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:i}=a,{input:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const s=n.readSync(r.dataId),o=om(s,i);return n.makeTensorInfo(r.shape,"int32",o)}},Ob=Um({opSnippet:"return tan(x);"}),Bb={kernelName:iu.Tan,backendName:"webgl",kernelFunc:Ob},Fb=Um({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),$b={kernelName:iu.Tanh,backendName:"webgl",kernelFunc:Fb};class Vb{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const a=Ju(this.rank),i=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let t=0;t<e.length;t++)a.push(`imod(${n[t]}, ${e[t]})`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${i}));\n      }\n    `}}function zb(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{reps:r}=a;if("string"===i.dtype||i.shape.length>5){const e=n.readSync(i.dataId),t="string"===i.dtype?e.map((e=>iu.util.decodeString(e))):e,a=(0,iu.buffer)(i.shape,i.dtype,t),s=lm(a,r);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const s=new Vb(i.shape,r);return n.runWebGLProgram(s,[i],i.dtype)}const Ub={kernelName:iu.Tile,backendName:"webgl",kernelFunc:zb};class Gb{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Wb{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Hb(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function qb(e){let t=1;for(;t<e;)t*=2;return t}const jb={kernelName:iu.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{k:r,sorted:s}=a,o=(0,iu.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),p=(0,iu.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=i.shape,d=l[l.length-1];if(n.shouldExecuteOnCPU([i])||d<o||r>p){const e=n.readSync(i.dataId),[t,a]=dm(e,l,i.dtype,r,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===r)return l[l.length-1]=0,[n.makeTensorInfo(l,i.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===d)return[i,Pv({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const u=n.texData.get(i.dataId),c=null!==u&&u.isPacked,h=c?n.unpackTensor(i):i,m=iu.util.sizeFromShape(l)/d,f=Ym({inputs:{x:h},attrs:{shape:[m,d]},backend:n});c&&Hb(n,h);const g=qb(r),v=qb(d);let y=null;const x=()=>null===y?[f,f]:[f,y],b=(e,t,a)=>{const i=x(),r=new Gb(a),s=[[d],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=y;y=n.runWebGLProgram(r,i,"int32",s),Hb(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)b(t,n,[m,v])}for(let e=v;e>g;e/=2){const t=x(),a=new Wb([m,e/2]),i=[[d],[null===y?1:0],[g]],r=y;y=n.runWebGLProgram(a,t,"int32",i),Hb(n,r);const s=g/2,o=2*s;for(let e=s;e>=1;e/=2)b(o,e,y.shape)}let w=y;y=ag({inputs:{x:y},backend:n,attrs:{begin:0,size:[m,r]}}),Hb(n,w);let _=Qv({inputs:{x:f,indices:y},backend:n,attrs:{axis:1,batchDims:1}});Hb(n,f);const S=l.slice(0,-1);S.push(r),w=y,y=Ym({inputs:{x:y},attrs:{shape:S},backend:n}),Hb(n,w);const T=_;return _=Ym({inputs:{x:_},attrs:{shape:S},backend:n}),Hb(n,T),[_,y]}};class Xb{constructor(e,t,n,a,i,r){this.variableNames=["Image","Transforms"],this.outputShape=r;const s="nearest"===n?1:2;let o;switch(a){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${i});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${i});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${s} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Kb={kernelName:iu.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:i,transforms:r}=t,{interpolation:s,fillMode:o,fillValue:p,outputShape:l}=a,[d,u,c,h]=i.shape,[m,f]=null!=l?l:[u,c],g=new Xb(u,c,s,o,p,[d,m,f,h]);return n.runWebGLProgram(g,[i,r],"float32")}},Yb={kernelName:iu.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:i}=n,{x:r}=t;Ou(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=a.readSync(r.dataId),{outputValues:o,outputShape:p,indices:l}=cm(s,i,r.shape,r.dtype);return[a.makeTensorInfo(p,r.dtype,o),a.makeTensorInfo([l.length],"int32",l)]}},Zb={kernelName:iu.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:i}=t;let{axis:r}=a;r<0&&(r+=i.shape.length);const s=i,o=s.shape.length,p=i.shape[r],l=new Array(o-1);let d=0;for(let e=0;e<o;e++)e!==r&&(l[d++]=s.shape[e]);const u=[],c=new Array(o).fill(0),h=s.shape.slice();h[r]=1;const m=new Array(p);for(let e=0;e<m.length;e++){c[r]=e;const t=ag({inputs:{x:s},backend:n,attrs:{begin:c,size:h}}),a=Ym({inputs:{x:t},backend:n,attrs:{shape:l}});m[e]=a,u.push(t)}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}};class Qb{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,i=e.inSize,r=e.numSegments,s=r*Math.ceil(i/n);this.outputShape=[a,s];const o=4*Math.floor(n/4),p=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let d="";i%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return initializationValue;\n        }\n      `);let u="";i%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${u}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${r})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${r})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===p}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===p}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===p}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const Jb=[df,cf,mf,gf,xf,_f,Sf,Tf,If,Rf,Df,Lf,Bf,$f,zf,Wf,Hf,Xf,Kf,Yf,Jf,rg,sg,og,cg,fg,yg,Lm,wg,Ag,Lg,Vg,zg,Ug,Gg,Wg,qg,Xg,Yg,ev,tv,av,sv,lv,dv,cv,mv,fv,vv,yv,bv,_v,Tv,Mv,Av,kv,Lv,Bv,Vv,Uv,Hv,jv,Xv,Yv,Jv,ty,ay,Dm,iy,Mg,sy,py,dy,Fm,cy,my,fy,vy,xy,wy,Sy,Ey,Cy,Iy,ky,Py,Ly,Oy,$y,Vy,zy,Uy,Gy,Hy,Xy,Yy,rx,Km,sx,px,dx,cx,lg,mx,vx,yx,_x,Tx,zm,Ex,Nx,ug,Jy,Ax,Rx,Dx,Zm,Ox,Fx,zx,Gx,qx,Xx,Yx,Qx,eb,nb,ib,sb,pb,db,cb,ig,ix,mb,fb,gb,vb,yb,xb,bb,wb,Tb,Mb,Ab,Ib,kb,Db,Pb,Lb,nx,sf,Bb,$b,Ub,jb,Kb,pf,Yb,Zb,{kernelName:iu.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,segmentIds:r}=t,{numSegments:s}=a,o=i.shape.length,p=[];let l=0;const d=iu.backend_util.getAxesPermutation([l],o);let u=i;null!=d&&(u=of({inputs:{x:i},backend:n,attrs:{perm:d}}),p.push(u),l=iu.backend_util.getInnerMostAxes(1,o)[0]);const c=iu.backend_util.segment_util.computeOutShape(u.shape,l,s),h=iu.util.sizeFromShape([u.shape[l]]),m=Ym({inputs:{x:u},backend:n,attrs:{shape:[-1,h]}});p.push(m);const f=(0,iu.sumOutType)(i.dtype),g=(e,t,a,i,r)=>{const s=e.shape[0],o=e.shape[1],l=iu.backend_util.segment_util.segOpComputeOptimalWindowSize(o,r),d=new Qb({windowSize:l,inSize:o,batchSize:s,numSegments:r},t),u=n.compileAndRun(d,[e,a],i);if(p.push(u),u.shape[1]===r)return u;const c=Mx({backend:n,attrs:{start:0,stop:r,step:1,dtype:"float32"}}),h=zb({inputs:{x:c},backend:n,attrs:{reps:[o/l]}});return p.push(c),p.push(h),g(u,t,h,i,r)},v=Ym({inputs:{x:g(m,"unsortedSegmentSum",r,f,s)},backend:n,attrs:{shape:c}});let y=v;if(null!=d){p.push(v);const e=iu.backend_util.getUndoAxesPermutation(d);y=of({inputs:{x:y},backend:n,attrs:{perm:e}})}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},gx];for(const e of Jb)(0,iu.registerKernel)(e);var ew,tw;(0,iu.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(ew||(ew={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(tw||(tw={}));const nw=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],aw=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],iw=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],rw=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],sw=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],ow=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],pw=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],lw=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],dw=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],uw=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],cw=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],hw=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],mw=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],fw=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],gw=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],vw=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],yw=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],xw=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],bw=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var ww,_w,Sw;n(6407),n(3135),n(5228),n(4841),n(1274),n(9322),n(9165),n(827),n(4513),n(632),n(3453),n(5265),n(6235),n(7839),n(1470),n(2421),n(1891),n(7037),n(9812),n(369),n(6825),n(1661),n(173),n(2699),n(3233),n(4650),n(4842),n(3426),n(6943),n(2597),n(7474),n(4386),n(7370),n(9036),n(766),n(7409),n(7809),n(5503),n(625),n(9331),n(4434),n(3254),n(3694),n(3261),n(248),n(1869),n(1173),n(2279),n(3582),n(2634),n(9451),n(9133),n(8151),n(6230),n(1355),n(4794),n(2277),n(1405),n(4718),n(473),n(5176),n(1174),n(6877),n(1749),n(5020),n(557),n(4006),n(4135),n(686),n(6708),n(4917),n(7846),n(5002),n(7245),n(3596),n(9640),n(6577),n(4885),n(2271),n(6380),n(6567),n(3243),n(9608),n(6092),n(9494),n(6477),n(6500),n(636),n(7630),n(6573),n(624),n(2856),n(8651),n(5750),n(5912),n(8687),n(4653),n(9065),n(7505),n(9648),n(682),n(1510),n(9758),n(3307),n(5130),n(5735),n(5475),n(781),n(2998),n(47),n(7394),n(7405),n(3865),n(5746),n(6884),n(4926),n(7486),n(2676),n(5158),n(9590),n(4968),n(2991),n(4136),n(7501),n(8644),n(3100),n(7494),n(7020),n(8447),n(3710),n(4415),n(1300),n(1483),n(9682),n(7918),n(8441),n(9112),n(8247),n(8194),n(4866),n(9208),n(9137),function(e){e[e.Thumb=0]="Thumb",e[e.Index=1]="Index",e[e.Middle=2]="Middle",e[e.Ring=3]="Ring",e[e.Pinky=4]="Pinky"}(ww||(ww={})),function(e){e.all=[e.Thumb,e.Index,e.Middle,e.Ring,e.Pinky];const t={[e.Thumb]:"Thumb",[e.Index]:"Index",[e.Middle]:"Middle",[e.Ring]:"Ring",[e.Pinky]:"Pinky"},n={[e.Thumb]:[[0,1],[1,2],[2,3],[3,4]],[e.Index]:[[0,5],[5,6],[6,7],[7,8]],[e.Middle]:[[0,9],[9,10],[10,11],[11,12]],[e.Ring]:[[0,13],[13,14],[14,15],[15,16]],[e.Pinky]:[[0,17],[17,18],[18,19],[19,20]]};e.getName=function(e){return t[e]},e.getPoints=function(e){return n[e]||!1}}(ww||(ww={})),function(e){e[e.NoCurl=0]="NoCurl",e[e.HalfCurl=1]="HalfCurl",e[e.FullCurl=2]="FullCurl"}(_w||(_w={})),function(e){const t={[e.NoCurl]:"No Curl",[e.HalfCurl]:"Half Curl",[e.FullCurl]:"Full Curl"};e.getName=function(e){return t[e]}}(_w||(_w={})),function(e){e[e.VerticalUp=0]="VerticalUp",e[e.VerticalDown=1]="VerticalDown",e[e.HorizontalLeft=2]="HorizontalLeft",e[e.HorizontalRight=3]="HorizontalRight",e[e.DiagonalUpRight=4]="DiagonalUpRight",e[e.DiagonalUpLeft=5]="DiagonalUpLeft",e[e.DiagonalDownRight=6]="DiagonalDownRight",e[e.DiagonalDownLeft=7]="DiagonalDownLeft"}(Sw||(Sw={})),function(e){const t={0:"Vertical Up",1:"Vertical Down",2:"Horizontal Left",3:"Horizontal Right",4:"Diagonal Up Right",5:"Diagonal Up Left",6:"Diagonal Down Right",7:"Diagonal Down Left"};e.getName=function(e){return t[e]}}(Sw||(Sw={}));class Tw{name;curls;directions;weights;weightsRelative;constructor(e){this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}addCurl(e,t,n){void 0===this.curls[e]&&(this.curls[e]=[]),this.curls[e].push([t,n])}addDirection(e,t,n){void 0===this.directions[e]&&(this.directions[e]=[]),this.directions[e].push([t,n])}setWeight(e,t){this.weights[e]=t;const n=this.weights.reduce(((e,t)=>e+t),0);this.weightsRelative=this.weights.map((e=>5*e/n))}matchAgainst(e,t){let n=0;for(const t in e){const a=e[t],i=this.curls[t];if(void 0!==i){for(const[e,r]of i)if(a==e){n+=r*this.weightsRelative[t];break}}else n+=this.weightsRelative[t]}for(const e in t){const a=t[e],i=this.directions[e];if(void 0!==i){for(const[t,r]of i)if(a==t){n+=r*this.weightsRelative[e];break}}else n+=this.weightsRelative[e]}return n}}const Ew=new Tw("victory");Ew.addCurl(ww.Thumb,_w.HalfCurl,.5),Ew.addCurl(ww.Thumb,_w.NoCurl,.5),Ew.addDirection(ww.Thumb,Sw.VerticalUp,1),Ew.addDirection(ww.Thumb,Sw.DiagonalUpLeft,1),Ew.addCurl(ww.Index,_w.NoCurl,1),Ew.addDirection(ww.Index,Sw.VerticalUp,.75),Ew.addDirection(ww.Index,Sw.DiagonalUpLeft,1),Ew.addCurl(ww.Middle,_w.NoCurl,1),Ew.addDirection(ww.Middle,Sw.VerticalUp,1),Ew.addDirection(ww.Middle,Sw.DiagonalUpLeft,.75),Ew.addCurl(ww.Ring,_w.FullCurl,1),Ew.addDirection(ww.Ring,Sw.VerticalUp,.2),Ew.addDirection(ww.Ring,Sw.DiagonalUpLeft,1),Ew.addDirection(ww.Ring,Sw.HorizontalLeft,.2),Ew.addCurl(ww.Pinky,_w.FullCurl,1),Ew.addDirection(ww.Pinky,Sw.VerticalUp,.2),Ew.addDirection(ww.Pinky,Sw.DiagonalUpLeft,1),Ew.addDirection(ww.Pinky,Sw.HorizontalLeft,.2),Ew.setWeight(ww.Index,2),Ew.setWeight(ww.Middle,2);const Mw=new Tw("thumbs_up");Mw.addCurl(ww.Thumb,_w.NoCurl,1),Mw.addDirection(ww.Thumb,Sw.VerticalUp,1),Mw.addDirection(ww.Thumb,Sw.DiagonalUpLeft,.25),Mw.addDirection(ww.Thumb,Sw.DiagonalUpRight,.25);for(const e of[ww.Index,ww.Middle,ww.Ring,ww.Pinky])Mw.addCurl(e,_w.FullCurl,1),Mw.addDirection(e,Sw.HorizontalLeft,1),Mw.addDirection(e,Sw.HorizontalRight,1);const Nw=new Tw("fist");Nw.addCurl(ww.Thumb,_w.FullCurl,1),Nw.addCurl(ww.Index,_w.FullCurl,1),Nw.addCurl(ww.Middle,_w.FullCurl,1),Nw.addCurl(ww.Ring,_w.FullCurl,1),Nw.addCurl(ww.Pinky,_w.FullCurl,1);const Cw=new Tw("five");Cw.addCurl(ww.Thumb,_w.NoCurl,1),Cw.addDirection(ww.Thumb,Sw.VerticalUp,.5),Cw.addDirection(ww.Thumb,Sw.DiagonalUpLeft,.1),Cw.addDirection(ww.Thumb,Sw.DiagonalUpRight,.5),Cw.addCurl(ww.Index,_w.NoCurl,1),Cw.addDirection(ww.Index,Sw.VerticalUp,1),Cw.addDirection(ww.Index,Sw.DiagonalUpLeft,.5),Cw.addDirection(ww.Index,Sw.DiagonalUpRight,.5),Cw.addCurl(ww.Middle,_w.NoCurl,1),Cw.addDirection(ww.Middle,Sw.VerticalUp,1),Cw.addDirection(ww.Middle,Sw.DiagonalUpLeft,.5),Cw.addDirection(ww.Middle,Sw.DiagonalUpRight,.5),Cw.addCurl(ww.Ring,_w.NoCurl,1),Cw.addDirection(ww.Ring,Sw.VerticalUp,1),Cw.addDirection(ww.Ring,Sw.DiagonalUpLeft,.5),Cw.addDirection(ww.Ring,Sw.DiagonalUpRight,.5),Cw.addCurl(ww.Pinky,_w.NoCurl,1),Cw.addDirection(ww.Pinky,Sw.VerticalUp,1),Cw.addDirection(ww.Pinky,Sw.DiagonalUpLeft,.5),Cw.addDirection(ww.Pinky,Sw.DiagonalUpRight,.5),Sl.y,_l.L.gesture,Sl.K;var Aw=function(e,t){return(Aw=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function Iw(e,t){function n(){this.constructor=e}Aw(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var Rw=function(){return(Rw=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};function kw(e,t,n,a){return new(n||(n=Promise))((function(i,r){function s(e){try{p(a.next(e))}catch(e){r(e)}}function o(e){try{p(a.throw(e))}catch(e){r(e)}}function p(e){e.done?i(e.value):new n((function(t){t(e.value)})).then(s,o)}p((a=a.apply(e,t||[])).next())}))}function Dw(e,t){var n,a,i,r,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function o(r){return function(o){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,a&&(i=2&r[0]?a.return:r[0]?a.throw||((i=a.return)&&i.call(a),0):a.next)&&!(i=i.call(a,r[1])).done)return i;switch(a=0,i&&(r=[2&r[0],i.value]),r[0]){case 0:case 1:i=r;break;case 4:return s.label++,{value:r[1],done:!1};case 5:s.label++,a=r[1],r=[0];continue;case 7:r=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===r[0]||2===r[0])){s=0;continue}if(3===r[0]&&(!i||r[1]>i[0]&&r[1]<i[3])){s.label=r[1];break}if(6===r[0]&&s.label<i[1]){s.label=i[1],i=r;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(r);break}i[2]&&s.ops.pop(),s.trys.pop();continue}r=t.call(e,s)}catch(e){r=[6,e],a=0}finally{n=i=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,o])}}}var Pw=function(){function e(e,t){this.model=e,this.outputStride=t;var n=this.model.inputs[0].shape;iu.util.assert(-1===n[1]&&-1===n[2],(function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"}))}return e.prototype.predict=function(e){var t=this;return(0,iu.tidy)((function(){var n=t.preprocessInput((0,iu.cast)(e,"float32")),a=(0,iu.expandDims)(n,0),i=t.model.predict(a).map((function(e){return(0,iu.squeeze)(e,[0])})),r=t.nameOutputResults(i);return{heatmapScores:(0,iu.sigmoid)(r.heatmap),offsets:r.offsets,displacementFwd:r.displacementFwd,displacementBwd:r.displacementBwd}}))},e.prototype.dispose=function(){this.model.dispose()},e}();function Lw(e){return Math.floor(e/2)}!function(e){function t(){return null!==e&&e.apply(this,arguments)||this}Iw(t,e),t.prototype.preprocessInput=function(e){return(0,iu.tidy)((function(){return(0,iu.sub)((0,iu.div)(e,127.5),1)}))},t.prototype.nameOutputResults=function(e){return{offsets:e[0],heatmap:e[1],displacementFwd:e[2],displacementBwd:e[3]}}}(Pw);var Ow=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(Lw(e),e);)this.exchange(e,Lw(e)),e=Lw(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function Bw(e,t,n,a,i,r){for(var s=r.shape,o=s[0],p=s[1],l=!0,d=Math.max(n-i,0),u=Math.min(n+i+1,o),c=d;c<u;++c){for(var h=Math.max(a-i,0),m=Math.min(a+i+1,p),f=h;f<m;++f)if(r.get(c,f,e)>t){l=!1;break}if(!l)break}return l}var Fw=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],$w=Fw.length,Vw=Fw.reduce((function(e,t,n){return e[t]=n,e}),{});function zw(e,t,n,a){return{y:a.get(e,t,n),x:a.get(e,t,n+$w)}}function Uw(e,t,n){var a=zw(e.heatmapY,e.heatmapX,e.id,n),i=a.y,r=a.x;return{x:e.heatmapX*t+r,y:e.heatmapY*t+i}}function Gw(e,t,n){return e<t?t:e>n?n:e}function Ww(e,t){return{x:e.x+t.x,y:e.y+t.y}}[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((function(e){var t=e[0],n=e[1];return[Vw[t],Vw[n]]}));var Hw=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map((function(e){var t=e[0],n=e[1];return[Vw[t],Vw[n]]})),qw=Hw.map((function(e){return e[1]})),jw=Hw.map((function(e){return e[0]}));function Xw(e,t,n,a){return{y:Gw(Math.round(e.y/t),0,n-1),x:Gw(Math.round(e.x/t),0,a-1)}}function Kw(e,t,n,a,i,r,s,o){void 0===o&&(o=2);for(var p=a.shape,l=p[0],d=p[1],u=function(e,t,n){var a=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,a+e)}}(e,Xw(t.position,r,l,d),s),c=Ww(t.position,u),h=0;h<o;h++){var m=Xw(c,r,l,d),f=zw(m.y,m.x,n,i);c=Ww({x:m.x*r,y:m.y*r},{x:f.x,y:f.y})}var g=Xw(c,r,l,d),v=a.get(g.y,g.x,n);return{position:c,part:Fw[n],score:v}}function Yw(e,t,n,a,i,r){var s=t.shape[2],o=qw.length,p=new Array(s),l=e.part,d=e.score,u=Uw(l,a,n);p[l.id]={score:d,part:Fw[l.id],position:u};for(var c=o-1;c>=0;--c){var h=qw[c],m=jw[c];p[h]&&!p[m]&&(p[m]=Kw(c,p[h],m,t,n,a,r))}for(c=0;c<o;++c)h=jw[c],m=qw[c],p[h]&&!p[m]&&(p[m]=Kw(c,p[h],m,t,n,a,i));return p}function Zw(e,t,n,a){var i=n.x,r=n.y;return e.some((function(e){var n=e.keypoints[a].position;return function(e,t,n,a){var i=n-e,r=a-t;return i*i+r*r}(r,i,n.y,n.x)<=t}))}function Qw(e,t,n){return n.reduce((function(n,a,i){var r=a.position,s=a.score;return Zw(e,t,r,i)||(n+=s),n}),0)/n.length}function Jw(e,t,n,a,i,r,s,o){void 0===s&&(s=.5),void 0===o&&(o=20);for(var p=[],l=function(e,t,n){for(var a=n.shape,i=a[0],r=a[1],s=a[2],o=new Ow(i*r*s,(function(e){return e.score})),p=0;p<i;++p)for(var l=0;l<r;++l)for(var d=0;d<s;++d){var u=n.get(p,l,d);u<e||Bw(d,u,p,l,1,n)&&o.enqueue({score:u,part:{heatmapY:p,heatmapX:l,id:d}})}return o}(s,0,e),d=o*o;p.length<r&&!l.empty();){var u=l.dequeue();if(!Zw(p,d,Uw(u.part,i,t),u.part.id)){var c=Yw(u,e,t,i,n,a),h=Qw(p,d,c);p.push({keypoints:c,score:h})}}return p}function e_(e,t,n,a){return{y:a.get(e,t,n),x:a.get(e,t,n+$w)}}function t_(e,t,n){return(0,iu.tidy)((function(){var a=function(e,t){for(var n=[],a=0;a<$w;a++){var i=e_(e.get(a,0).valueOf(),e.get(a,1).valueOf(),a,t),r=i.x,s=i.y;n.push(s),n.push(r)}return(0,iu.tensor2d)(n,[$w,2])}(e,n);return(0,iu.add)((0,iu.cast)((0,iu.mul)(e.toTensor(),(0,iu.scalar)(t,"int32")),"float32"),a)}))}function n_(e,t,n){return kw(this,void 0,void 0,(function(){var a,i,r,s,o,p,l,d,u,c;return Dw(this,(function(h){switch(h.label){case 0:return a=0,i=function(e){var t=e.shape,n=t[0],a=t[1],i=t[2];return(0,iu.tidy)((function(){var t=(0,iu.reshape)(e,[n*a,i]),r=(0,iu.argMax)(t,0),s=(0,iu.expandDims)((0,iu.div)(r,(0,iu.scalar)(a,"int32")),1),o=(0,iu.expandDims)(function(e,t){return(0,iu.tidy)((function(){var n=(0,iu.div)(e,(0,iu.scalar)(t,"int32"));return(0,iu.sub)(e,(0,iu.mul)(n,(0,iu.scalar)(t,"int32")))}))}(r,a),1);return(0,iu.concat)([s,o],1)}))}(e),[4,Promise.all([e.buffer(),t.buffer(),i.buffer()])];case 1:return r=h.sent(),s=r[0],o=r[1],p=r[2],[4,(l=t_(p,n,o)).buffer()];case 2:return d=h.sent(),u=Array.from(function(e,t){for(var n=t.shape[0],a=new Float32Array(n),i=0;i<n;i++){var r=t.get(i,0),s=t.get(i,1);a[i]=e.get(r,s,i)}return a}(s,p)),c=u.map((function(e,t){return a+=e,{position:{y:d.get(t,0),x:d.get(t,1)},part:Fw[t],score:e}})),i.dispose(),l.dispose(),[2,{keypoints:c,score:a/c.length}]}}))}))}var a_=[-123.15,-115.9,-103.06];function i_(e){return kw(this,void 0,void 0,(function(){return Dw(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}!function(e){function t(){return null!==e&&e.apply(this,arguments)||this}Iw(t,e),t.prototype.preprocessInput=function(e){return(0,iu.add)(e,a_)},t.prototype.nameOutputResults=function(e){var t=e[0],n=e[1];return{offsets:e[2],heatmap:e[3],displacementFwd:t,displacementBwd:n}}}(Pw),Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY;var r_=[8,16,32];function s_(e,t){return(e-1)%t==0}function o_(e){return e instanceof iu.Tensor?[e.shape[0],e.shape[1]]:[e.height,e.width]}function p_(e,t){var n=t[0],a=t[1],i=o_(e),r=i[0],s=i[1],o=a/n,p=[0,0,0,0],l=p[0],d=p[1],u=p[2],c=p[3];return s/r<o?(l=0,d=0,u=Math.round(.5*(o*r-s)),c=Math.round(.5*(o*r-s))):(l=Math.round(.5*(1/o*s-r)),d=Math.round(.5*(1/o*s-r)),u=0,c=0),{resized:(0,iu.tidy)((function(){var t=function(e){return e instanceof iu.Tensor?e:iu.browser.fromPixels(e)}(e);return t=(0,iu.pad3d)(t,[[l,d],[u,c],[0,0]]),iu.image.resizeBilinear(t,[n,a])})),padding:{top:l,left:u,right:c,bottom:d}}}function l_(e,t,n,a,i){var r=t[0],s=t[1],o=n[0],p=n[1],l=function(e,t,n,a,i){return void 0===a&&(a=0),void 0===i&&(i=0),1===n&&1===t&&0===a&&0===i?e:e.map((function(e){return function(e,t,n,a,i){return void 0===a&&(a=0),void 0===i&&(i=0),{score:e.score,keypoints:e.keypoints.map((function(e){var r=e.score,s=e.part,o=e.position;return{score:r,part:s,position:{x:o.x*n+i,y:o.y*t+a}}}))}}(e,t,n,a,i)}))}(e,(r+a.top+a.bottom)/o,(s+a.left+a.right)/p,-a.top,-a.left);return i?function(e,t){return t<=0?e:e.map((function(e){return function(e,t){return{score:e.score,keypoints:e.keypoints.map((function(e){var n=e.score,a=e.part,i=e.position;return{score:n,part:a,position:{x:t-1-i.x,y:i.y}}}))}}(e,t)}))}(l,s):l}var d_={flipHorizontal:!1},u_={flipHorizontal:!1,maxDetections:5,scoreThreshold:.5,nmsRadius:20};!function(){function e(e,t){(function(e){iu.util.assert("number"==typeof e,(function(){return"outputStride is not a number"})),iu.util.assert(r_.indexOf(e)>=0,(function(){return"outputStride of "+e+" is invalid. It must be either 8, 16, or 32"}))})(e.outputStride),function(e,t){iu.util.assert("number"==typeof e[0]&&"number"==typeof e[1],(function(){return"both resolution values must be a number but had values "+e})),iu.util.assert(s_(e[0],t),(function(){return"height of "+e[0]+" is invalid for output stride "+t+"."})),iu.util.assert(s_(e[1],t),(function(){return"width of "+e[1]+" is invalid for output stride "+t+"."}))}(t,e.outputStride),this.baseModel=e,this.inputResolution=t}e.prototype.estimateMultiplePoses=function(e,t){return void 0===t&&(t=u_),kw(this,void 0,void 0,(function(){var n,a,i,r,s,o,p,l,d,u,c,h,m,f,g,v,y,x,b,w,_;return Dw(this,(function(S){switch(S.label){case 0:return n=Rw({},u_,t),function(e){var t=e.maxDetections,n=e.scoreThreshold,a=e.nmsRadius;if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(n<0||n>1)throw new Error("Invalid scoreThreshold "+n+". Should be in range [0.0, 1.0]");if(a<=0)throw new Error("Invalid nmsRadius "+a+".")}(t),a=this.baseModel.outputStride,i=this.inputResolution,r=o_(e),s=r[0],o=r[1],p=p_(e,i),l=p.resized,d=p.padding,u=this.baseModel.predict(l),c=u.heatmapScores,h=u.offsets,m=u.displacementFwd,f=u.displacementBwd,[4,i_([c,h,m,f])];case 1:return g=S.sent(),v=g[0],y=g[1],x=g[2],b=g[3],[4,Jw(v,y,x,b,a,n.maxDetections,n.scoreThreshold,n.nmsRadius)];case 2:return w=S.sent(),_=l_(w,[s,o],i,d,n.flipHorizontal),c.dispose(),h.dispose(),m.dispose(),f.dispose(),l.dispose(),[2,_]}}))}))},e.prototype.estimateSinglePose=function(e,t){return void 0===t&&(t=d_),kw(this,void 0,void 0,(function(){var n,a,i,r,s,o,p,l,d,u,c,h,m,f,g,v;return Dw(this,(function(y){switch(y.label){case 0:return n=Rw({},d_,t),a=this.baseModel.outputStride,i=this.inputResolution,r=o_(e),s=r[0],o=r[1],p=p_(e,i),l=p.resized,d=p.padding,u=this.baseModel.predict(l),c=u.heatmapScores,h=u.offsets,m=u.displacementFwd,f=u.displacementBwd,[4,n_(c,h,a)];case 1:return g=y.sent(),v=l_([g],[s,o],i,d,n.flipHorizontal),c.dispose(),h.dispose(),m.dispose(),f.dispose(),l.dispose(),[2,v[0]]}}))}))},e.prototype.estimatePoses=function(e,t){return kw(this,void 0,void 0,(function(){return Dw(this,(function(n){switch(n.label){case 0:return"single-person"!==t.decodingMethod?[3,2]:[4,this.estimateSinglePose(e,t)];case 1:return[2,[n.sent()]];case 2:return[2,this.estimateMultiplePoses(e,t)]}}))}))},e.prototype.dispose=function(){this.baseModel.dispose()}}(),Sl.y,_l.L.pose,Sl.K,_l.L.plane,_l.L.text,_l.L.sphere,_l.L.box,_l.L.bulb;const c_=.5*(Math.sqrt(3)-1),h_=(3-Math.sqrt(3))/6,m_=1/6,f_=(Math.sqrt(5)-1)/4,g_=(5-Math.sqrt(5))/20,v_=new Float32Array([1,1,0,-1,1,0,1,-1,0,-1,-1,0,1,0,1,-1,0,1,1,0,-1,-1,0,-1,0,1,1,0,-1,1,0,1,-1,0,-1,-1]),y_=new Float32Array([0,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,1,0,1,1,1,0,1,-1,1,0,-1,1,1,0,-1,-1,-1,0,1,1,-1,0,1,-1,-1,0,-1,1,-1,0,-1,-1,1,1,0,1,1,1,0,-1,1,-1,0,1,1,-1,0,-1,-1,1,0,1,-1,1,0,-1,-1,-1,0,1,-1,-1,0,-1,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,0]);new class{constructor(e=Math.random){const t="function"==typeof e?e:function(e){let t=0,n=0,a=0,i=1;const r=function(){let e=4022871197;return function(t){t=t.toString();for(let n=0;n<t.length;n++){e+=t.charCodeAt(n);let a=.02519603282416938*e;e=a>>>0,a-=e,a*=e,e=a>>>0,a-=e,e+=4294967296*a}return 2.3283064365386963e-10*(e>>>0)}}();return t=r(" "),n=r(" "),a=r(" "),t-=r(e),t<0&&(t+=1),n-=r(e),n<0&&(n+=1),a-=r(e),a<0&&(a+=1),function(){const e=2091639*t+2.3283064365386963e-10*i;return t=n,n=a,a=e-(i=0|e)}}(e);this.p=function(e){const t=new Uint8Array(256);for(let e=0;e<256;e++)t[e]=e;for(let n=0;n<255;n++){const a=n+~~(e()*(256-n)),i=t[n];t[n]=t[a],t[a]=i}return t}(t),this.perm=new Uint8Array(512),this.permMod12=new Uint8Array(512);for(let e=0;e<512;e++)this.perm[e]=this.p[255&e],this.permMod12[e]=this.perm[e]%12}noise2D(e,t){const n=this.permMod12,a=this.perm;let i=0,r=0,s=0;const o=(e+t)*c_,p=Math.floor(e+o),l=Math.floor(t+o),d=(p+l)*h_,u=e-(p-d),c=t-(l-d);let h,m;u>c?(h=1,m=0):(h=0,m=1);const f=u-h+h_,g=c-m+h_,v=u-1+2*h_,y=c-1+2*h_,x=255&p,b=255&l;let w=.5-u*u-c*c;if(w>=0){const e=3*n[x+a[b]];w*=w,i=w*w*(v_[e]*u+v_[e+1]*c)}let _=.5-f*f-g*g;if(_>=0){const e=3*n[x+h+a[b+m]];_*=_,r=_*_*(v_[e]*f+v_[e+1]*g)}let S=.5-v*v-y*y;if(S>=0){const e=3*n[x+1+a[b+1]];S*=S,s=S*S*(v_[e]*v+v_[e+1]*y)}return 70*(i+r+s)}noise3D(e,t,n){const a=this.permMod12,i=this.perm;let r,s,o,p;const l=.3333333333333333*(e+t+n),d=Math.floor(e+l),u=Math.floor(t+l),c=Math.floor(n+l),h=(d+u+c)*m_,m=e-(d-h),f=t-(u-h),g=n-(c-h);let v,y,x,b,w,_;m>=f?f>=g?(v=1,y=0,x=0,b=1,w=1,_=0):m>=g?(v=1,y=0,x=0,b=1,w=0,_=1):(v=0,y=0,x=1,b=1,w=0,_=1):f<g?(v=0,y=0,x=1,b=0,w=1,_=1):m<g?(v=0,y=1,x=0,b=0,w=1,_=1):(v=0,y=1,x=0,b=1,w=1,_=0);const S=m-v+m_,T=f-y+m_,E=g-x+m_,M=m-b+2*m_,N=f-w+2*m_,C=g-_+2*m_,A=m-1+.5,I=f-1+.5,R=g-1+.5,k=255&d,D=255&u,P=255&c;let L=.6-m*m-f*f-g*g;if(L<0)r=0;else{const e=3*a[k+i[D+i[P]]];L*=L,r=L*L*(v_[e]*m+v_[e+1]*f+v_[e+2]*g)}let O=.6-S*S-T*T-E*E;if(O<0)s=0;else{const e=3*a[k+v+i[D+y+i[P+x]]];O*=O,s=O*O*(v_[e]*S+v_[e+1]*T+v_[e+2]*E)}let B=.6-M*M-N*N-C*C;if(B<0)o=0;else{const e=3*a[k+b+i[D+w+i[P+_]]];B*=B,o=B*B*(v_[e]*M+v_[e+1]*N+v_[e+2]*C)}let F=.6-A*A-I*I-R*R;if(F<0)p=0;else{const e=3*a[k+1+i[D+1+i[P+1]]];F*=F,p=F*F*(v_[e]*A+v_[e+1]*I+v_[e+2]*R)}return 32*(r+s+o+p)}noise4D(e,t,n,a){const i=this.perm;let r,s,o,p,l;const d=(e+t+n+a)*f_,u=Math.floor(e+d),c=Math.floor(t+d),h=Math.floor(n+d),m=Math.floor(a+d),f=(u+c+h+m)*g_,g=e-(u-f),v=t-(c-f),y=n-(h-f),x=a-(m-f);let b=0,w=0,_=0,S=0;g>v?b++:w++,g>y?b++:_++,g>x?b++:S++,v>y?w++:_++,v>x?w++:S++,y>x?_++:S++;const T=b>=3?1:0,E=w>=3?1:0,M=_>=3?1:0,N=S>=3?1:0,C=b>=2?1:0,A=w>=2?1:0,I=_>=2?1:0,R=S>=2?1:0,k=b>=1?1:0,D=w>=1?1:0,P=_>=1?1:0,L=S>=1?1:0,O=g-T+g_,B=v-E+g_,F=y-M+g_,$=x-N+g_,V=g-C+2*g_,z=v-A+2*g_,U=y-I+2*g_,G=x-R+2*g_,W=g-k+3*g_,H=v-D+3*g_,q=y-P+3*g_,j=x-L+3*g_,X=g-1+4*g_,K=v-1+4*g_,Y=y-1+4*g_,Z=x-1+4*g_,Q=255&u,J=255&c,ee=255&h,te=255&m;let ne=.6-g*g-v*v-y*y-x*x;if(ne<0)r=0;else{const e=i[Q+i[J+i[ee+i[te]]]]%32*4;ne*=ne,r=ne*ne*(y_[e]*g+y_[e+1]*v+y_[e+2]*y+y_[e+3]*x)}let ae=.6-O*O-B*B-F*F-$*$;if(ae<0)s=0;else{const e=i[Q+T+i[J+E+i[ee+M+i[te+N]]]]%32*4;ae*=ae,s=ae*ae*(y_[e]*O+y_[e+1]*B+y_[e+2]*F+y_[e+3]*$)}let ie=.6-V*V-z*z-U*U-G*G;if(ie<0)o=0;else{const e=i[Q+C+i[J+A+i[ee+I+i[te+R]]]]%32*4;ie*=ie,o=ie*ie*(y_[e]*V+y_[e+1]*z+y_[e+2]*U+y_[e+3]*G)}let re=.6-W*W-H*H-q*q-j*j;if(re<0)p=0;else{const e=i[Q+k+i[J+D+i[ee+P+i[te+L]]]]%32*4;re*=re,p=re*re*(y_[e]*W+y_[e+1]*H+y_[e+2]*q+y_[e+3]*j)}let se=.6-X*X-K*K-Y*Y-Z*Z;if(se<0)l=0;else{const e=i[Q+1+i[J+1+i[ee+1+i[te+1]]]]%32*4;se*=se,l=se*se*(y_[e]*X+y_[e+1]*K+y_[e+2]*Y+y_[e+3]*Z)}return 27*(r+s+o+p+l)}},_l.L.cloth})()})();